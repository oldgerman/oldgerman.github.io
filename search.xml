<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mR-71-RE校准测试</title>
      <link href="/b8304ba5/"/>
      <url>/b8304ba5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.radiokot.ru/" target="_blank" rel="noopener"><img src="https://www.radiokot.ru/files/button.gif" width="88" height="31" border="0" hspace="0" vspace="0" alt="РадиоКОТ - популярно об электронике. Авторские схемы, новые разработки. Обучение по электронике, микроконтроллерам, ПЛИС. Форум"></a></p><h2 id="相关文章"><a class="markdownIt-Anchor" href="#相关文章"></a> 相关文章</h2><p><a href="https://oldgerman.github.io/1d2ecca7/">mR-71-RE组装指南</a></p><h2 id="电池"><a class="markdownIt-Anchor" href="#电池"></a> 电池</h2><h3 id="锂电池续航"><a class="markdownIt-Anchor" href="#锂电池续航"></a> 锂电池续航</h3><p>850mA锂电池，约4到6.5小时</p><h3 id="锂电池电流"><a class="markdownIt-Anchor" href="#锂电池电流"></a> 锂电池电流</h3><table><thead><tr><th>状态</th><th>挡位</th><th>电流</th></tr></thead><tbody><tr><td>关机</td><td>N/A</td><td>&lt;1uA</td></tr><tr><td>开机，测试夹开路</td><td>1KΩ</td><td>128~129mA</td></tr><tr><td>开机，测试夹短路</td><td>3Ω</td><td>192～195mA</td></tr></tbody></table><h2 id="校准"><a class="markdownIt-Anchor" href="#校准"></a> 校准</h2><h3 id="开路短路电阻校准"><a class="markdownIt-Anchor" href="#开路短路电阻校准"></a> 开路短路+电阻校准</h3><p>参见<a href="https://radiokot.ru/artfiles/6673/" target="_blank" rel="noopener">原文</a></p><p>校准后的一些测量效果：</p><a id="more"></a><table><thead><tr><th><img src="/b8304ba5/mR-71-RE_Test_1KHz(1).JPG" alt="mR-71-RE_Test_1KHz(2)"></th><th><img src="/b8304ba5/mR-71-RE_Test_1KHz(2).JPG" alt="mR-71-RE_Test_1KHz(3)"></th></tr></thead><tbody><tr><td>3Ω 0.1%</td><td>1KΩ 0.1%</td></tr><tr><td><img src="/b8304ba5/mR-71-RE_Test_1KHz(3).JPG" alt="mR-71-RE_Test_1KHz(4)"></td><td><img src="/b8304ba5/mR-71-RE_Test_1KHz(4).JPG" alt="mR-71-RE_Test_1KHz(1)"></td></tr><tr><td>4线短路</td><td>1mΩ 1%</td></tr></tbody></table><h3 id="问题校准后再次短路夹子时还是会有几mω底数"><a class="markdownIt-Anchor" href="#问题校准后再次短路夹子时还是会有几mω底数"></a> 问题：校准后再次短路夹子时，还是会有几mΩ底数？</h3><p>参考：<a href="https://www.hioki.co.jp/file/cmw/userguides/3813/pdf/?action=browser&amp;log=0&amp;lang=jp" target="_blank" rel="noopener">日置电阻计RM3544用户指南</a>：P9（开尔文测试夹调零）、P10（电流电压探针调零）</p><p><img src="/b8304ba5/%E6%97%A5%E7%BD%AE%E7%94%B5%E9%98%BB%E8%AE%A1RM3544%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97%EF%BC%9A%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%E5%92%8C%E7%94%B5%E5%8E%8B%E7%94%B5%E6%B5%81%E6%8E%A2%E9%92%88%E8%B0%83%E9%9B%B6.png" alt></p><p>如果校准时短路夹子的姿势随意，测量时也随意短路夹子，那么各个挡位可能还会有几mΩ底数，测量小于10mΩ的电阻误差会比较大，产生这种现象的原因，可能是短路夹子时，受到了上图R<sub>short</sub>的影响：激励源（AD8066）电流流过R<sub>short</sub>的压降被仪放（AD8221）测得，R<sub>short</sub>串入回路也影响了短路时的电流（被AD8606测得）</p><p>这种情况可以再进行一次开路短路校准，以避免R<sub>short</sub>的影响，根据测试夹具的不同，短路的姿势也稍有不同：</p><ul><li>开尔文测试夹：交错夹在一起时，电流端的触片优先叠在一起，电压端的触片优先叠在一起</li><li>电流电压探针：电流端互相短路，电压端互相短路，然后两个短路节点互相短路</li></ul><p>mR-71-RE 正面从上到下座子分别是：</p><ul><li>L<sub>CUR</sub>：电流激励低端</li><li>L<sub>POT</sub>：电压取样低端</li><li>H<sub>POT</sub>：电压取样高端</li><li>H<sub>CUR</sub>：电流激励高端</li></ul><p>短路夹子时，夹序可以是：</p><ul><li>H<sub>CUR</sub>、L<sub>CUR</sub>、H<sub>POT</sub>、L<sub>POT</sub></li><li>L<sub>CUR</sub>、H<sub>CUR</sub>、L<sub>POT</sub>、H<sub>POT</sub></li></ul><p>这样短路夹子校准后，再以同样的方式短路夹子时，15Hz和1KHz底数可小于0.05mΩ，然后就能较为准确地测量开尔文电阻测试板上的毫欧电阻了</p><p>PS：100KHz底数仍不太稳定，建议测量时开启相对测量，或更换其他夹具</p><h2 id="测量"><a class="markdownIt-Anchor" href="#测量"></a> 测量</h2><p>以当前这台的情况看，作为一个交流低阻计，它合格了，15Hz或1KHz下对量程边界的1mΩ和200KΩ的电阻测量误差约±2%</p><p>作为一种LCR表，它的量程偏小，另外受限于目前所用的夹具，最大测量范围无法稳定发挥</p><h3 id="原版mr-71性能特征"><a class="markdownIt-Anchor" href="#原版mr-71性能特征"></a> 原版mR-71性能特征</h3><ul><li>同时测量值：R、C/L、Q/tg、Z</li><li>测试信号跨度：不大于±100mV Vp-p</li><li>通过被测电路的电流（显示）：不大于40mA</li><li>测量频率：15Hz、1KHz、100KHz</li><li>连接：4 线（开尔文）</li><li>被测电路去耦直流电压：≤±25V</li><li>自动选择等效方案</li><li>自动选择量程</li><li>支持相对测量模式（R、L、C）</li></ul><p>测量范围：</p><ul><li>R：1mΩ...1MΩ，分辨率从 1uΩ 起</li><li>L：1nH...10H，分辨率从 10pH 起</li><li>C：10pF...100mF，分辨率从 0.1pF 起</li></ul><h3 id="夹具的影响"><a class="markdownIt-Anchor" href="#夹具的影响"></a> 夹具的影响</h3><p>参考：<a href="https://docs.keysight.com/kkbopen/lcr100ohm" target="_blank" rel="noopener">LCR表使用自制夹具如何才能精确的测试小于100ohm阻抗的器件</a></p><p>虽然开路和短路校准可以补偿夹具和测试线杂散参数对测量结果的影响，但与开尔文测试夹连接的四根RG316线缆，都是以MCX连接器与主机相连的。MCX的优点是，连接处可以360度旋转适应线缆的角度，但用了一段时间，发现这也是显著的缺点。旋转或拉扯的次数多了，MCX连接处就会松动，测量元件时不同的夹持姿势，可能会影响MCX连接处的接触情况，即测试线的杂散参数变化了，那么以前保存的开路和短路校准数据不再适用，尤其在高测试频率下，这种变化对测量结果影响很大，例如在100KHz时，两夹子间的距离、线缆长度或形状、MCX连接器的旋转角度，都对测量值有较大影响</p><p>这种影响可以通过引线更短，覆盖范围更小，接触更稳定的夹具降低，由于固件能保存5种夹具的校准数据，诸位可以自行发挥，设计多种夹具试试</p><p>常见台式电桥的夹具，不论轴向、SMD、开尔文夹，均通过有4个BNC连接器的金属盒与机器相连：</p><p><a href="http://www.lokmita.lt/en/test,measurement/component,testers/lcr,meters/lcr,accessories/test,fixture,for,axial,radial,leaded,components,up,to,30mhz,lcr,05a.html" target="_blank" rel="noopener">Lokmita test fixture</a>（左）、<a href="https://www.keysight.com/us/en/product/16034G/smd-test-fixture.html" target="_blank" rel="noopener">Keysight 16034G</a>（中）、<a href="https://www.keysight.com/us/en/product/16089A/large-kelvin-clip-lead.html" target="_blank" rel="noopener">Keysight 16089A</a>（右）</p><p><img src="/b8304ba5/%E5%A4%B9%E5%85%B7%EF%BC%9A%E5%8F%B0%E5%BC%8FLCR%E5%A4%B9%E5%85%B7.png" alt></p><h3 id="重制版mr-71先决条件"><a class="markdownIt-Anchor" href="#重制版mr-71先决条件"></a> 重制版mR-71先决条件</h3><blockquote><p>由于条件有限，目前只记录了一台设备的测量数据，结果不具备普遍性</p><p>如果你也有测量数据，欢迎整理成表格或文档提交到<a href="https://github.com/oldgerman/mR-71-RE" target="_blank" rel="noopener">仓库</a>，也可以在评论区留言或私信</p></blockquote><p>环境温度约20度，电池电量充足，远离干扰源</p><p>仪表放大器的增益电阻用3.6K 0.1% 叠焊300K 0.1%</p><p>菜单设置：Filtering：设置为默认的 1.000，以观察在最弱滤波效果下读数的跳动幅度，该值越小，读数的滤波效果越强，最小可设置为 0.008</p><p>3R挡各个频率短路夹子时的底数</p><ul><li>15Hz：最大+0.03mΩ</li><li>1KHz：最大-0.01mΩ</li><li>100KHz：最大+1.60mΩ</li></ul><p>未开启相对测量模式，测量时水平方向左右各一个夹子的夹测试件</p><p>目前使用的开尔文测试线，在100KHz时，两夹子间的距离、线缆长度或形状、MCX连接器的旋转角度，都对测量值有较大影响</p><p>表格中某些测量值由<code>值±值</code>构成，在测量时，读数抖动的最差值，某些值的几个尾数都是0，是抖动太快，而都记为0，对于读数比较稳定的，可能省略误差值；某些测量值标<code>N/A</code>，表示测不出来或测量值没有参考价值</p><p>测量值左侧不同颜色的圆圈，代表读数随夹具的姿势影响大小，或夹具稳定时读数的跳动幅度：较小🟢（小于±1%）、适中🟡（±1%到±5%）、较大🟠（±5%到±25%）、很大🔴（大于±25%）</p><p>由于记录数据非常耗时，测量结果省略副参，不考虑重复测量误差</p><h3 id="测量电阻"><a class="markdownIt-Anchor" href="#测量电阻"></a> 测量：电阻</h3><table><thead><tr><th><img src="/b8304ba5/%E6%B5%8B%E9%87%8F%EF%BC%9A%E7%94%B5%E9%98%BB%EF%BC%9A%E5%BC%80%E5%B0%94%E6%96%87%E7%94%B5%E9%98%BB%E6%B5%8B%E8%AF%95%E6%9D%BF.jpg" alt></th><th><img src="/b8304ba5/%E6%B5%8B%E9%87%8F%EF%BC%9A%E7%94%B5%E9%98%BB%EF%BC%9A%E5%BC%80%E5%B0%94%E6%96%87%E7%94%B5%E9%98%BB%E6%B5%8B%E8%AF%95%E6%9D%BF%EF%BC%9A%E5%A4%B9%E5%AD%90%E5%A4%B9%E6%8C%81%E5%A7%BF%E5%8A%BF.jpg" alt="测量：电阻：开尔文电阻测试板：夹子夹持姿势"></th></tr></thead></table><p>1mΩ ~ 100mΩ，±1%，全员2512</p><table><thead><tr><th>型号</th><th>阻值</th><th>误差</th><th>温漂</th><th>功率</th><th>封装</th><th>挡位</th><th>频率：15Hz</th><th>频率：1KHz</th><th>频率：100KHz</th></tr></thead><tbody><tr><td>PA2512FKE7W0R001E</td><td>1mΩ</td><td>±1%</td><td>±50ppm/℃</td><td>2W</td><td>2512</td><td>3Ω，3Ω，3Ω</td><td>🟡0.9878mΩ±0.0249mΩ</td><td>🟢0.9871mΩ±0.0068mΩ</td><td>🔴1.0200mΩ±0.4100mΩ</td></tr><tr><td>PA2512FKE7W0R01E</td><td>10mΩ</td><td>±1%</td><td>±50ppm/℃</td><td>2W</td><td>2512</td><td>3Ω，3Ω，3Ω</td><td>🟢10.077mΩ±0.023mΩ</td><td>🟢10.037mΩ±0.007mΩ</td><td>🟠10.480mΩ±1.120mΩ</td></tr><tr><td>HoJLR2512-3W-100mR-1%</td><td>100mΩ</td><td>±1%</td><td>±50ppm/℃</td><td>3W</td><td>2512</td><td>3Ω，3Ω，3Ω</td><td>🟢99.460mΩ±0.030mΩ</td><td>🟢99.372mΩ±0.006mΩ</td><td>🟢99.416mΩ±0.474mΩ</td></tr></tbody></table><p>1Ω ~ 1MΩ，±0.1%，全员1206</p><table><thead><tr><th>型号</th><th>阻值</th><th>误差</th><th>温漂</th><th>功率</th><th>封装</th><th>挡位</th><th>频率：15Hz</th><th>频率：1KHz</th><th>频率：100KHz</th></tr></thead><tbody><tr><td>RT1206BRD071RL</td><td>1Ω</td><td>±0.1%</td><td>±25ppm/℃</td><td>250mW</td><td>1206</td><td>3Ω，3Ω，3Ω</td><td>🟢1.0023Ω±0.0001Ω</td><td>🟢1.0020Ω±0.0001Ω</td><td>🟢1.0022Ω±0.0001Ω</td></tr><tr><td>ARG06BTC0100</td><td>10Ω</td><td>±0.1%</td><td>±25ppm/℃</td><td>250mW</td><td>1206</td><td>3Ω，3Ω，3Ω</td><td>🟢9.9920Ω±0.0006Ω</td><td>🟢9.9929Ω±0.0002Ω</td><td>🟢10.007Ω±0.001Ω</td></tr><tr><td>ARG06BTC1000</td><td>100Ω</td><td>±0.1%</td><td>±25ppm/℃</td><td>250mW</td><td>1206</td><td>1K，1K，3Ω</td><td>🟢100.16Ω±0.01Ω</td><td>🟢100.14Ω±0.01Ω</td><td>🟢100.06Ω±0.01Ω</td></tr><tr><td>ARG06BTC1001</td><td>1KΩ</td><td>±0.1%</td><td>±25ppm/℃</td><td>250mW</td><td>1206</td><td>1K，1K，1K</td><td>🟢1.0002KΩ±0.0001KΩ</td><td>🟢1.0002KΩ±0.0001KΩ</td><td>🟢1.0022KΩ±0.0001KΩ</td></tr><tr><td>ARG06BTC1002</td><td>10KΩ</td><td>±0.1%</td><td>±25ppm/℃</td><td>250mW</td><td>1206</td><td>1K，1K，1K</td><td>🟢9.9786KΩ±0.0010KΩ</td><td>🟢9.9806KΩ±0.0007KΩ</td><td>🟢10.225KΩ±0.002KΩ</td></tr><tr><td>ARG06BTC1003</td><td>100KΩ</td><td>±0.1%</td><td>±25ppm/℃</td><td>250mW</td><td>1206</td><td>1K，1K，1K</td><td>🟢100.62KΩ±0.10KΩ</td><td>🟢100.60KΩ±0.03KΩ</td><td>🟢102.34KΩ±0.06KΩ</td></tr><tr><td>ARG06BTC1004</td><td>1MΩ</td><td>±0.1%</td><td>±25ppm/℃</td><td>250mW</td><td>1206</td><td>1K，1K，1K</td><td>🟠1.0736MΩ±0.0951MΩ</td><td>🟠1.0450MΩ±0.0654MΩ</td><td>🟠0.9600MΩ±0.1000MΩ</td></tr></tbody></table><h3 id="测量电容"><a class="markdownIt-Anchor" href="#测量电容"></a> 测量：电容</h3><blockquote><p>注：II类陶瓷的MLCC具有高介电常数（介于3,000 (X7R) 到18,000 (Z5U)），施加直流或交流电压都会导致容量减少，而I类陶瓷的MLCC（C0G，介于6到200）几乎不受这种影响</p><p>参考：</p><ul><li><a href="https://article.murata.com/zh-cn/article/voltage-characteristics-of-electrostatic-capacitance" target="_blank" rel="noopener">村田：静电容量的电压特性</a></li><li><a href="https://www.ti.com.cn/cn/lit/an/zhct400a/zhct400a.pdf?ts=1711851223330" target="_blank" rel="noopener">Ti：选择尽可能减少音频应用失真的电容器</a></li></ul></blockquote><p>10pF ~ 100nF，±1%，C0G，I类陶瓷MLCC，全员1206</p><table><thead><tr><th>型号</th><th>容值</th><th>误差</th><th>电压</th><th>类型</th><th>封装</th><th>挡位</th><th>频率：15Hz</th><th>频率：1KHz</th><th>频率：100KHz</th></tr></thead><tbody><tr><td>CC1206FRNPO9BN100</td><td>10pF</td><td>±1%</td><td>50V</td><td>C0G</td><td>1206</td><td>1K，1K，1K</td><td>🔴N/A</td><td>🟠19.862pF±6.708pF</td><td>🟢10.087pF±0.007pF</td></tr><tr><td>CC1206FRNPO9BN101</td><td>100pF</td><td>±1%</td><td>50V</td><td>C0G</td><td>1206</td><td>1K，1K，1K</td><td>🔴N/A</td><td>🟢88.446pF±0.314pF</td><td>🟢97.821pF±0.083pF</td></tr><tr><td>CC1206FRNPO9BN102</td><td>1nF</td><td>±1%</td><td>50V</td><td>C0G</td><td>1206</td><td>1K，1K，1K</td><td>🟠1.2400nF±0.2300nF</td><td>🟢1.0036nF±0.0007nF</td><td>🟢1.0046nF±0.0022nF</td></tr><tr><td>CC1206FKNPO9BN103</td><td>10nF</td><td>±1%</td><td>50V</td><td>C0G</td><td>1206</td><td>1K，1K，1K</td><td>🟡9.200nF±0.2000nF</td><td>🟢9.9995nF±0.0005nF</td><td>🟢9.6054nF±0.0124nF</td></tr><tr><td>GRM31C5C1H104FA01L</td><td>100nF</td><td>±1%</td><td>50V</td><td>C0G</td><td>1206</td><td>1K，1K，3Ω</td><td>🟢98.579nF±0.099nF</td><td>🟢99.221nF±0.001nF</td><td>🟢98.936nF±0.038nF</td></tr></tbody></table><p>1uF ~ 100uF ，±5%，MKP电容</p><table><thead><tr><th>型号</th><th>容值</th><th>误差</th><th>电压</th><th>类型</th><th>封装</th><th>挡位</th><th>频率：15Hz</th><th>频率：1KHz</th><th>频率：100KHz</th></tr></thead><tbody><tr><td>MKP1839510254</td><td>1uF</td><td>±5%</td><td>250V</td><td>MKP</td><td>轴向</td><td>1K，1K，1K</td><td>🟡1.024uF±0.032uF</td><td>🟢0.9915uF±0.0005uF</td><td>🟢1.0361uF±0.0038uF</td></tr><tr><td>MKP20106J2EAC461625</td><td>10uF</td><td>±5%</td><td>250V</td><td>MKP</td><td>轴向</td><td>3Ω，3Ω，3Ω</td><td>🟢9.8162uF±0.0552uF</td><td>🟢9.8206uF±0.0003uF</td><td>🔴7.7880uF±2.6880uF</td></tr><tr><td>WLS1070800</td><td>100uF</td><td>±5%</td><td>800V</td><td>MKP</td><td>轴向</td><td>3Ω，3Ω，3Ω</td><td>🟢101.22uF±0.04uF</td><td>🟢100.42uF±0.01uF</td><td>🔴N/A</td></tr></tbody></table><p>1uF ~ 100uF，±10%，X5R，II类陶瓷MLCC，容量受测量信号减少显著</p><table><thead><tr><th>型号</th><th>容值</th><th>误差</th><th>电压</th><th>类型</th><th>封装</th><th>挡位</th><th>频率：15Hz</th><th>频率：1KHz</th><th>频率：100KHz</th></tr></thead><tbody><tr><td>CL10A105KB8NNNC</td><td>1uF</td><td>±10%</td><td>50V</td><td>x5R</td><td>0603</td><td>1K，1K，1K</td><td>🟢795.99nF±0.15nF</td><td>🟢794.09nF±0.27nF</td><td>🟢720.03nF±0.16nF</td></tr><tr><td>CL31A106KBHNNNE</td><td>10uF</td><td>±10%</td><td>50V</td><td>x5R</td><td>1206</td><td>3Ω，3Ω，3Ω</td><td>🟢7.0731uF±0.0586uF</td><td>🟢7.0041uF±0.0027uF</td><td>🟠5.8105uF±1.4174uF</td></tr><tr><td>GRM31CR60J107KEA8L</td><td>100uF</td><td>±10%</td><td>6.3V</td><td>x5R</td><td>1206</td><td>3Ω，3Ω，3Ω</td><td>🟢80.085uF±0.042uF</td><td>🟢76.986uF±0.012uF</td><td>🔴29.400uF±10.453uF</td></tr></tbody></table><p>4.7uF ~ 470uF，±10%，固体钽电容</p><table><thead><tr><th>型号</th><th>容值</th><th>误差</th><th>电压</th><th>类型</th><th>封装</th><th>挡位</th><th>频率：15Hz</th><th>频率：1KHz</th><th>频率：100KHz</th></tr></thead><tbody><tr><td>293D475X9050D2TE3</td><td>4.7uF</td><td>±10%</td><td>50V</td><td>钽</td><td>7343</td><td>3Ω，3Ω，3Ω</td><td>🟡4.4065uF±0.1045uF</td><td>🟢4.5959uF±0.0001uF</td><td>🟠3.5065uF±0.5465uF</td></tr><tr><td>293D476X9020D2TE3</td><td>47uF</td><td>±10%</td><td>20V</td><td>钽</td><td>7343</td><td>3Ω，3Ω，3Ω</td><td>🟢47.320uF±0.301uF</td><td>🟢45.149uF±0.099uF</td><td>🟠20.883uF±9.112uF</td></tr><tr><td>293D477X96R3D2TE3</td><td>470uF</td><td>±10%</td><td>10V</td><td>钽</td><td>7343</td><td>3Ω，3Ω，3Ω</td><td>🟢506.77uF±0.04uF</td><td>🟢459.93uF±0.01uF</td><td>🔴N/A</td></tr></tbody></table><p>10uF ~ 1000uF，±10%，普通钽电容</p><table><thead><tr><th>型号</th><th>容值</th><th>误差</th><th>电压</th><th>类型</th><th>封装</th><th>挡位</th><th>频率：15Hz</th><th>频率：1KHz</th><th>频率：100KHz</th></tr></thead><tbody><tr><td>TAJD106K035RNJ</td><td>10uF</td><td>±10%</td><td>35V</td><td>钽</td><td>7343</td><td>3Ω，3Ω，3Ω</td><td>🟢10.086uF±0.086uF</td><td>🟠9.4841uF±0.4834uF</td><td>🔴7.9668uF±1.9986uF</td></tr><tr><td>TAJD107K020RNJ</td><td>100uF</td><td>±10%</td><td>20V</td><td>钽</td><td>7343</td><td>3Ω，3Ω，3Ω</td><td>🟢100.08uF±0.03uF</td><td>🟢95.212uF±0.002uF</td><td>🔴44.923uF±24.429uF</td></tr><tr><td>T491X108K006AT</td><td>1000uF</td><td>±10%</td><td>6.3V</td><td>钽</td><td>7343</td><td>3Ω，3Ω，3Ω</td><td>🟢1.1450mF±0.0001mF</td><td>🟢908.65uF±4.12uF</td><td>🔴N/A</td></tr></tbody></table><p>10000uF ~ 100000uF，±20%，铝电解电容</p><table><thead><tr><th>型号</th><th>容值</th><th>误差</th><th>电压</th><th>类型</th><th>封装</th><th>挡位</th><th>频率：15Hz</th><th>频率：1KHz</th><th>频率：100KHz</th></tr></thead><tbody><tr><td>LSG103M1V--A2540</td><td>10000uF</td><td>±20%</td><td>35V</td><td>铝电解</td><td>牛角型</td><td>3Ω，3Ω，3Ω</td><td>🟢10.053mF±0.003mF</td><td>🟡8.8900mF±0.1888mF</td><td>🔴N/A</td></tr><tr><td>B41456B5100M000</td><td>100000uF</td><td>±20%</td><td>25V</td><td>铝电解</td><td>螺栓型</td><td>3Ω，3Ω，3Ω</td><td>🟢94.950mF±0.039mF</td><td>🔴100.06mF±45.94mF</td><td>🔴N/A</td></tr></tbody></table><h3 id="测量电感"><a class="markdownIt-Anchor" href="#测量电感"></a> 测量：电感</h3><p>100nH ~ 100uH，±20%，一体成型电感，随便找了几个</p><table><thead><tr><th>型号</th><th>感值</th><th>误差</th><th>类型</th><th>封装</th><th>挡位</th><th>频率：15Hz</th><th>频率：1KHz</th><th>频率：100KHz</th></tr></thead><tbody><tr><td>显卡供电上拆的</td><td>100nH</td><td>±20%</td><td>一体成型</td><td>0630</td><td>3Ω，3Ω，3Ω</td><td>🔴N/A</td><td>🔴145.77nH±67.71nH</td><td>🔴152.06nH±72.13nH</td></tr><tr><td>APH0420T1R0M</td><td>1uH</td><td>±20%</td><td>一体成型</td><td>0420</td><td>3Ω，3Ω，3Ω</td><td>🔴N/A</td><td>🟠1.0410uH±0.0719uH</td><td>🟡1.1034uH±0.0721uH</td></tr><tr><td>SLO0420H100MTT</td><td>10uH</td><td>±20%</td><td>一体成型</td><td>0420</td><td>3Ω，3Ω，3Ω</td><td>🟠8.2850uH±1.9650uH</td><td>🟢10.486uH±0.026uH</td><td>🟢10.228uH±0.026uH</td></tr><tr><td>CYA1265-100UH</td><td>100uH</td><td>±20%</td><td>一体成型</td><td>1265</td><td>3Ω，3Ω，3Ω</td><td>🟢113.63uH±0.32uH</td><td>🟢111.90uHuH±0.01uH</td><td>🟢124.62uH±0.01uH</td></tr></tbody></table><p>1mH ~ 100mH，±10%，色环电感</p><table><thead><tr><th>型号</th><th>感值</th><th>误差</th><th>类型</th><th>封装</th><th>挡位</th><th>频率：15Hz</th><th>频率：1KHz</th><th>频率：100KHz</th></tr></thead><tbody><tr><td>XR0510-102</td><td>1mH</td><td>±10%</td><td>色环</td><td>插件</td><td>3Ω，3Ω，3Ω</td><td>🟢1.0031mH±0.0021mH</td><td>🟢977.38uH±0.35uH</td><td>🟢861.99uH±0.55uH</td></tr><tr><td>XR0510-103</td><td>10mH</td><td>±10%</td><td>色环</td><td>插件</td><td>1K，1K，1K</td><td>🟢10.181mH±0.082mH</td><td>🟢9.7007mH±0.0220mH</td><td>🟢9.3157mH±0.0072mH</td></tr><tr><td>XR0514-104</td><td>100mH</td><td>±10%</td><td>色环</td><td>插件</td><td>1K，1K，1K</td><td>🟢100.74mH±0.17mH</td><td>🟢98.143mH±0.001mH</td><td>🟠177.60mH±11.60mH</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 仪表制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 仪表测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mR-71-RE组装指南</title>
      <link href="/1d2ecca7/"/>
      <url>/1d2ecca7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.radiokot.ru/" target="_blank" rel="noopener"><img src="https://www.radiokot.ru/files/button.gif" width="88" height="31" border="0" hspace="0" vspace="0" alt="РадиоКОТ - популярно об электронике. Авторские схемы, новые разработки. Обучение по электронике, микроконтроллерам, ПЛИС. Форум"></a></p><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><blockquote><p>本文和附加资料解决mR-71交流欧姆表重制版制作和使用问题，免费给有意DIY的朋友参考，请不要将其用作商业用途！</p><p>你第一次接触到本套文件可能是压缩包，内容可能滞后，制作前请访问原始链接检查更新：</p><ul><li>本文网页版链接： <a href="https://oldgerman.github.io/1d2ecca7/">https://oldgerman.github.io/1d2ecca7/</a></li><li>附加资料仓库链接：<a href="https://github.com/oldgerman/mR-71-RE" target="_blank" rel="noopener">https://github.com/oldgerman/mR-71-RE</a></li></ul></blockquote><a id="more"></a><p><a href="https://github.com/oldgerman/mR-71-RE" target="_blank" rel="noopener">mR-71-RE</a> 是基于 <a href="https://www.radiokot.ru/forum/memberlist.php?mode=viewprofile&amp;u=21307" target="_blank" rel="noopener">Andrey_B</a> 的作品 <a href="https://radiokot.ru/artfiles/6673/" target="_blank" rel="noopener">交流欧姆表 mR-71</a> 修改的</p><p>虽搬砖细节诸多，但本文按组装顺序排列章节，在这及相关链接可找到从零到正常工作的所有信息，欢迎DIY</p><table><thead><tr><th><img src="/1d2ecca7/mR-71-RE6%EF%BC%9A1%E5%8F%B72%E5%8F%B7%E6%9C%BA%E6%88%90%E5%93%81%E5%9B%BE%EF%BC%9A1.jpg" alt="mR-71-RE6：1号2号机成品图：2"></th><th><img src="/1d2ecca7/mR-71-RE6%EF%BC%9A%E5%88%9D%E5%8F%B7%E6%9C%BA%E6%88%90%E5%93%81%E5%9B%BE%EF%BC%9A2.jpg" alt></th></tr></thead><tbody><tr><td><img src="/1d2ecca7/mR-71-RE6%EF%BC%9A%E5%88%9D%E5%8F%B7%E6%9C%BA%E6%88%90%E5%93%81%E5%9B%BE%EF%BC%9A5.jpg" alt></td><td><img src="/1d2ecca7/mR-71-RE6%EF%BC%9A%E5%88%9D%E5%8F%B7%E6%9C%BA%E6%88%90%E5%93%81%E5%9B%BE%EF%BC%9A4.jpg" alt></td></tr></tbody></table><h2 id="关于原版mr-71"><a class="markdownIt-Anchor" href="#关于原版mr-71"></a> 关于原版mR-71</h2><h3 id="作者"><a class="markdownIt-Anchor" href="#作者"></a> 作者</h3><p><a href="https://radiokot.ru/artfiles/6673/" target="_blank" rel="noopener">原版mR-71</a> 由 <a href="https://www.radiokot.ru/forum/memberlist.php?mode=viewprofile&amp;u=21307" target="_blank" rel="noopener">Andrey_B</a> 设计，在radiokot论坛发布</p><h3 id="pcb和固件"><a class="markdownIt-Anchor" href="#pcb和固件"></a> PCB和固件</h3><p>截至2024/03/19</p><ul><li><p>PCB版本：第1版</p></li><li><p>固件版本：<a href="https://disk.yandex.ru/d/7r-Sy9olLtvGCg/FirmWare" target="_blank" rel="noopener">v0.2</a></p><blockquote><p>固件只提供hex格式，不提供源码，不需要注册</p><p>v0.2相比v0.1，可保存5组不同探头的校准数据</p></blockquote></li></ul><h3 id="相关链接"><a class="markdownIt-Anchor" href="#相关链接"></a> 相关链接</h3><p>以下链接需要科学上网、俄语翻译</p><p><a href="https://radiokot.ru/artfiles/6673/" target="_blank" rel="noopener">文章：交流欧姆表 mR-71</a></p><blockquote><p>文章最后的文件：Gerber、固件v0.1、元件位置图、原理图</p></blockquote><p><a href="https://disk.yandex.ru/d/7r-Sy9olLtvGCg" target="_blank" rel="noopener">网盘</a></p><blockquote><p>固件v0.2、演示视频、探头接触PCB</p></blockquote><p><a href="http://www.radiokot.ru/forum/viewtopic.php?t=180822" target="_blank" rel="noopener">讨论贴</a></p><blockquote><p>作者发布mR-71文章后的讨论贴</p></blockquote><p><a href="https://www.radiokot.ru/forum/viewtopic.php?f=10&amp;t=179105" target="_blank" rel="noopener">帖子主题：低电阻计</a></p><blockquote><p>作者早期分享低阻计想法的讨论贴</p></blockquote><h2 id="关于重制版mr-71"><a class="markdownIt-Anchor" href="#关于重制版mr-71"></a> 关于重制版mR-71</h2><p>重制版mR-71 由 <a href="https://github.com/oldgerman" target="_blank" rel="noopener">OldGerman</a> 设计，制作文件在 <a href="https://github.com/oldgerman/mR-71-RE" target="_blank" rel="noopener">GitHub</a>、<a href="https://gitee.com/oldgerman/mR-71-RE" target="_blank" rel="noopener">Gitee</a> 发布</p><h3 id="pcb主板"><a class="markdownIt-Anchor" href="#pcb主板"></a> PCB：主板</h3><p>原版mR-71硬件有点粗犷，2层PCB长边尺寸超过10cm，布局和布线还可优化</p><p>重制版mR-71设计紧凑，4层PCB，上下板由BTB连接，4线测试夹以MCX同轴连接器连接，配有经久耐用的外壳，还支持IPS全视角屏幕</p><p>模拟部分的主要修改：</p><ul><li><p>供电修改：将原版的12V DCDC供电的运放，改为低噪声LM27762正负5V供电，LM27762由TPS63000升压供电</p></li><li><p>运放修改：将原版的MCP4392、INA828、MCP6022，分别用AD8066、AD8221、AD8606代替</p></li><li><p>1.5V 缓冲运放电路修改：原版可能发生自激震荡，修改为二阶压控电压源(VCVS)低通滤波</p></li><li><p>增加一路AC耦合：DAC2_OS增加AC耦合，以适配正负5V供电的运放</p></li></ul><p>虽然样机工作起来还算正常，但由于水平有限，对于修改的地方，不敢保证完全没有问题，如果你发现了潜在的错误或改进的空间，欢迎提出宝贵的建议🙏</p><table><thead><tr><th><img src="/1d2ecca7/PCB_mR-71-RE_v1.1%EF%BC%9A1.png" alt="PCB_mR-71-RE_1"></th><th><img src="/1d2ecca7/PCB_mR-71-RE_v1.1%EF%BC%9A2.png" alt="PCB_mR-71-RE_2"></th></tr></thead></table><ul><li>板厚：<span style="color:red;">1.0 mm</span></li><li>层数：4</li><li>尺寸：7.34 x 7.12 cm</li><li>焊盘总数：700</li><li>软件：Altium 23.3.1</li><li>版本：v1.1</li><li><a href="https://github.com/oldgerman/mR-71-RE/tree/master/Gerber/mR-71-RE" target="_blank" rel="noopener">Gerber</a></li><li><a href="https://github.com/oldgerman/mR-71-RE/tree/master/Schematic" target="_blank" rel="noopener">原理图</a></li></ul><h3 id="pcb开尔文焊盘电阻测试板"><a class="markdownIt-Anchor" href="#pcb开尔文焊盘电阻测试板"></a> PCB：开尔文焊盘电阻测试板</h3><p>方便开尔文夹子测试低阻值采样电阻，支持2512和1206封装</p><p>也可焊接校准的3Ω和1KΩ的0.1%电阻</p><p>该板是明显的拼版，通常是不能免费打样的</p><p>这些电阻的焊盘设计参考了ADI的文章：<a href="https://www.analog.com/en/resources/analog-dialogue/articles/optimize-high-current-sensing-accuracy.html" target="_blank" rel="noopener">Optimize High-Current Sensing Accuracy by Improving Pad Layout of Low-Value Shunt Resistors</a></p><table><thead><tr><th><img src="/1d2ecca7/PCB_Kelvin_RES_1.png" alt="PCB_Kelvin_RES_1"></th><th><img src="/1d2ecca7/PCB_Kelvin_RES_2.png" alt="PCB_Kelvin_RES_2"></th></tr></thead></table><ul><li>板厚：1.6mm</li><li>层数：2</li><li>尺寸：9.70 x 6.78 cm</li><li>软件：JLCEDA-Pro</li><li>版本：v1.0</li><li><a href="https://github.com/oldgerman/mR-71-RE/tree/master/Gerber/Kelvin_RES" target="_blank" rel="noopener">Gerber</a></li></ul><h3 id="pcbrg316转接板"><a class="markdownIt-Anchor" href="#pcbrg316转接板"></a> PCB：RG316转接板</h3><p>制作一套RG316线的开尔文夹子需要两片该PCB，用于连接开尔文夹子的接触片和RG316线</p><table><thead><tr><th><img src="/1d2ecca7/PCB_RG316_To_Kelvin_Clip_1.png" alt="PCB_RG316_To_Kelvin_Clip_1"></th><th><img src="/1d2ecca7/PCB_RG316_To_Kelvin_Clip_2.png" alt="PCB_RG316_To_Kelvin_Clip_2"></th></tr></thead></table><ul><li>板厚：1.6mm</li><li>层数：2</li><li>尺寸：3.04 x 0.6 cm</li><li>软件：JLCEDA-Pro</li><li>版本：没有版本</li><li><a href="https://github.com/oldgerman/mR-71-RE/tree/master/Gerber/Kelvin_Clip_RG316_To_PCB" target="_blank" rel="noopener">Gerber</a></li></ul><h3 id="外壳"><a class="markdownIt-Anchor" href="#外壳"></a> 外壳</h3><p>盒盖设计，壳厚2mm，确保经久耐用</p><table><thead><tr><th><img src="/1d2ecca7/mR-71-RE6_%E5%A4%96%E5%A3%B3SW%EF%BC%9A0.png" alt="mR-71-RE6_外壳SW：0"></th><th><img src="/1d2ecca7/mR-71-RE6_%E5%A4%96%E5%A3%B3SW%EF%BC%9A1.png" alt="mR-71-RE6_外壳SW：1"></th></tr></thead></table><ul><li><a href="https://github.com/oldgerman/mR-71-RE/tree/master/STL/" target="_blank" rel="noopener">STL</a></li></ul><h2 id="采购"><a class="markdownIt-Anchor" href="#采购"></a> 采购</h2><h3 id="主机电子元件-bom"><a class="markdownIt-Anchor" href="#主机电子元件-bom"></a> 主机电子元件 BOM</h3><p><a href="https://github.com/oldgerman/mR-71-RE/tree/master/BOM" target="_blank" rel="noopener">BOM</a>文件夹下的不同文件说明：</p><ul><li>MR-71_RE6_BOM.xlsx：EXCEL格式的BOM文件，灰色条覆盖的是不用焊接的器件，原理图可能与该BOM表格某些器件的值不一样，请以BOM表格的值为准！</li><li>MR-71_RE6_BOM.pdf：EXCEL格式的BOM文件导出的PDF文件</li><li>MR-71_RE6_BOM.html：交互式BOM，浏览器打开即可，该交互BOM不清楚的器件型号请参照上面的EXCEL文件</li></ul><p>电子元件突破80种，一套（电阻电容算到每颗）按照全新原装报价，费用约111元，不包括邮费</p><p>有些元件标了多个参数，以左数第一个参数为准，在BOM表格中，某些元件的最后侧附上了具体型号，是我制作时使用的元件型号，建议优先考虑，也可以找规格的相似的型号替代</p><p>元件参数有的是DNP，不用焊接，DNP是Do Not Populate的缩写，意思是不用贴装的元件</p><p>仪表放大器的增益电阻可以用3.57KΩ 0.1%（增益误差±0.1% -0.34%），如果要求高可以用3.6KΩ 0.1% 叠焊 300KΩ 0.1%（增益误差±0.2% ）</p><blockquote><p>注：AD8221在G=10下的增益误差为0.3%</p><p>为啥这么麻烦？去年做这玩意的时候，原版用的 INA828 售价150￥每片，它的增益公式里是50K，于是我换成便宜的AD8221，它的增益公式里是49.4K</p></blockquote><h3 id="开尔文测试夹"><a class="markdownIt-Anchor" href="#开尔文测试夹"></a> 开尔文测试夹</h3><p>开尔文测试夹：2个，挑贵的牙口好的</p><p><a href="https://item.taobao.com/item.htm?id=745222539795" target="_blank" rel="noopener">RG316 MCX直公头转焊接 0.5m</a>：4条</p><p>热缩管：开尔文夹子若不附带，则需直径12MM的<span style="color:red;">低温</span>热缩管，红色+黑色</p><h3 id="校准电阻"><a class="markdownIt-Anchor" href="#校准电阻"></a> 校准电阻</h3><blockquote><p>mR-71完全校准使用，发烧友可以用更高精度的绕线电阻</p></blockquote><ul><li>1206 3Ω 0.1%</li><li>1206 1KΩ 0.1%</li></ul><h3 id="开尔文焊盘电阻测试板"><a class="markdownIt-Anchor" href="#开尔文焊盘电阻测试板"></a> 开尔文焊盘电阻测试板</h3><ul><li>2mm镀金香蕉座（K2A33）：50~100个</li><li>2512合金采样电阻：1mΩ、10mΩ、100mΩ</li><li>1206千分之一电阻：1Ω、10Ω、100Ω、1KΩ、10KΩ、100KΩ、1MΩ</li></ul><h3 id="外壳-2"><a class="markdownIt-Anchor" href="#外壳-2"></a> 外壳</h3><p>外壳固定用的五金件</p><ul><li><p>不锈钢内六角螺丝杯头 x4规格：M1.6x12 (螺纹/螺纹的长度)，<a href="https://item.taobao.com/item.htm?id=40272016203" target="_blank" rel="noopener">链接</a></p></li><li><p>注塑热熔铜滚花螺母 x4规格：外2.5 M1.6 2.0高，<a href="https://item.taobao.com/item.htm?id=39063858665" target="_blank" rel="noopener">链接</a></p></li><li><p>内六角扳手：对边1.5mm，拧外壳的M1.6杯头螺丝</p></li></ul><p>工具</p><ul><li><p>打磨：小平锉刀，圆锉刀，砂纸等</p></li><li><p>测量：游标卡尺</p></li></ul><h2 id="构建"><a class="markdownIt-Anchor" href="#构建"></a> 构建</h2><h3 id="主机"><a class="markdownIt-Anchor" href="#主机"></a> 主机</h3><p>注：以下图片都是v1.0版本的PCB，最新PCB为v1.1版本，PCB上的丝印有版本号</p><h4 id="分板"><a class="markdownIt-Anchor" href="#分板"></a> 分板</h4><p>请用壁纸刀沿着PCB分板的两条白线中间正反面多划几下，掰断分板后，用锉刀+砂纸打磨至分板的白线消失</p><p><img src="/1d2ecca7/mR-71-RE%EF%BC%9APCB%E5%88%86%E6%9D%BF.JPG" alt="mR-71-RE：PCB分板"></p><h4 id="钢网"><a class="markdownIt-Anchor" href="#钢网"></a> 钢网</h4><p>请把用于开钢网的<a href="https://github.com/oldgerman/mR-71-RE/tree/master/Gerber/mR-71_RE_Stencil" target="_blank" rel="noopener">GTP</a>文件发给厂家开10x10cm的钢片</p><p>此钢网还拼了开尔文焊盘电阻测试板的钢网，方便焊接</p><p><img src="/1d2ecca7/20240321_mR-71_RE6_Stencil_10x10cm.png" alt></p><p>刷锡膏前，用多余的板垫在四周，防止钢网翘曲</p><table><thead><tr><th><img src="/1d2ecca7/mR-71-RE%EF%BC%9A%E9%92%A2%E7%BD%91%EF%BC%9A%E5%88%B7%E9%94%A1%E8%86%8F%EF%BC%9A1.JPG" alt="IMG_6569"></th><th><img src="/1d2ecca7/mR-71-RE%EF%BC%9A%E9%92%A2%E7%BD%91%EF%BC%9A%E5%88%B7%E9%94%A1%E8%86%8F%EF%BC%9A2.JPG" alt="IMG_6571"></th></tr></thead></table><p>对照交互式BOM摆元件，然后热风枪回流焊即可</p><table><thead><tr><th><img src="/1d2ecca7/mR-71-RE%EF%BC%9A%E9%92%A2%E7%BD%91%EF%BC%9A%E5%88%B7%E9%94%A1%E8%86%8F%EF%BC%9A3.JPG" alt="mR-71-RE：钢网：刷锡膏：3"></th><th><img src="/1d2ecca7/mR-71-RE%EF%BC%9A%E9%92%A2%E7%BD%91%EF%BC%9A%E5%9B%9E%E6%B5%81%E7%84%8A%EF%BC%9A1.JPG" alt="mR-71-RE：钢网：回流焊：1"></th></tr></thead></table><h4 id="建议电烙铁焊接的元件"><a class="markdownIt-Anchor" href="#建议电烙铁焊接的元件"></a> 建议电烙铁焊接的元件</h4><ul><li>1个：欧姆龙信号继电器</li><li>2个：220uF电容（需要自己用镊子折弯引脚）</li><li>4个：MCX母座</li></ul><h4 id="电池接线"><a class="markdownIt-Anchor" href="#电池接线"></a> 电池接线</h4><p>成品1.25mm超薄端子线序可能是反的，可用镊子尖挑起塑料弹片拔出端子，交换一下线序</p><p>剪掉电池引线留一小段，剪掉多余的1.25mm线，焊接在一起，热缩管包好</p><p>（也可拆开电池的金手指胶带重新焊接）</p><table><thead><tr><th><img src="/1d2ecca7/%E7%94%B5%E6%B1%A0%E5%BC%95%E7%BA%BF%EF%BC%9A%E7%BA%BF%E5%BA%8F.jpg" alt="088460253B8957981FA963E5E7D27AB9"></th><th><img src="/1d2ecca7/%E7%94%B5%E6%B1%A0%E5%BC%95%E7%BA%BF%EF%BC%9A%E6%8E%A5%E7%BA%BF.jpg" alt="IMG_6859"></th></tr></thead></table><h4 id="焊接完成效果"><a class="markdownIt-Anchor" href="#焊接完成效果"></a> 焊接完成效果</h4><table><thead><tr><th><img src="/1d2ecca7/mR-71-RE%EF%BC%9Av1.0_PCB%EF%BC%9A1.JPG" alt="mR-71-RE：v1.0_PCB：1"></th><th><img src="/1d2ecca7/mR-71-RE%EF%BC%9Av1.0_PCB%EF%BC%9A2.JPG" alt="mR-71-RE：v1.0_PCB：2"></th></tr></thead></table><h3 id="固件烧录"><a class="markdownIt-Anchor" href="#固件烧录"></a> 固件烧录</h3><p>若使用非全视角的TFT屏幕，请用原版的<a href="https://disk.yandex.ru/d/7r-Sy9olLtvGCg/FirmWare" target="_blank" rel="noopener">v0.2固件</a></p><p>若使用全视角的IPS屏幕，请用我反汇编修改过的<a href="https://github.com/oldgerman/mR-71-RE/blob/master/Hex/" target="_blank" rel="noopener">v0.2固件</a></p><p>从ST官网安装并打开<a href="https://www.st.com/en/development-tools/stm32cubeprog.html" target="_blank" rel="noopener">STM32CubeProgrammer</a>软件，全程按住正面的中键不放，接着按一次背面的BOOT键，在软件的烧录方式里选择USB，点刷新一下，会识别到设备，点击连接，打开修改版固件，点击烧录，烧录完成后可松开中键，再按一次中键即可开机</p><p>（也可以通过SWD接口刷固件，就不罗嗦了）</p><h3 id="开尔文测试夹-2"><a class="markdownIt-Anchor" href="#开尔文测试夹-2"></a> 开尔文测试夹</h3><table><thead><tr><th><img src="/1d2ecca7/%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%EF%BC%9A1%EF%BC%9ARG316%E8%BD%AC%E6%8E%A5%E6%9D%BF%E5%88%86%E6%9D%BF.jpg" alt="IMG_6675"></th><th><img src="/1d2ecca7/%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%EF%BC%9A2%EF%BC%9A%E6%8B%86%E8%A7%A3%E5%A4%B9%E5%AD%90.jpg" alt="IMG_6670"></th></tr></thead><tbody><tr><td>将RG316转接板一分为二</td><td>拆解夹子，取出压簧，接触片</td></tr><tr><td><img src="/1d2ecca7/%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%EF%BC%9A3%EF%BC%9A%E5%BC%AF%E6%8A%98%E5%8E%8B%E7%B0%A7%E5%B9%B6%E5%89%AA%E6%96%AD%E5%A4%9A%E4%BD%99%E7%9A%84%E6%9C%AB%E7%AB%AF.jpg" alt="IMG_6671"></td><td><img src="/1d2ecca7/%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%EF%BC%9A4%EF%BC%9A%E5%A4%84%E7%90%86%E5%90%8E%E7%9A%84%E5%8E%8B%E7%B0%A7%E9%95%BF%E5%BA%A6%E5%8F%82%E8%80%83.jpg" alt="IMG_6697"></td></tr><tr><td>用钳子对压簧的长边折弯出新的90度末端，多余的部分剪断</td><td>处理后的压簧长度：折弯处距离圈圈约31mm</td></tr><tr><td><img src="/1d2ecca7/%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%EF%BC%9A5%EF%BC%9A%E5%90%B8%E9%94%A1%E5%B8%A6%E6%B8%85%E7%90%86%E8%A7%A6%E7%89%87%E9%A2%84%E7%BD%AE%E7%9A%84%E9%94%A1%E7%82%B9.jpg" alt="IMG_6676"></td><td><img src="/1d2ecca7/%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%EF%BC%9A6%EF%BC%9ARG316%E8%BD%AC%E6%8E%A5%E6%9D%BF%E7%84%8A%E6%8E%A5.jpg" alt="IMG_6681"></td></tr><tr><td>吸锡带清理触片预置的锡点</td><td>取下接触片上的塑料绝缘垫片，转接板的焊盘上锡膏，使用风枪回流焊接</td></tr><tr><td><img src="/1d2ecca7/%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%EF%BC%9A7%EF%BC%9A%E7%84%8A%E6%8E%A5RG316%E7%BA%BF.jpg" alt="IMG_6690"></td><td><img src="/1d2ecca7/%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%EF%BC%9A8%EF%BC%9A%E9%87%8D%E6%96%B0%E7%BB%84%E8%A3%85%E5%A4%B9%E5%AD%90.jpg" alt="IMG_6710"></td></tr><tr><td>焊接RG316线</td><td>重新组装夹子：将接触片的绝缘片贴回去，将压簧塞回去，压簧长边的折耳嵌入两道塑料缝中，注意压簧不要与接触片短路（可调整压簧折耳的角度调整避让距离）</td></tr><tr><td><img src="/1d2ecca7/%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%EF%BC%9A9%EF%BC%9A%E7%BC%A9%E7%83%AD%E7%BC%A9%E7%AE%A1.jpg" alt="IMG_6717"></td><td><img src="/1d2ecca7/%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%EF%BC%9A10%EF%BC%9A%E4%B8%80%E5%A5%97%E5%A4%B9%E5%AD%90%E9%9C%80%E5%81%9A%E4%B8%A4%E5%B9%85.jpg" alt="IMG_6723"></td></tr><tr><td>缩热缩管：因为夹子的塑料非常容易受热变形，风枪建议从低温开始尝试</td><td>一套夹子需做两幅</td></tr></tbody></table><h3 id="外壳-3"><a class="markdownIt-Anchor" href="#外壳-3"></a> 外壳</h3><p><a href="https://github.com/oldgerman/mR-71-RE/tree/master/STL/" target="_blank" rel="noopener">STL</a></p><h4 id="独立零件"><a class="markdownIt-Anchor" href="#独立零件"></a> 独立零件</h4><p>提供独立的各个零件，装配图如下</p><p><img src="/1d2ecca7/20240320-1521_mR-71_RE6_shell_single_parts.png" alt></p><h4 id="连接零件"><a class="markdownIt-Anchor" href="#连接零件"></a> 连接零件</h4><blockquote><p>按钮比较多，小于厂家单件最小打印尺寸</p><p>上下壳可能被厂家随意摆放方向，打出来各个方向收缩不一样，装配困难</p><p>因此将所有零件用1.5mm连杆连接，作为一个整体打印</p></blockquote><table><thead><tr><th><img src="/1d2ecca7/20240320-1521_mR-71_RE6_shell_link_parts.png" alt="20240320-1521_mR-71_RE6_shell_link_parts"></th><th><img src="/1d2ecca7/20240320-1521_mR-71_RE6_shell_link_parts%EF%BC%9A%E6%83%A0%E6%99%AEMJF%E6%89%93%E5%8D%B0%E6%A0%B7%E5%93%81.jpg" alt></th></tr></thead></table><p>1套打出来，含上下壳，2套按钮（防止翻车），需用尼龙打印（SLS或MJF成型）</p><ul><li>尺寸: 1.81 x 3.91 x 7.79cm</li><li>体积: 15.64cm³</li><li>表面积: 181.1cm²</li></ul><h4 id="外壳处理"><a class="markdownIt-Anchor" href="#外壳处理"></a> 外壳处理</h4><p>分件后的模型会残留连接杆，如果没有水口钳，可用指甲钳剪去，然后仔细用刀片削平残留的切口，直至切口与周围的表面齐平，否则装配效果不佳</p><p>考虑到成型公差，按钮背面的小凸起加高了0.2mm，按钮装上后可能按不动，可以自己用锉刀小心打磨一下，按钮可能会很紧按不动，也需要小锉刀打磨（平锉刀，圆锉刀），上壳按钮最佳厚度3.7mm，下壳按钮最佳厚度3.2mm</p><table><thead><tr><th><img src="/1d2ecca7/20240320-1521_mR-71_RE6_shell_link_parts%EF%BC%9A%E5%A4%84%E7%90%86%EF%BC%9A1.jpg" alt></th><th><img src="/1d2ecca7/20240320-1521_mR-71_RE6_shell_link_parts%EF%BC%9A%E5%A4%84%E7%90%86%EF%BC%9A3.JPG" alt="20240320-1521_mR-71_RE6_shell_link_parts：处理：3"></th></tr></thead></table><p>外壳的上壳需要使用烙铁埋入4颗注塑滚花螺母，烙铁头的温度不要太高，应调节到不大于外壳材料的打印温度，考虑到公差，预埋孔给的比较小，可以用直径不大于2mm的麻花钻扩孔</p><p>烙铁埋滚花螺母时，融化的耗材可能堵住螺母孔，可以自己加工一个短螺丝堵住孔然后再用烙铁埋：</p><table><thead><tr><th><img src="/1d2ecca7/20240320-1521_mR-71_RE6_shell_link_parts%EF%BC%9A%E5%9F%8B%E7%83%AD%E7%86%94%E6%BB%9A%E8%8A%B1%E8%9E%BA%E6%AF%8D%EF%BC%9A1.jpg" alt></th><th><img src="/1d2ecca7/20240320-1521_mR-71_RE6_shell_link_parts%EF%BC%9A%E5%9F%8B%E7%83%AD%E7%86%94%E6%BB%9A%E8%8A%B1%E8%9E%BA%E6%AF%8D%EF%BC%9A2.jpg" alt></th></tr></thead></table><h2 id="按键操作"><a class="markdownIt-Anchor" href="#按键操作"></a> 按键操作</h2><p>开机页面的英文即是，或可参见<a href="https://radiokot.ru/artfiles/6673/" target="_blank" rel="noopener">原文</a></p><h2 id="校准测试"><a class="markdownIt-Anchor" href="#校准测试"></a> 校准测试</h2><p><a href="https://oldgerman.github.io/b8304ba5/">mR-71-RE校准测试</a></p><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><ul><li>感谢 <a href="https://radiokot.ru/artfiles/6673/" target="_blank" rel="noopener">mR-71</a> 原作者 <a href="https://www.radiokot.ru/forum/memberlist.php?mode=viewprofile&amp;u=21307" target="_blank" rel="noopener">Andrey_B</a></li><li>感谢一同玩 mR-71 的老友们</li><li>感谢 JLC 和 JP 的板子</li></ul>]]></content>
      
      
      <categories>
          
          <category> 仪表制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kicad模型导入SW的技巧</title>
      <link href="/271ae56e/"/>
      <url>/271ae56e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="kicad导出处理"><a class="markdownIt-Anchor" href="#kicad导出处理"></a> Kicad导出处理</h2><p>在Pcbnew程序中，所有的3D封装都要为step模式，导出为step即可</p><h2 id="sw导入处理"><a class="markdownIt-Anchor" href="#sw导入处理"></a> SW导入处理</h2><p>拖拽stp文件到工作区内，弹出两次默认模板无效，两次都选择否，模板选择装配体</p><p><img src="/271ae56e/1.0.png" alt="1.0"></p><p><img src="/271ae56e/1.1.png" alt="1.1"></p><h2 id="将装配体转换为零件"><a class="markdownIt-Anchor" href="#将装配体转换为零件"></a> 将装配体转换为零件</h2><p>这些step模型导入全部识别为装配体，十分累赘，我们全选装配体，右键解散子装配体</p><p><img src="/271ae56e/1.2.png" alt="1.2"></p><p>之后会反复弹窗，按照第2步处理即可</p><a id="more"></a><p><img src="/271ae56e/1.3.png" alt="1.3"></p><h2 id="内部保存零件在装配体中"><a class="markdownIt-Anchor" href="#内部保存零件在装配体中"></a> 内部保存零件在装配体中</h2><p>先保存一下，会弹出需要保存全部零件文档，点击”是“</p><p>然后右键所有零件，使之成为虚拟，即可解除装配体内部零件与保存在外部工程文件夹内的零件的绑定关系</p><p><img src="/271ae56e/1.5.png" alt="1.5"></p><p>点击确认</p><p><img src="/271ae56e/1.6.png" alt="1.6"></p><p>所有零件显示为复件，再一次保存即ok</p><p><img src="/271ae56e/1.7.png" alt="1.7"></p><p>最后我们删除工程目录下由于第四步保存的其他所有零件即可</p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>通过这样的方式，可将Kicad导出的3D PCB转换为一个.SLDASM文件，不需要牵连保存装配体内部的零件或装配体到同一工程目录做外部参考</p><h2 id="附"><a class="markdownIt-Anchor" href="#附"></a> 附</h2><p>SW制作的模型导出为STEP214格式才有颜色信息，Kicad可导入为3D封装使用</p>]]></content>
      
      
      <categories>
          
          <category> PCB设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kicad </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ODGIRON 开源PD电烙铁</title>
      <link href="/d5ffc54/"/>
      <url>/d5ffc54/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="关于"><a class="markdownIt-Anchor" href="#关于"></a> 关于</h2><blockquote><p>这是一个很久以前的项目，也是我刚学习stm32做的第一个项目，仅给老友们发车了10个套件，现将其所有软硬件资料开源</p><p>Github仓库链接：<a href="https://github.com/oldgerman/ODGIRON" target="_blank" rel="noopener">https://github.com/oldgerman/ODGIRON</a></p></blockquote><p>开源USB-C PD T12电烙铁，基于HAL库开发，STM32CubeIDE + STM32CubeMX</p><a id="more"></a><p>固件从 <a href="https://github.com/Ralim/IronOS" target="_blank" rel="noopener">ironOS</a> 修改而来，运行FreeRTOS，更换了主控，重新设计了主界面和多级菜单，更大的oled显示屏，分辨率128x32</p><p>双面板设计，电阻电容最小0603封装，焊接难度比0402小</p><p>前期准备几乎兼容所有QFN48、RAM ≥ 20KB、FLASH ≥ 128KB 的STM32芯片，但后期发现 F103 固件写不下了遂停止维护，主力适配 F401，当然如果你有能力，可自行移植到其他型号上</p><h2 id="技术大纲"><a class="markdownIt-Anchor" href="#技术大纲"></a> 技术大纲</h2><p><img src="/d5ffc54/ODGIRON%E6%8A%80%E6%9C%AF%E5%A4%A7%E7%BA%B2_21-06-27.png" alt="ODGIRON技术大纲_21-06-27"></p><h2 id="成品"><a class="markdownIt-Anchor" href="#成品"></a> 成品</h2><p><img src="/d5ffc54/ODGIRON%EF%BC%880%EF%BC%89.png" alt="ODGIRON（1）"></p><h2 id="硬件"><a class="markdownIt-Anchor" href="#硬件"></a> 硬件</h2><h3 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h3><ul><li>主控：STM32F103CBU6、STM32F401CCU6</li><li>屏幕：0.87inch OLED，SSD1316 分辨率128x32</li><li>PD协议芯片：FUSB302B</li><li>加速度计：LIS3DH</li><li>功率计：INA226</li><li>电源管理：MP2456 + LDO 3.3V</li><li>温度测量：SGM8551 + MCP9700AT</li><li>功率MOS：AON7403（-30V/-29A）*2</li><li>外壳：尼龙3D打印</li></ul><h3 id="pcb"><a class="markdownIt-Anchor" href="#pcb"></a> PCB</h3><p><img src="/d5ffc54/ODGIRON_F4x1_v1.0_Kicad_3D-view-clear.png" alt="ODGIRON_F4x1_v1.0_Kicad_3D-view-clear"></p><h3 id="原理图"><a class="markdownIt-Anchor" href="#原理图"></a> 原理图</h3><p><img src="/d5ffc54/sch_F4x1.png" alt="sch_F4x1"></p><h3 id="外壳"><a class="markdownIt-Anchor" href="#外壳"></a> 外壳</h3><p><img src="/d5ffc54/ODGIRON_SW0.png" alt="ODGIRON_SW0"></p><h2 id="软件"><a class="markdownIt-Anchor" href="#软件"></a> 软件</h2><p><a href="https://github.com/oldgerman/ODGIRON/blob/master/Notes/firmware_logs.md" target="_blank" rel="noopener">固件版本更新日志</a></p><p><a href="https://github.com/oldgerman/ODGIRON/blob/master/Notes/firmware_upgrade.md" target="_blank" rel="noopener">固件升级方法</a></p><h3 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h3><ul><li><p>✔️功率计</p></li><li><p>✔️自动休眠、运动唤醒</p></li><li><p>✔️温度功率曲线绘制</p></li><li><p>✔️USB固件升级</p></li><li><p>✔️多级菜单（可配置的参数太多，只列举几个）</p><ul><li>温度校准</li><li>冷却休眠</li><li>枚举PD挡位</li><li>...</li></ul></li><li><p>✔️断电保存设置</p></li><li><p>待开发</p><ul><li><p>多语言支持（目前仅支持中文）</p></li><li><p>...</p></li></ul></li></ul><h3 id="bug"><a class="markdownIt-Anchor" href="#bug"></a> BUG</h3><p>ADC注入通道测量尖端的温度：STM32F401CCU6偶尔会向上抖动10度，同样的代码在STM32F103CBU6跑却很稳定，可能是ADC时钟频率、采样周期、转换周期不同导致，目前整不好了，但影响不大:)</p><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><blockquote><p>感谢<a href="http://www.miniware.com.cn/" target="_blank" rel="noopener">@Miniware</a>开源的<a href="http://www.minidso.com/forum.php?mod=viewthread&amp;tid=892" target="_blank" rel="noopener">TS100资料</a></p><p>感谢<a href="https://github.com/Ralim" target="_blank" rel="noopener">@Ralim</a>开发的<a href="https://github.com/Ralim/IronOS" target="_blank" rel="noopener">ironOS</a></p><p>感谢<a href="https://github.com/olikraus" target="_blank" rel="noopener">@olikraus</a>开发的<a href="https://github.com/olikraus/u8g2" target="_blank" rel="noopener">u8g2</a></p><p>感谢<a href="https://github.com/Zanduino" target="_blank" rel="noopener">@Zanduino</a>开发的<a href="https://github.com/Zanduino/INA" target="_blank" rel="noopener">INA</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ODGIRON </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCOPE-F07x</title>
      <link href="/b7d79828/"/>
      <url>/b7d79828/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/b7d79828/%E5%A4%96%E5%A3%B3%E8%A3%85%E9%85%8D-0.jpg" alt></p><h3 id="关于"><a class="markdownIt-Anchor" href="#关于"></a> 关于</h3><p><a href="https://github.com/oldgerman/SCOPE-F07x" target="_blank" rel="noopener">SCOPE-F07x</a> 从 <a href="https://github.com/EETree-git/SCOPE-F072" target="_blank" rel="noopener">硬禾SCOPE-F072</a> 开源和公开资料修改&amp;优化</p><p>零零散散修改的地方比较多，详见修改说明部分</p><p><img src="/b7d79828/SCOPE-F07x_MIndMap_Main.png" alt></p><h3 id="pcb"><a class="markdownIt-Anchor" href="#pcb"></a> PCB</h3><p>工艺：</p><ul><li>层数：2</li><li>板厚: 1.0mm</li><li>过孔: 0.3/0.5mm</li><li>线宽线隙: 6mil/6mil</li><li>尺寸: 38x38mm</li></ul><p>封装：绝大多数是0402，物料约40多种</p><a id="more"></a><table><thead><tr><th><img src="/b7d79828/3d_1.png" alt></th><th><img src="/b7d79828/3d_2.png" alt></th><th><img src="/b7d79828/3d_3_png.png" alt></th><th><img src="/b7d79828/3d_4_png.png" alt></th></tr></thead></table><h3 id="外壳"><a class="markdownIt-Anchor" href="#外壳"></a> 外壳</h3><p>硬禾的原始设计配套的外壳有亿点点low，出于情怀我想到经典设计 iPod nano (<em>6th</em> generation)，然而想做到这么简约并非易事</p><p><img src="/b7d79828/wikipedia_IPOD-NANO-6th.png" alt></p><p>经过PCB和建模的各方面努力，外壳OK</p><ul><li>屏幕完美居中</li><li>结构针对FDM成型进行了很多优化，打印全程无需支撑和拉桥</li><li>外壳平均厚度为2mm，免螺丝设计，纯卡扣固定，实测上下壳体卡得极其牢固</li></ul><table><thead><tr><th><img src="/b7d79828/CASE_3D_1.png" alt></th><th><img src="/b7d79828/CASE_3D_2.png" alt></th></tr></thead></table><p>一张 iPod nano 6th 海报同款角度视图 (๑•̀ㅂ•́)و✧</p><p><img src="/b7d79828/SW_six-view_2.png" alt></p><h3 id="散热"><a class="markdownIt-Anchor" href="#散热"></a> 散热</h3><p>OPA4197其中的两个运放作为双路直流电压源，电流范围±30mA，手册 I(sink)和I(source)给的是±65mA，实测输出3.3V电压，负载电流30mA时，没有什么压降，但发热比较大，当增加到40mA开始过热/失调，电压不再稳定，因此推荐加装散热片</p><p>散热片物料：15x15x0.5mm紫铜片、3M 8810导热双面胶、金手指胶带</p><table><thead><tr><th><img src="/b7d79828/%E5%A4%96%E5%A3%B3%E8%A3%85%E9%85%8D_%E6%95%A3%E7%83%AD%E7%89%87(0).jpeg" alt="外壳装配_散热片(0)"></th><th><img src="/b7d79828/%E5%A4%96%E5%A3%B3%E8%A3%85%E9%85%8D(6).jpeg" alt="外壳装配(6)"></th></tr></thead><tbody><tr><td>OPA4197的TSSOP-14封装比较薄，保险起见可以用金手指胶带封住一部分，防止短路，虽然实际距离还挺宽裕</td><td>将导热胶裁剪至合适大小，之后对准中心贴上铜片即可</td></tr></tbody></table><h3 id="修改说明"><a class="markdownIt-Anchor" href="#修改说明"></a> 修改说明</h3><h4 id="硬件"><a class="markdownIt-Anchor" href="#硬件"></a> 硬件</h4><table><thead><tr><th>部分</th><th>原版</th><th>修改</th></tr></thead><tbody><tr><td>Layout</td><td>STM32的模拟和数字共用电源和地，运放有个单独的3.0V电源（不明白为啥不拿这个给STM32的VDDA也供电，猜测因为STM32模拟供电电压要高于数字部分，但是3.0V又比3.3V低了0.3V不合格）</td><td>模数电源和地分离。模拟部分电源从3.0V改为3.3V，也为STM32的VDDA供电，因为这0.3V的变化，运放电路电阻取值经过重新计算，与EEtree的技术指标保持一致</td></tr><tr><td>USB</td><td>Miro USB，仅USB功能</td><td>Type-c 正反插功能不同，正插USB DFU，反插可以用stlink调试（D+: SWCLK，D-: SWDIO）</td></tr><tr><td>运放</td><td>TP2302</td><td>TP2302运放太冷门买不到，改为SGM8632</td></tr><tr><td></td><td>TL974</td><td>TL974 I(source)太弱了只有1.5mA，改为OPA4197</td></tr><tr><td>STM32</td><td>STM32F072CBT6</td><td>换为QFN-48封装，引脚变更较多，兼容STM32F071、STM32F072，071虽然手册没写有USB但是出厂固件的 USB DFU 都有，071当072烧固件USB功能都是完整的，071就是072</td></tr><tr><td>电荷泵</td><td>LM2776</td><td>LM2776过于昂贵，换为便宜很多的SGM3204</td></tr><tr><td>加速度计</td><td>MMA8653</td><td>MMA8653又贵又冷门，换为LIS3DH，拆机的都降价到1元包邮啦</td></tr><tr><td>EEPROM</td><td>24C01</td><td>换为SOT-23封装，容量大小任意</td></tr><tr><td>按键</td><td>2个按键 + 拨轮开关</td><td>拨轮开关换为3个按键，一共5个按键</td></tr></tbody></table><p>备注：其他修改细节见原理图</p><h4 id="软件"><a class="markdownIt-Anchor" href="#软件"></a> 软件</h4><p>原版程序：</p><p>有好几个大的数组(成员数量几百个)，使用静态内存分配，运行时不能释放，导致固件编译后内存使用率95%以上，开Os优化编译后，Flash可用空间还有50KB以上，由于RAM剩余空间紧张，加速度计、EEPROM、屏幕背光、USB通讯、ADC反馈等相关实现被裁剪</p><p><img src="/b7d79828/EETree_%E5%85%A8%E5%B1%80%E5%A4%A7%E6%95%B0%E7%BB%84%E5%8D%A0%E7%94%A8RAM12.57KB.png" alt="EETree_全局大数组占用RAM12.57KB"></p><p>优化目标：</p><p>使用动态内存分配，尽可能实现上述被裁剪的功能</p><p>代码进度：</p><p>目前仅针对修改版PCB做了修改适配，提供工程源码文件，优化还没开始搞，代码等改好了有空再说~</p><h3 id="功能测试"><a class="markdownIt-Anchor" href="#功能测试"></a> 功能测试</h3><table><thead><tr><th>反向放大电路：提供正负电源+信号源、并测量放大后的信号</th><th>可调电压源双路输出20mA-30mA</th><th>可调电压源输出负4V</th></tr></thead><tbody><tr><td><img src="/b7d79828/%E6%B5%8B%E8%AF%95%EF%BC%9ALM358%E5%8F%8D%E5%90%91%E6%94%BE%E5%A4%A7.JPG" alt="测试：LM358反向放大"></td><td><img src="/b7d79828/%E6%B5%8B%E8%AF%95%EF%BC%9A%E5%8F%AF%E8%B0%83%E7%94%B5%E5%8E%8B%E6%BA%90%E5%8F%8C%E8%B7%AF%E8%BE%93%E5%87%BA20mA-30mA.JPG" alt="测试：可调电压源双路输出20mA-30mA"></td><td><img src="/b7d79828/%E6%B5%8B%E8%AF%95%EF%BC%9A%E5%8F%AF%E8%B0%83%E7%94%B5%E5%8E%8B%E6%BA%90%E8%B4%9F4V%E8%BE%93%E5%87%BA.JPG" alt="测试：可调电压源负4V输出"></td></tr></tbody></table><table><thead><tr><th>设定频率</th><th>设定电压</th><th>三角波</th><th>方波</th><th>正弦波</th></tr></thead><tbody><tr><td>100KHz</td><td>±100mV</td><td><img src="/b7d79828/100KHz_-100mV-100mV(1).jpeg" alt="100KHz_-100mV-100mV(1)"></td><td><img src="/b7d79828/100KHz_-100mV-100mV(2).jpeg" alt="100KHz_-100mV-100mV(2)"></td><td><img src="/b7d79828/100KHz_-100mV-100mV(3).jpeg" alt="100KHz_-100mV-100mV(3)"></td></tr><tr><td>10KHz</td><td>±4.0V</td><td><img src="/b7d79828/10KHz_-4V-4V(1).jpeg" alt="10KHz_-4V-4V(1)"></td><td><img src="/b7d79828/10KHz_-4V-4V(2).jpeg" alt="10KHz_-4V-4V(2)"></td><td><img src="/b7d79828/10KHz_-4V-4V(3).jpeg" alt="10KHz_-4V-4V(3)"></td></tr><tr><td>100KHz</td><td>±4.0V</td><td><img src="/b7d79828/100KHz_-4V~4V(1).jpeg" alt="100KHz_-4V~4V(1)"></td><td><img src="/b7d79828/100KHz_-4V~4V(2).jpeg" alt="100KHz_-4V~4V(2)"></td><td><img src="/b7d79828/100KHz_-4V~4V(3).jpeg" alt="100KHz_-4V~4V(3)"></td></tr></tbody></table><h3 id="其他补充"><a class="markdownIt-Anchor" href="#其他补充"></a> 其他&amp;补充</h3><p><strong>一些目录说明</strong></p><ul><li><p><a href="https://github.com/oldgerman/SCOPE-F07x/tree/master/HardWare/AD_Project" target="_blank" rel="noopener">AD工程</a>：提供可编辑的源文件，软件版本2019，PDF的原理图也位于此目录</p></li><li><p><a href="https://github.com/oldgerman/SCOPE-F07x/tree/master/HardWare/SW_Project" target="_blank" rel="noopener">SW工程</a>：提供可编辑的源文件，软件版本2017</p></li><li><p><a href="https://github.com/oldgerman/SCOPE-F07x/tree/master/HardWare/3D_Print" target="_blank" rel="noopener">外壳3D打印模型</a>：STL格式提供，打印一套外壳的话，其中<code>SW_x3_Both_Sides_1.STL</code>需要打两个</p></li><li><p><a href="https://github.com/oldgerman/SCOPE-F07x/tree/master/HardWare/BOM/bom" target="_blank" rel="noopener">BOM</a>：浏览器可直接打开的交互式BOM</p></li><li><p><a href="https://github.com/oldgerman/SCOPE-F07x/tree/master/HardWare/Gerber" target="_blank" rel="noopener">Gerber</a>：整个压缩包就是</p></li><li><p><a href="https://github.com/oldgerman/SCOPE-F07x/tree/master/%E6%9C%8B%E5%8F%8B%E4%BB%AC%E8%87%AA%E9%A9%BE%E7%9A%84%E6%88%90%E5%93%81" target="_blank" rel="noopener">朋友们制作的成品展示</a></p></li></ul><p><strong>按键操作</strong></p><ul><li>KEY_1: 单击切换功能页面</li><li>KEY_2: 单击切换子菜单光标</li><li>KEY_R: 减少值或向左移动</li><li>KEY_O: 确认或取消</li><li>KEY_L: 增大值或向右移动</li></ul><p><strong>USB DFU</strong></p><p>需要在未上电时按住KEY_O不放，插电进入，推荐使用STM32CubeProgrammer的USB模式烧录</p><h3 id="acknowledgments"><a class="markdownIt-Anchor" href="#acknowledgments"></a> Acknowledgments</h3><p>感谢硬禾团队</p><h3 id="license"><a class="markdownIt-Anchor" href="#license"></a> License</h3><p>This work is licensed under a<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.</p><p><a href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener"><img src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png" alt="CC BY-NC-SA 4.0"></a></p>]]></content>
      
      
      <categories>
          
          <category> 仪表制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenHeat-Split</title>
      <link href="/5cea6320/"/>
      <url>/5cea6320/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="关于"><a class="markdownIt-Anchor" href="#关于"></a> 关于</h2><blockquote><p>使用<a href="https://gitee.com/createskyblue/OpenT12" target="_blank" rel="noopener">朱雀固件</a>，PCB从<a href="https://github.com/peng-zhihui/OpenHeat" target="_blank" rel="noopener">OpenHeat</a>修改，主控引脚都不变，oled和编码器做成小板</p><p>该项目还包括热床外壳安装等<s>一条龙服务</s></p><p><span style="color:rgb(255, 50, 50);">免责声明：不恰当的安装可能危及您的生命安全，请确保有一定的强电安全知识！</span></p><p>本资料为可能为压缩包版，不保证为最新版，最新版请访问<a href="https://github.com/oldgerman/OpenHeat-Split" target="_blank" rel="noopener">Github仓库</a></p></blockquote><p><img src="/5cea6320/%E5%88%9D%E5%8F%B7%E6%9C%BA1.jpg" alt></p><h2 id="控制板"><a class="markdownIt-Anchor" href="#控制板"></a> 控制板</h2><ul><li>使用0603封装、可靠性高的连接器</li><li>oled和编码器做成单独的小板子，oled目前是1.3寸，可换2.42寸的（暂未画板，有能力的话可以自己做）</li><li>控制热床加热的MOS：使用便宜又大碗的TO-247封装的管子</li><li>推荐工作电压12~24V，电流小于18A</li></ul><a id="more"></a><table><thead><tr><th><img src="/5cea6320/AD_3Dview_TOP.png" alt="AD_3Dview"></th><th><img src="/5cea6320/AD_2Dview_PCB.png" alt="AD_2Dview"></th></tr></thead></table><p>注：PCB为双面板，板厚1.6mm，需要分板，用壁纸刀沿着白线多划几下掰断，或者锯子伺候</p><table><thead><tr><th><img src="/5cea6320/%E6%8E%A7%E5%88%B6%E6%9D%BF1.JPG" alt></th><th><img src="/5cea6320/%E6%8E%A7%E5%88%B6%E6%9D%BF3.JPG" alt></th></tr></thead><tbody><tr><td>接热床的4针端子使用90度的5569连接器</td><td>接热床的4针端子也可用垂直的5566连接器<br>若不安装K型热电偶连接器，可将热电偶丝直接焊接在焊盘上</td></tr></tbody></table><h2 id="热床"><a class="markdownIt-Anchor" href="#热床"></a> 热床</h2><p><a href="https://oshwhub.com/GeekStartzhan-shuo/GSH_Bed-lv-ji-ban-jia-re-ping-tai" target="_blank" rel="noopener">GeekStart展硕</a>设计的GSH Bed 12V150W版本，线宽28.347mil，实测12V只能加热到185度且此温度下功率约85W</p><p>我修改了该设计，将线加宽到43mil，两侧铜带开窗，使用类似探针方式的接触（免焊接），可通过配置“顶针”位置来兼容12V或24V，热床维持200度时功率约100W，维持230度功率约140W</p><table><thead><tr><th><img src="/5cea6320/2D%E9%A2%84%E8%A7%88%E5%9B%BE.png" alt></th><th><img src="/5cea6320/pcb_layout.png" alt></th></tr></thead></table><h3 id="升温测试"><a class="markdownIt-Anchor" href="#升温测试"></a> 升温测试</h3><table><thead><tr><th>修改前：线宽28mil、Vin= 12.7V、T<sub>环境</sub> = 10℃，2段PID</th><th>修改后：线宽43mil、Vin= 12.7V、T<sub>环境</sub> = 10℃，3段PID</th></tr></thead><tbody><tr><td><img src="/5cea6320/12.7V%E4%BE%9B%E7%94%B5_%E7%BA%BF%E5%AE%BD28mil%E7%83%AD%E5%BA%8A%E6%B8%A9%E5%BA%A6%E5%8A%9F%E7%8E%87%E6%B5%8B%E8%AF%95(2%E7%BA%A7PID%E9%99%90%E5%88%B6).png" alt></td><td><img src="/5cea6320/12.7V%E4%BE%9B%E7%94%B5_%E7%BA%BF%E5%AE%BD43mil%E7%83%AD%E5%BA%8A%E6%B8%A9%E5%BA%A6%E5%8A%9F%E7%8E%87%E6%B5%8B%E8%AF%95(3%E7%BA%A7PID%E9%99%90%E5%88%B6).png" alt></td></tr></tbody></table><h2 id="顶针pcb"><a class="markdownIt-Anchor" href="#顶针pcb"></a> 顶针PCB</h2><table><thead><tr><th><img src="/5cea6320/Pogo_Pin_Board_2.png" alt></th><th><img src="/5cea6320/Pogo_Pin_Board_1.png" alt></th></tr></thead></table><h3 id="为什么需要这块板"><a class="markdownIt-Anchor" href="#为什么需要这块板"></a> 为什么需要这块板？</h3><ol><li>在铝基板和壳体之间隔热</li><li>铝基板导热太强，供电线十分难焊接，且200度左右焊锡会软化</li><li>我使用过<a href="https://item.taobao.com/item.htm?id=555813649830" target="_blank" rel="noopener">华容5A电流探针</a>与热床接触，探针铜镀金的，导热很快，当热床200度以上时探针内部的弹簧会失去弹性，使探针报废</li></ol><h3 id="顶针的位置"><a class="markdownIt-Anchor" href="#顶针的位置"></a> 顶针的位置</h3><p>所以使用探针的计划翻车了，改用纯螺柱代替探针的接触方式，手搓铜柱顶住热床就行，这种接触方式姑且叫顶针吧，顶针用的螺丝螺柱的具体规格请见后文的 安装图：上壳体</p><p>可以通过配置顶针位置，使铝基板热床工作在12V或24V（许多3D打印机热床也有类似的设计），12V使用8枚顶针，24V使用4枚顶针</p><p><img src="/5cea6320/12Vor24V%E6%8E%A2%E9%92%88%E4%BD%8D%E7%BD%AE.png" alt="12Vor24V探针位置"></p><h2 id="外壳"><a class="markdownIt-Anchor" href="#外壳"></a> 外壳</h2><p>裸板并不意味着经久耐用，寻找合适的外壳是件头疼的事情</p><p>使用铝型材外壳，规格125×51×100mm，价格差不多15包邮，需要按开孔图开孔</p><h3 id="pcb尺寸"><a class="markdownIt-Anchor" href="#pcb尺寸"></a> PCB尺寸</h3><table><thead><tr><th></th><th>尺寸（mm)</th><th>M3孔距（mm)</th></tr></thead><tbody><tr><td>主控板</td><td>100×40</td><td>93.2×33.2</td></tr><tr><td>1.3寸OLED板</td><td>49×36</td><td>43×27</td></tr><tr><td>铝基板热床</td><td>100×100</td><td>93.2×93.2</td></tr></tbody></table><p>为了做到安装不冲突，你可能需要修改本项目PCB源文件：最可能改动的是OLED小板的连接器位置，可见它并不居中，因为我根据目前用的<span style="color:rgb(0, 125, 255);">CLP0212</span>电源的尺寸做了修改，以防安装冲突</p><h3 id="开关电源"><a class="markdownIt-Anchor" href="#开关电源"></a> 开关电源</h3><p>电源可选型号如下，这类电源的尺寸大约是100×50mm，可以非常紧凑地安装在铝壳内</p><table><thead><tr><th></th><th>开关电源</th><th>被动/主动散热功率(W)</th><th>尺寸（mm)</th><th>孔距（mm)</th><th>加格(￥)@包邮</th><th>适配铝壳尺寸（mm)</th></tr></thead><tbody><tr><td>厚度偏薄，利于前面板的模块安装</td><td>金升阳 LOF225 20bXX</td><td>140/225</td><td>101.6×50.8×25.4</td><td>95.25×44.45</td><td>155</td><td>125×51×100</td></tr><tr><td>厚度偏厚，非常不利于前面板的模块安装</td><td>明纬 EPP-200-XX</td><td>140/200</td><td>101.6×50.8×32</td><td>95.25×44.45</td><td>214</td><td>125×51×100</td></tr><tr><td>过气方案</td><td>GE <a href="https://library.industrialsolutions.abb.com/publibrary/checkout/CLP0212?TNR=Data%20Sheets%7CCLP0212%7CPDF" target="_blank" rel="noopener">CLP0212</a> 12V</td><td>100/200</td><td>101.6×50.8×37.14</td><td>93.2×42.4</td><td>45~196</td><td>125×51×100</td></tr><tr><td>又不是不能用</td><td><a href="https://m.tb.cn/h.fQLvrV4?sm=300ae6" target="_blank" rel="noopener">WX-DC2416</a></td><td>150/220</td><td>115×65×3.5</td><td>105.8×55.7</td><td>35</td><td>125×51×110</td></tr></tbody></table><p><a href="https://www.bilibili.com/read/cv14154464" target="_blank" rel="noopener">参考：200W超小ITX电源 明纬EPP200-12性能测试</a></p><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><table><thead><tr><th></th><th><img src="/5cea6320/%E5%88%9D%E5%8F%B7%E6%9C%BA3.JPG" alt></th><th><img src="/5cea6320/%E5%88%9D%E5%8F%B7%E6%9C%BA4.JPG" alt></th></tr></thead><tbody><tr><td></td><td><img src="/5cea6320/%E5%88%9D%E5%8F%B7%E6%9C%BA5.JPG" alt></td><td><img src="/5cea6320/%E5%88%9D%E5%8F%B7%E6%9C%BA6.JPG" alt></td></tr><tr><td></td><td><img src="/5cea6320/%E8%BD%B4%E6%B5%8B1.png" alt></td><td><img src="/5cea6320/%E8%BD%B4%E6%B5%8B2.png" alt></td></tr><tr><td>前面板</td><td><img src="/5cea6320/%E6%B3%A8%E9%87%8A%E5%AE%89%E8%A3%85-%E5%89%8D%E9%9D%A2%E6%9D%BF2.png" alt></td><td><img src="/5cea6320/%E6%B3%A8%E9%87%8A%E5%AE%89%E8%A3%85-%E5%89%8D%E9%9D%A2%E6%9D%BF3.png" alt></td></tr><tr><td>后面板</td><td><img src="/5cea6320/%E6%B3%A8%E9%87%8A%E5%AE%89%E8%A3%85-%E5%90%8E%E9%9D%A2%E6%9D%BF2.png" alt></td><td><img src="/5cea6320/%E6%B3%A8%E9%87%8A%E5%AE%89%E8%A3%85-%E5%90%8E%E9%9D%A2%E6%9D%BF3.png" alt></td></tr><tr><td>下壳体</td><td><img src="/5cea6320/%E5%AE%89%E8%A3%85-%E4%B8%8B%E5%A3%B3%E4%BD%931.png" alt></td><td><img src="/5cea6320/%E6%B3%A8%E9%87%8A%E5%AE%89%E8%A3%85-%E4%B8%8B%E5%A3%B3%E4%BD%932.png" alt></td></tr><tr><td>上壳体</td><td><img src="/5cea6320/%E5%AE%89%E8%A3%85-%E4%B8%8A%E5%A3%B3%E4%BD%933.png" alt></td><td><img src="/5cea6320/%E6%B3%A8%E9%87%8A%E5%AE%89%E8%A3%85-%E4%B8%8A%E5%A3%B3%E4%BD%932.png" alt></td></tr></tbody></table><h3 id="接地-绝缘"><a class="markdownIt-Anchor" href="#接地-绝缘"></a> 接地、绝缘</h3><ul><li>热床四个角的铜柱上<span style="color:rgb(255, 50, 50);">必须安装特氟龙垫片</span>（绝缘且耐240度高温），该垫片可以用规格3*6mm的特氟龙管手工切割制作</li><li>AC-05电源插座<span style="color:rgb(255, 50, 50);">务必外套绝缘管</span></li><li>AC-05电源插座的地线、开关电源PCB的接地专用的固定孔、oled显示屏螺丝处的外壳接地点，<span style="color:rgb(255, 50, 50);">三个接地点务必可靠连接</span></li><li>开关电源是裸板，PFC的MOS电压可达380V以上，需<span style="color:rgb(255, 50, 50);">注意开关电源板边沿与铝制外壳的距离</span></li></ul><h3 id="铝壳开孔"><a class="markdownIt-Anchor" href="#铝壳开孔"></a> 铝壳开孔</h3><p>开孔图纸提供了CAD文件，前后面板若自己开孔太麻烦，可以做成铝基板代替</p><p>控制板接热床可选两种连接器，对应不同的引出线方式：</p><ul><li>若使用5569连接器，热床的电线从后面板引出</li><li>若使用5566连接器，热床的电线从上壳体圆洞引出</li></ul><p><img src="/5cea6320/%E5%BC%80%E5%AD%94-%E9%93%9D%E5%A3%B3%E4%BD%93.png" alt></p><h3 id="抽拉板开孔"><a class="markdownIt-Anchor" href="#抽拉板开孔"></a> 抽拉板开孔</h3><table><thead><tr><th><img src="/5cea6320/%E5%BC%80%E5%AD%94-%E5%8D%95%E9%9D%A2%E7%8E%BB%E7%BA%A4%E6%9D%BF%E5%8E%9A1.5mm.png" alt></th><th><img src="/5cea6320/%E6%B3%A8%E9%87%8A%E5%AE%89%E8%A3%85-%E7%8E%BB%E7%BA%A4%E6%9D%BF%E6%8A%BD%E6%8B%89%E7%A4%BA%E6%84%8F.png" alt></th></tr></thead></table><h2 id="程序"><a class="markdownIt-Anchor" href="#程序"></a> 程序</h2><h3 id="烧录前的准备工作"><a class="markdownIt-Anchor" href="#烧录前的准备工作"></a> 烧录前的准备工作</h3><p>感谢<a href="https://b23.tv/DqndTQK" target="_blank" rel="noopener">B站谢培宇x 适配好了MAX6675</a>，<a href="https://pan.baidu.com/s/1FN_KfvtdgoIdXALv11UErQ" target="_blank" rel="noopener">程序</a> 提取码: 7fx5，VsCode环境搭建&amp;程序烧录也推荐看他的视频教程</p><h3 id="热床功率过大导致开关电源限流保护"><a class="markdownIt-Anchor" href="#热床功率过大导致开关电源限流保护"></a> 热床功率过大导致开关电源限流保护</h3><p>朱雀固件原程序有两组可配置的PID，一组负责爬升期，一组负责接近期</p><p>虽说推荐使用的200W以上的开关电源，但探针版GSH_Bed热床在0温升时，功率约288W，因此常温时若直接通电，程序直接按爬升区计算，使开关电源全功率加热，会触发开关电源短路保护</p><p>减小热床线宽可以降低电流，但测试43mil线宽热床，维持230度时PID输出的占空比在84%~100%之间波动，减小热床线宽可能会无法维持到230度</p><h4 id="方法1"><a class="markdownIt-Anchor" href="#方法1"></a> 方法1</h4><p>增加一组可配置的预备期PID和预备温度，用于预备升温，等温度升高到热床内阻增大到 开关电源全功率负载不会触发短路保护时，再切换为爬升区PID，<span style="color:rgb(255, 50, 50);">修改后的程序在 Firmware 文件夹内</span>，预备期PID的值需要需要根据电源测试</p><h4 id="方法2"><a class="markdownIt-Anchor" href="#方法2"></a> 方法2</h4><p>尝试修改温控曲线，限制最大输出功率，但目前曲线部分代码有显示问题，等本id有空试试</p><h2 id="tips"><a class="markdownIt-Anchor" href="#tips"></a> Tips</h2><ol><li><p>热床工作温度？</p><p><span style="color:rgb(255, 50, 50);">请特别注意</span>铜箔与铝板之间的绝缘层在<span style="color:rgb(255, 50, 50);">260度</span>以上会失效，建议<span style="color:rgb(255, 50, 50);">工作温度不超过260度</span></p><blockquote><p>当前仓库源码最高温为260度，可通过 <code>OpenT12.h</code> 的<code>TipMaxTemp</code>进行修改：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">#<span class="meta-keyword">define</span> TipMaxTemp 260</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote></li><li><p>热床阻焊层变黄？</p><p>铝基板热床是消耗品，测试在环境温度10℃时，温度在180度时白油阻焊层几乎不会变黄，200度左右开始泛黄，建议PCB打样时选择无阻焊或黑色阻焊</p></li><li><p>热床表面残留的的助焊剂污渍洗板水洗不掉？</p><p>用800目砂纸稍加打磨</p></li><li><p>加热有时oled花屏？（已解决）</p><p>此情况热床温度在100度以下时容易出现，来源于开关电源的电磁干扰，目前暂未找到比较好的解决方法，当热床温度到150度以上时这种现象消失</p><blockquote><h2 id="20231211"><a class="markdownIt-Anchor" href="#20231211"></a> 2023/12/11</h2><p>解决方法：修改<code>TipControl.cpp</code>的<code>PWM_Freq</code>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">double</span> PWM_Freq = <span class="number">50000</span>;    <span class="comment">// uint8_t类型写错了，改为double类型</span></span><br><span class="line">&gt;                             <span class="comment">// 将频率从默认的2000改为50000，开关电源模块电感没有吱吱响声了</span></span><br><span class="line">&gt;                             <span class="comment">// 备注：PC817 光耦带宽 81KHz</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>修改后，实测能达到的最高温度没多大影响，改前最高245度，改后242度，关键是开关电源电感不啸叫了，这点非常Nice</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 加热台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> esp32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SAU-G0 EEPROM笔记</title>
      <link href="/74fbdec2/"/>
      <url>/74fbdec2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p><strong>为什么选择EEPROM？EEPROM与Flash有何不同？</strong></p><blockquote><p>既然STM32有那么大的Flash，为什么还要使用EEPROM？好问题，这得从几个方面来回答</p></blockquote><p><a href="https://github.com/oldgerman/SAU-G0" target="_blank" rel="noopener">SAU-G0</a> 是我学习STM32低功耗时做的传感器采集单元（就是个屑温湿度计罢了），使用STM32G031G8U6（之后简称G031）作为主控芯片，根据ST G0的中文手册，其Flash结构如下：</p><a id="more"></a><p><img src="/74fbdec2/STM32G0_Flash%E6%9E%84%E6%88%90.png" alt></p><p>其中G031存储器的64KB分为32页，每页2KB，最小擦除单位为1页</p><p>根据Flash的擦写特性，如果有一个1byte的数据变化需求，那它存储所在的页（或者扇区、或者最小擦除粒度）需要先整块擦除再写入，不能只修改该页的1个byte同时不影响该页原有的其他数据，那么原有的其他数据如果要保留怎么办，有两种方式：</p><ol><li><p>找一个空的页，将原有的有用数据的页整个复制过去，将原来的页擦除，将1byte的数据变化+复制过去的页复制到原来的flash，最后临时使用的这个空的页擦除。这个方法省MCU的内存，不需要在SRAM中存Flash页里的所有相关数据作为复制操作的缓冲区</p></li><li><p>在SRAM中总是存在一个flash修改页数据的全局变量，当该页发生一个1byte的数据变化需求，将该页的数据整个拷贝到SRAM中，擦除该页，再将1byte的数据变化+SRAM中的flash数据副本复制到原来的flash，这个方法耗费MCU的内存，需要在SRAM中存待修改的Flash页的所有相关数据，当页大小比较大时，比如STM32F4 Flash分布和G031不一样，在STM32F4的编程手册上可找到FLASH是按照Sector划分的：F4系列最小擦除粒度为扇区（最小的16K，但有16K、64K、128K三种大小）,那么当你修改的扇区中的有用数据有比如14K时，正好F4的SRAM剩余空间不够14KB，那么使用方式1，留一个16KB的扇区做复制备份，才是行得通的方法</p></li></ol><p><img src="/74fbdec2/F4_FLASH%E7%9A%84Sector%E5%88%92%E5%88%86.png" alt="F4_FLASH的Sector划分"></p><p>可见，如果需要频繁地修改非易失性存储器的数据，而且单次改动的数据量又很小，比如只占最小擦除粒度的 1/100，如果使用方式1，得磨损2次，如果使用方式2磨损1次，而且，STM32的Flash是有擦写寿命的，例如G031最坏情况只有1万次：</p><p><img src="/74fbdec2/G031%E6%93%A6%E5%86%99%E5%AF%BF%E5%91%BD.png" alt="6B509ED7C29973CE1FBBE74496ABB86B"></p><p>对于SAU-G0，若使用flash的一个2KB页每小时存一次采集数据，每天改动24次flash数据，那么416天后，G031的该页将面临报废（实际上2KB存不下这些采集数据hhh）</p><p>可能又有疑问，计算机的固态硬盘不也是Flash吗，每天面临比stm32还要多得多的擦写需求，那为啥没有那么容易报废？</p><p>好问题，因为固态硬盘除了存储介质是NAND Flash，每一块盘都带有闪存控制器，闪存翻译层的平均磨损逻辑，可以将擦除平均分布在所有的块上，最大化每个块的寿命，对于坏块自动屏蔽处理，从预留OP中开辟新的块来代替，而STM32是NOR Flash，没有（这么nb的）闪存主控，无法整这些高级骚操作，只能按照产品规格书的Flash最坏擦除寿命进行保守的应用</p><p>EEPROM最小擦写粒度是1byte，可以按1byte读写，也可以多个byte读写，不需要地址对齐，擦写寿命100万次，相比G031的 Flash，对于频繁的小容量数据存取EEPROM再合适不过</p><h2 id="eeprom参数表格at24cxx系列"><a class="markdownIt-Anchor" href="#eeprom参数表格at24cxx系列"></a> EEPROM参数表格（AT24Cxx系列）</h2><p>所有的这些型号都支持字节读写，即每个byte都有独立的地址，若地址指针寻址位数不够，使用I2C地址的P位来倍增地址指针寻址数量，例如1片24C16，I2C地址就占用0x50~0x57（nnd居然跟我用的PCF2129的0x51地址冲突了一个），还要注意发送的地址指针地址与同一I2C总线上的设备是否冲突，例如：<a href="https://www.cnblogs.com/xklzw/p/10521820.html" target="_blank" rel="noopener">X1226 和 AT24C16 地址冲突问题</a></p><table><thead><tr><th>EEPROM型号</th><th>容量</th><th>页大小</th><th>页数</th><th>发送地址位数</th><th>I2C地址结构</th><th>A<sub>(n)</sub>位数</th><th>P<sub>(n)</sub>位数</th><th>可寻址数</th><th>一条I2C总线最多<br>挂载同型号数量</th></tr></thead><tbody><tr><td><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0180.pdf" target="_blank" rel="noopener">AT24C01</a></td><td>128 x 8 (1K)</td><td>8-byte page</td><td>16</td><td>8bit</td><td><img src="/74fbdec2/AT24C01-02-32-64-128-256-512_Dev_Addr.png" alt="AT24C01-02-32-64-128-256-512_Dev_Addr"></td><td>3</td><td>0</td><td>128</td><td>8</td></tr><tr><td><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0180.pdf" target="_blank" rel="noopener">AT24C02</a></td><td>256 x 8 (2K)</td><td>8-byte page</td><td>32</td><td>8bit</td><td><img src="/74fbdec2/AT24C01-02-32-64-128-256-512_Dev_Addr.png" alt="AT24C01-02-32-64-128-256-512_Dev_Addr"></td><td>3</td><td>0</td><td>256</td><td>8</td></tr><tr><td><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0180.pdf" target="_blank" rel="noopener">AT24C04</a></td><td>512 x 8 (4K)</td><td>16-byte page</td><td>32</td><td>8bit</td><td><img src="/74fbdec2/AT24C04-1024_Dev_Addr.png" alt="AT24C04-1024_Dev_Addr"></td><td>2</td><td>1</td><td>256 x 2<sup>1</sup></td><td>4</td></tr><tr><td><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0180.pdf" target="_blank" rel="noopener">AT24C08</a></td><td>1,024 x 8 (8K)</td><td>16-byte page</td><td>64</td><td>8bit</td><td><img src="/74fbdec2/AT24C08_Dev_Addr.png" alt="AT24C08_Dev_Addr"></td><td>1</td><td>2</td><td>256 x 2<sup>2</sup></td><td>2</td></tr><tr><td><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0180.pdf" target="_blank" rel="noopener">AT24C16</a></td><td>2,048 x 8 (16K)</td><td>16-byte page</td><td>128</td><td>8bit</td><td><img src="/74fbdec2/AT24C16_Dev_Addr.png" alt="AT24C16_Dev_Addr"></td><td>0</td><td>3</td><td>256 x 2<sup>3</sup></td><td>1</td></tr><tr><td><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0336.pdf" target="_blank" rel="noopener">AT24C32</a></td><td>4,096 x 8 (32K)</td><td>32-byte page</td><td>128</td><td>16bit</td><td><img src="/74fbdec2/AT24C01-02-32-64-128-256-512_Dev_Addr.png" alt="AT24C01-02-32-64-128-256-512_Dev_Addr"></td><td>3</td><td>0</td><td>4096</td><td>8</td></tr><tr><td><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0336.pdf" target="_blank" rel="noopener">AT24C64</a></td><td>8,192 x 8 (64K)</td><td>32-byte page</td><td>256</td><td>16bit</td><td><img src="/74fbdec2/AT24C01-02-32-64-128-256-512_Dev_Addr.png" alt="AT24C01-02-32-64-128-256-512_Dev_Addr"></td><td>3</td><td>0</td><td>8192</td><td>8</td></tr><tr><td><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0670.pdf" target="_blank" rel="noopener">AT24C128</a></td><td>16,384 x 8 (128K)</td><td>64-byte page</td><td>256</td><td>16bit</td><td><img src="/74fbdec2/AT24C01-02-32-64-128-256-512_Dev_Addr.png" alt="AT24C01-02-32-64-128-256-512_Dev_Addr"></td><td>3</td><td>0</td><td>16384</td><td>8</td></tr><tr><td><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0670.pdf" target="_blank" rel="noopener">AT24C256</a></td><td>32,768 x 8 (256K)</td><td>64-byte page</td><td>512</td><td>16bit</td><td><img src="/74fbdec2/AT24C01-02-32-64-128-256-512_Dev_Addr.png" alt="AT24C01-02-32-64-128-256-512_Dev_Addr"></td><td>3</td><td>0</td><td>32768</td><td>8</td></tr><tr><td><a href="http://ww1.microchip.com/downloads/en/devicedoc/doc1116.pdf" target="_blank" rel="noopener">AT24C512</a></td><td>65,536 x 8 (512K)</td><td>128-byte page</td><td>512</td><td>16bit</td><td><img src="/74fbdec2/AT24C01-02-32-64-128-256-512_Dev_Addr.png" alt="AT24C01-02-32-64-128-256-512_Dev_Addr"></td><td>3</td><td>0</td><td>65536</td><td>8</td></tr><tr><td><a href="http://ww1.microchip.com/downloads/en/devicedoc/doc1471.pdf" target="_blank" rel="noopener">AT24C1024</a></td><td>131,072 x 8 (1024K)</td><td>256-byte page</td><td>512</td><td>16bit</td><td><img src="/74fbdec2/AT24C04-1024_Dev_Addr.png" alt="AT24C04-1024_Dev_Addr"></td><td>2</td><td>1</td><td>65536 x 2<sup>1</sup></td><td>4</td></tr></tbody></table><p>P位的有无比较特殊：</p><ul><li><p>AT24C01 - AT24C02：没有P位</p></li><li><p>AT24C08 - AT24C16：有P位</p></li><li><p>AT24C32 - AT24C512：没有P位</p></li><li><p>AT24C1024：有1位P位，与AT24C04的I2C地址结构一样</p></li></ul><h2 id="ee24"><a class="markdownIt-Anchor" href="#ee24"></a> <a href="https://github.com/nimaltd/ee24" target="_blank" rel="noopener">ee24</a>（开源EEPROM驱动库 STM32 HAL）</h2><p>支持I2C EEPROM：24C01/02/04/08/16...到512</p><ul><li><p>不支持AT24C1024，因为AT24C1024地址有P0位，实际是17位寻址空间，而该库读写函数的第一个参数是uint16_t address，无法在不溢出的情况下接受17bit地址参数，无法检测bit[16]位而改变P0位，除非升级类型为uint32_t</p></li><li><p>后续文章EEPROM有关的代码大都是以此库的进行分析</p></li><li><p><a href="https://github.com/oldgerman/SAU-G0" target="_blank" rel="noopener">SAU-G0</a> 使用的 ee24 库是我魔改过的，<a href="https://github.com/oldgerman/SAU-G0/tree/master/SoftWare/SAU-G031G8U6/Libraries/ee24" target="_blank" rel="noopener">链接</a></p></li></ul><h2 id="eeprom擦除"><a class="markdownIt-Anchor" href="#eeprom擦除"></a> EEPROM擦除</h2><h3 id="一般擦除法"><a class="markdownIt-Anchor" href="#一般擦除法"></a> 一般擦除法</h3><p>ee24库在erasefull函数内创建了一个：256byte大小全为0xff的常量，多次写这个数据以达到擦除整片EEPROM</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ee24_eraseChip</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//创建擦除数据，元素值全为11111111，总大小等于24C02 的 256Byte</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">uint8_t</span> eraseData[<span class="number">32</span>] = &#123;</span><br><span class="line">            <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>,</span><br><span class="line">            <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>,</span><br><span class="line">            <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>,</span><br><span class="line">            <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">uint32_t</span> bytes = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//反复写它以达到全片擦除，写N次32组0xff</span></span><br><span class="line">    <span class="keyword">while</span> ( bytes &lt; (_EEPROM_SIZE_KBIT * <span class="number">256</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ee24_write(bytes, (<span class="keyword">uint8_t</span>*)eraseData, <span class="keyword">sizeof</span>(eraseData), <span class="number">100</span>) == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        bytes += <span class="keyword">sizeof</span>(eraseData);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="特殊擦除法"><a class="markdownIt-Anchor" href="#特殊擦除法"></a> 特殊擦除法</h3><p><a href="https://www.amobbs.com/thread-5687466-1-1.html" target="_blank" rel="noopener">EEPROM写入数据之前需要先进行擦除操作嘛（例如25LC512）？</a></p><p>对于Flash，在写入之前必须先擦除（也就是写入0xFF，因为Flash只能从1修改为0），对于EEPROM，写之前不需要擦除的，可以直接写入数据，支持按字节或页写</p><p><a href="http://ww1.microchip.com/downloads/en/devicedoc/21754m.pdf" target="_blank" rel="noopener">Microchip - 25LC512</a> 比较特殊，是SPI EEPROM，支持<strong>擦除指令</strong>，这里的擦除并非类似于Flash的写操作，手册（2.8 PAGE ERASE、2.9 SECTOR ERASE、2.10 CHIP ERASE）</p><h2 id="eeprom页大小"><a class="markdownIt-Anchor" href="#eeprom页大小"></a> EEPROM页大小</h2><p>比如 <a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0180.pdf" target="_blank" rel="noopener">ATMEL - AT24C01A/02/04/08/16Kb</a> ，不同容量的页大小不同</p><blockquote><p><span style="color:rgb(255, 175, 200);">8-byte Page</span> (1K, 2K), <span style="color:rgb(255, 175, 200);">16-byte Page</span> (4K, 8K, 16K) Write Modes</p></blockquote><p>也有另类，比如 <a href="https://www.onsemi.com/pdf/datasheet/cat24c01-d.pdf" target="_blank" rel="noopener">安森美 - CAT24C01 - 2/4/8/16 Kb</a>中的2Kbit款也是16-byte-Page，而上面的AT24C01和AT24C02是16-byte-Page</p><blockquote><p>The CAT24C02/04/08/16 are 2−Kb, 4−Kb, 8−Kb and 16−Kb respectively I2C Serial EEPROM devices organized internally as 16/32/64 and 128 pages respectively of <span style="color:rgb(255, 175, 200);">16 bytes each</span></p></blockquote><p><a href="https://github.com/nimaltd/ee24" target="_blank" rel="noopener">ee24库</a>根据宏定义的EEPROM容量，自动选择页大小，与ATMEL - AT24Cxx的变化一致</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ee24Config.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>        _EEPROM_SIZE_KBIT     2    <span class="comment">//eeprom容量</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//ee24.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> (_EEPROM_SIZE_KBIT == 1) || (_EEPROM_SIZE_KBIT == 2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _EEPROM_PSIZE     8        <span class="comment">//eeprom page大小</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> (_EEPROM_SIZE_KBIT == 4) || (_EEPROM_SIZE_KBIT == 8) || (_EEPROM_SIZE_KBIT == 16)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _EEPROM_PSIZE     16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _EEPROM_PSIZE     32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>但对于  安森美 - CAT24C02 是16-byte-Page特殊情况，并不是说选 <code>_EEPROM_SIZE_KBIT 为 2</code>而配置 <code>_EEPROM_PSIZE 为  8    </code> ，8-byte Page Write Mode 就不适用了，而是通信次数会多一倍，以等价于16-byte-Page的写入数据量，宏这里这么搞是因为越大容量的EEPROM在一个读写时支持的字节数更多，可以减少通信初始化I2C的次数，那么如果对 24C02以 <code>_EEPROM_PSIZE  为   32</code> 读写会发生什么？根据手册PAGE WRITE部分的节选，数据地址会回到开头覆盖原来的数据：</p><blockquote><p>&quot;When the word address, internally generated, reaches the page boundary, the following byte is placed at the beginning of the same page. If more than eight (1K/2K) or sixteen (4K, 8K, 16K) data words are transmitted to the EEPROM, the data word address will “roll over” and previous data will be overwritten.&quot;</p><p>当内部生成的字地址到达页边界时，下一个字节被放置在同一页的开头。如果超过八个 (1K/2K) 或十六个 (4K, 8K, 16K) 数据字被传输到 EEPROM，数据字地址将“翻转”并且之前的数据将被覆盖。这个是页覆盖特性</p></blockquote><h2 id="eeprom寻址"><a class="markdownIt-Anchor" href="#eeprom寻址"></a> EEPROM寻址</h2><p>以下是安森美 - CAT24C的页写模式序列图，每次I2C地址应答后，下一个从Master发来的8bit数据改变地址指针的位置</p><p><img src="/74fbdec2/CAT24C_Page_Write_Sequence.png" alt></p><p>EEPROM的地址指针从0x00开始寻址， 容量 2/4/8/16Kbit 的EEPROM的Address Byte只需要 1Byte，而I2C EEPROM最大有1024Kbit，8bit寻址能寻多大容量的EEPROM？比如<a href="https://item.szlcsc.com/232737.html" target="_blank" rel="noopener">FMD(辉芒微) FT24C16A-ELR-T</a>，可以简单计算一下，容量16Kbit就是2048Byte，每页16byte，需要128个地址，也就是7bit寻址，那么<a href="http://ww1.microchip.com/downloads/en/devicedoc/doc1116.pdf" target="_blank" rel="noopener">ATMEL - AT24C512T</a>呢？以下是手册节选：有512页，就是9bit寻址</p><blockquote><p>The 512K is internally organized as 512 pages of 128-bytes each. Random word addressing requires a 16-bit data word address.</p></blockquote><p>它的页写模式序列图如下，可见每次I2C地址应答后，后面两个从Master发来的8bit数据 改变 16bit地址 指针的位置</p><p><img src="/74fbdec2/AT24C512_Page_Write_Sequence.png" alt></p><p>回来看看ee24库，读写函数第一个参数是EPPROM内部寻址地址，接受16bit参数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ee24_write</span><span class="params">(<span class="keyword">uint16_t</span> address, <span class="keyword">uint8_t</span> *data, <span class="keyword">size_t</span> len, <span class="keyword">uint32_t</span> timeout)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ee24_read</span><span class="params">(<span class="keyword">uint16_t</span> address, <span class="keyword">uint8_t</span> *data, <span class="keyword">size_t</span> len, <span class="keyword">uint32_t</span> timeout)</span></span>;</span><br></pre></td></tr></table></figure><p>读写函数体内部是多次while的形式，C预处理器根据EEPROM的页大小，计算出每次while的地址指针增量，即传入HAL_I2C_Mem_Read的MemAddSize参数，非常优雅，比如ee24_write：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ee24_write</span><span class="params">(<span class="keyword">uint16_t</span> address, <span class="keyword">uint8_t</span> *data, <span class="keyword">size_t</span> len, <span class="keyword">uint32_t</span> timeout)</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        w = _EEPROM_PSIZE - (address  % _EEPROM_PSIZE);</span><br><span class="line">        <span class="keyword">if</span> (w &gt; len)</span><br><span class="line">            w = len;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> ((_EEPROM_SIZE_KBIT==1) || (_EEPROM_SIZE_KBIT==2))</span></span><br><span class="line">        <span class="keyword">if</span> (HAL_I2C_Mem_Write(&amp;_EEPROM_I2C, _EEPROM_ADDRESS, address, I2C_MEMADD_SIZE_8BIT, data, w, <span class="number">100</span>) == HAL_OK)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> (_EEPROM_SIZE_KBIT==4)</span></span><br><span class="line">        <span class="keyword">if</span> (HAL_I2C_Mem_Write(&amp;_EEPROM_I2C, _EEPROM_ADDRESS | ((address &amp; <span class="number">0x0100</span>) &gt;&gt; <span class="number">7</span>), (address &amp; <span class="number">0xff</span>), I2C_MEMADD_SIZE_8BIT, data, w, <span class="number">100</span>) == HAL_OK)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> (_EEPROM_SIZE_KBIT==8)</span></span><br><span class="line">        <span class="keyword">if</span> (HAL_I2C_Mem_Write(&amp;_EEPROM_I2C, _EEPROM_ADDRESS | ((address &amp; <span class="number">0x0300</span>) &gt;&gt; <span class="number">7</span>), (address &amp; <span class="number">0xff</span>), I2C_MEMADD_SIZE_8BIT, data, w, <span class="number">100</span>) == HAL_OK)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> (_EEPROM_SIZE_KBIT==16)</span></span><br><span class="line">        <span class="keyword">if</span> (HAL_I2C_Mem_Write(&amp;_EEPROM_I2C, _EEPROM_ADDRESS | ((address &amp; <span class="number">0x0700</span>) &gt;&gt; <span class="number">7</span>), (address &amp; <span class="number">0xff</span>), I2C_MEMADD_SIZE_8BIT, data, w, <span class="number">100</span>) == HAL_OK)        </span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        <span class="keyword">if</span> (HAL_I2C_Mem_Write(&amp;_EEPROM_I2C, _EEPROM_ADDRESS, address, I2C_MEMADD_SIZE_16BIT, data, w, <span class="number">100</span>) == HAL_OK)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        &#123;</span><br><span class="line">            ee24_delay(<span class="number">10</span>);</span><br><span class="line">            len -= w;</span><br><span class="line">            data += w;</span><br><span class="line">            address += w;</span><br><span class="line">            <span class="keyword">if</span> (len == <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">......</span><br><span class="line">     &#125;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="分析为at24c02的情况"><a class="markdownIt-Anchor" href="#分析为at24c02的情况"></a> 分析为AT24C02的情况：</h4><table><thead><tr><th>EEPROM型号</th><th>容量</th><th>页大小</th><th>页数</th><th>发送地址位数</th><th>I2C地址结构</th><th>A<sub>(n)</sub>位数</th><th>P<sub>(n)</sub>位数</th><th>可寻址数</th><th>一条I2C总线最多<br>挂载同型号数量</th></tr></thead><tbody><tr><td><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0180.pdf" target="_blank" rel="noopener">AT24C02</a></td><td>256 x 8 (2K)</td><td>8-byte page</td><td>32</td><td>8bit</td><td><img src="/74fbdec2/AT24C01-02-32-64-128-256-512_Dev_Addr.png" alt="AT24C01-02-32-64-128-256-512_Dev_Addr"></td><td>3</td><td>0</td><td>256</td><td>8</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    w = _EEPROM_PSIZE - (address  % _EEPROM_PSIZE);</span><br><span class="line">    <span class="keyword">if</span> (w &gt; len)</span><br><span class="line">        w = len;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> ((_EEPROM_SIZE_KBIT==1) || (_EEPROM_SIZE_KBIT==2))</span></span><br><span class="line">    <span class="keyword">if</span> (HAL_I2C_Mem_Write(&amp;_EEPROM_I2C, _EEPROM_ADDRESS, address, I2C_MEMADD_SIZE_8BIT, data, w, <span class="number">100</span>) == HAL_OK)</span><br><span class="line">......</span><br><span class="line">    &#123;</span><br><span class="line">        ee24_delay(<span class="number">10</span>);</span><br><span class="line">        len -= w;</span><br><span class="line">        data += w;</span><br><span class="line">        address += w;</span><br><span class="line">        <span class="keyword">if</span> (len == <span class="number">0</span>)&#123;</span><br><span class="line">            ee24_lock = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;    </span><br><span class="line">        &#125;</span><br><span class="line">......</span><br><span class="line">    &#125;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//相关宏和函数位置：</span></span><br><span class="line"><span class="comment">//stm32xxxx_hal_i2c.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I2C_MEMADD_SIZE_8BIT            (0x00000001U)</span></span><br><span class="line"><span class="comment">//stm32xxxx_hal_i2c.c</span></span><br><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_I2C_Mem_Write</span><span class="params">(I2C_HandleTypeDef *hi2c, <span class="keyword">uint16_t</span> DevAddress, <span class="keyword">uint16_t</span> MemAddress,</span></span></span><br><span class="line"><span class="function"><span class="params">                                    <span class="keyword">uint16_t</span> MemAddSize, <span class="keyword">uint8_t</span> *pData, <span class="keyword">uint16_t</span> Size, <span class="keyword">uint32_t</span> Timeout)</span></span>;</span><br></pre></td></tr></table></figure><p>根据<a href="#AT24Cxx%E7%B3%BB%E5%88%97%E5%8F%82%E6%95%B0%E8%A1%A8%E6%A0%BC">AT24Cxx系列参数表格</a>，AT24C02为 8-byte-page，发送地址为8bit，片内子地址寻址（地址指针）可对内部 256 Bytes中的任一个进行读/写操作，其寻址范围为00~FF，共256个寻址单位</p><p><a href="https://www.cnblogs.com/schips/p/at24cxx.html" target="_blank" rel="noopener">AT24C02、04、08、16 操作说明 </a></p><blockquote><p>1010是固定的，A表示器件地址，可以拉高和拉低，I2C总线上可以并接2的n次方个器件。P表示具体的内部地址数，比如at24c02共有256个字节，第二个地址字节完全可以满足，不用P。但是at24c04一个有512个字节，需要9位地址线，第一个字节中的p就表示地址线了，p=0表示低256字节，1表示高256字节。</p></blockquote><p>那么HAL_I2C_Mem_Read的MemAddSize参数传入I2C_MEMADD_SIZE_8BIT没有问题，那么参数<code>_EEPROM_SIZE_KBIT = 2</code>、<code>_EEPROM_PSIZE = 8</code> （8-byte-page），模拟一下写入过程，比如从EEPROM第一个页开始写，即<code>address  = 0</code>，需要写入1byte的数据长度 <code>len = 13</code>，由<code>array[13]</code>存储</p><table><thead><tr><th>循环次数</th><th>w</th><th>address</th><th>data</th><th>len</th></tr></thead><tbody><tr><td>1</td><td>8</td><td>0</td><td>&amp;array[0]</td><td>13</td></tr><tr><td>2</td><td>5</td><td>8</td><td>&amp;array[8]</td><td>5</td></tr></tbody></table><h4 id="分析为at24c16的情况"><a class="markdownIt-Anchor" href="#分析为at24c16的情况"></a> 分析为AT24C16的情况：</h4><table><thead><tr><th>EEPROM型号</th><th>容量</th><th>页大小</th><th>页数</th><th>发送地址位数</th><th>I2C地址结构</th><th>A<sub>(n)</sub>位数</th><th>P<sub>(n)</sub>位数</th><th>可寻址数</th><th>一条I2C总线最多<br>挂载同型号数量</th></tr></thead><tbody><tr><td><a href="https://ww1.microchip.com/downloads/en/DeviceDoc/doc0180.pdf" target="_blank" rel="noopener">AT24C16</a></td><td>2,048 x 8 (16K)</td><td>16-byte page</td><td>128</td><td>8bit</td><td><img src="/74fbdec2/AT24C16_Dev_Addr.png" alt="AT24C16_Dev_Addr"></td><td>0</td><td>3</td><td>256 x 2<sup>3</sup></td><td>1</td></tr></tbody></table><p>根据<a href="#AT24Cxx%E7%B3%BB%E5%88%97%E5%8F%82%E6%95%B0%E8%A1%A8%E6%A0%BC">AT24Cxx系列参数表格</a>，AT24C16为 16-byte-page，发送地址为8bit，那么HAL_I2C_Mem_Read的MemAddSize参数传入I2C_MEMADD_SIZE_8BIT没有问题，那么参数<code>_EEPROM_SIZE_KBIT = 2</code>、<code>_EEPROM_PSIZE = 16</code> （16-byte-page）</p><p>注意24C16的I2C地址bit[1:3]用作P位，也就是一片24C16占用 8个7bit地址： <code>1010,000 - 1010,111</code>，即<code>0x50 - 0x57</code>，bit[0]用作读写(R/W)标识</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ee24_write</span><span class="params">(<span class="keyword">uint16_t</span> address, <span class="keyword">uint8_t</span> *data, <span class="keyword">size_t</span> len, <span class="keyword">uint32_t</span> timeout)</span> </span>&#123;</span><br><span class="line">......</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        w = _EEPROM_PSIZE - (address  % _EEPROM_PSIZE);</span><br><span class="line">        <span class="keyword">if</span> (w &gt; len)</span><br><span class="line">            w = len;</span><br><span class="line">    ......</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">elif</span> (_EEPROM_SIZE_KBIT==16)</span></span><br><span class="line">            <span class="keyword">if</span> (HAL_I2C_Mem_Write(&amp;_EEPROM_I2C, _EEPROM_ADDRESS | ((address &amp; <span class="number">0x0700</span>) &gt;&gt; <span class="number">7</span>), (address &amp; <span class="number">0xff</span>), I2C_MEMADD_SIZE_8BIT, data, w, <span class="number">100</span>) == HAL_OK)</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    ......</span><br><span class="line">        &#123;</span><br><span class="line">            ee24_delay(<span class="number">10</span>);</span><br><span class="line">            len -= w;</span><br><span class="line">            data += w;</span><br><span class="line">            address += w;</span><br><span class="line">            <span class="keyword">if</span> (len == <span class="number">0</span>)&#123;</span><br><span class="line">                ee24_lock = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;    </span><br><span class="line">            &#125;</span><br><span class="line">    ......</span><br><span class="line">        &#125;</span><br><span class="line">    ......</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//相关宏和函数位置：</span></span><br><span class="line"><span class="comment">//stm32xxxx_hal_i2c.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I2C_MEMADD_SIZE_8BIT            (0x00000001U)</span></span><br><span class="line"><span class="comment">//stm32xxxx_hal_i2c.c</span></span><br><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_I2C_Mem_Write</span><span class="params">(I2C_HandleTypeDef *hi2c, <span class="keyword">uint16_t</span> DevAddress, <span class="keyword">uint16_t</span> MemAddress,</span></span></span><br><span class="line"><span class="function"><span class="params">                                    <span class="keyword">uint16_t</span> MemAddSize, <span class="keyword">uint8_t</span> *pData, <span class="keyword">uint16_t</span> Size, <span class="keyword">uint32_t</span> Timeout)</span></span>;</span><br></pre></td></tr></table></figure><p>模拟一下写入过程：</p><ul><li><p>24C16 i2C 7bit地址有8个，但当所有P<sub>(n)</sub>位都为0时，8bit地址就是 <code>_EEPROM_ADDRESS = 1010,0000</code></p></li><li><p>假设：地址指针从EEPROM内部的<code>0x17</code>开始写，即二级制<code>address  = 0001,0111</code>，</p></li><li><p>假设：需要写入1byte的数据长度 <code>len = 43</code></p></li><li><p>代码段中的常量：</p><blockquote><p>_EEPROM_PSIZE = 16</p><p><code>0x0700</code>二进制为<code>0000,0111,0000,0000</code></p></blockquote></li></ul><p>手算太麻烦了，使用等效的测试代码打断点记录数据：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ee24_write_test_A</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint16_t</span> address = <span class="number">0x17</span>;</span><br><span class="line">    <span class="keyword">size_t</span> len = <span class="number">43</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> <span class="built_in">array</span>[<span class="number">43</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">uint8_t</span> data = <span class="built_in">array</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">uint16_t</span> w;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i;</span><br><span class="line">        w = <span class="number">16</span> - (address  % <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">if</span> (w &gt; len)</span><br><span class="line">            w = len;</span><br><span class="line">        </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//等效HAL_I2C_Mem_Write()的传入参数</span></span><br><span class="line">            <span class="keyword">uint8_t</span> DevAddress = _EEPROM_ADDRESS | ((address &amp; <span class="number">0x0700</span>) &gt;&gt; <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">uint16_t</span> MemAddress = (address &amp; <span class="number">0xff</span>);</span><br><span class="line">            data;</span><br><span class="line">            w;</span><br><span class="line">        &#125;</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">/*断点位置*/</span> ee24_delay(<span class="number">10</span>);</span><br><span class="line">            len -= w;</span><br><span class="line">            data += w;</span><br><span class="line">            address += w;</span><br><span class="line">            <span class="keyword">if</span> (len == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每次循环的记录当运行传到“断点&quot; “ HAL_I2C_Mem_Write() ”时，各个相关值：</p><table><thead><tr><th></th><th>第 1 次</th><th>第 2 次</th><th>第 3 次</th><th>第 4 次</th></tr></thead><tbody><tr><td>address (BIN) (DEC)</td><td>0000,0000,0001,0111 (23)</td><td>0000,0000,0010,0000 (32)</td><td>0000,0000,0011,0000 (48)</td><td>0000,0000,0100,0000 (64)</td></tr><tr><td>w 或 size (BIN) (DEC)</td><td>0000,1001 (9)</td><td>0001,0000 (16)</td><td>0001,0000 (16)</td><td>0000,0010 (2)</td></tr><tr><td>DevAddress (BIN)</td><td>1010,0000</td><td>1010,0000</td><td>1010,0000</td><td>1010,0000</td></tr><tr><td>MemAddress (BIN)</td><td>0000,0000,0001,0111</td><td>0000,0000,0010,0000</td><td>0000,0000,0011,0000</td><td>0000,0000,0100,0000</td></tr><tr><td>data 或 pData</td><td>&amp;array[0]</td><td>&amp;array[9]</td><td>&amp;array[25]</td><td>&amp;array[41]</td></tr><tr><td>len</td><td>43</td><td>34</td><td>18</td><td>2</td></tr></tbody></table><p>24C16每页16yte，直觉感觉写入1byte的数据长度 <code>len = 43</code>只需要3次循环（16x3 = 48）就好了，但实际循环了4次！这与假设的address初始值为0x17有关！</p><p>该段数据在EEPROM的分布：EEPROM的字节寻址特性，不必像Flash一样地址对齐就能读写1byte或连续读写</p><p><img src="/74fbdec2/AT24C16_%E5%86%99%E5%88%86%E6%9E%901_%E6%95%B0%E6%8D%AE%E5%88%86%E5%B8%83.JPG" alt="IMG_0895"></p><p>以上情况24C16的<code> DevAddress</code>和<code>address</code>的高位没有发生变化，如果<code>address</code>变为<code>0x1fa</code>，I2C地址的P<sub>0</sub>和P<sub>1</sub>、address的高位发生变化：</p><table><thead><tr><th></th><th>第 1 次</th><th>第 2 次</th><th>第 3 次</th><th>第 4 次</th></tr></thead><tbody><tr><td>address(BIN) (DEC)</td><td>0000,0000,1111,1010 (506)</td><td>0000,00<span style="color:rgb(255, 175, 200);">1</span>0,0000,0000 (512)</td><td>0000,0010,0001,0000 (528)</td><td>0000,0010,0010,0000 (544)</td></tr><tr><td>w 或 size (BIN) (DEC)</td><td>0000,0110 (6)</td><td>0001,0000 (16)</td><td>0001,0000 (16)</td><td>0000,0101 (5)</td></tr><tr><td>DevAddress (BIN)</td><td>1010,0010</td><td>1010,0<span style="color:rgb(255, 175, 200);">10</span>0</td><td>1010,0100</td><td>1010,0100</td></tr><tr><td>MemAddress (BIN)</td><td>0000,0000,1111,1010</td><td>0000,00<span style="color:rgb(255, 175, 200);">0</span>0,0000,0000</td><td>0000,0000,0001,0000</td><td>0000,0000,0010,0000</td></tr><tr><td>data 或 pData</td><td>&amp;array[0]</td><td>&amp;array[6]</td><td>&amp;array[22]</td><td>&amp;array[38]</td></tr><tr><td>len</td><td>43</td><td>37</td><td>21</td><td>5</td></tr></tbody></table><h4 id="修改ee24库以支持24c1024"><a class="markdownIt-Anchor" href="#修改ee24库以支持24c1024"></a> 修改ee24库以支持24C1024</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//address升级为uint16_t, 添加#elif (_EEPROM_SIZE_KBIT == 1024)部分，函数其余部分不变</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ee24_write</span><span class="params">(<span class="keyword">uint32_t</span> address, <span class="keyword">uint8_t</span> *data, <span class="keyword">size_t</span> len, <span class="keyword">uint32_t</span> timeout)</span> </span>&#123;</span><br><span class="line">......</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> (_EEPROM_SIZE_KBIT == 1024)</span></span><br><span class="line">        <span class="keyword">if</span> (HAL_I2C_Mem_Write(&amp;_EEPROM_I2C, _EEPROM_ADDRESS | ((address &amp; <span class="number">0x10000</span>) &gt;&gt; <span class="number">15</span>), address, I2C_MEMADD_SIZE_16BIT, data, w, <span class="number">100</span>) == HAL_OK)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//address升级为uint16_t, 添加#elif (_EEPROM_SIZE_KBIT == 1024)部分，函数其余部分不变</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ee24_read</span><span class="params">(<span class="keyword">uint32_t</span> address, <span class="keyword">uint8_t</span> *data, <span class="keyword">size_t</span> len, <span class="keyword">uint32_t</span> timeout)</span> </span>&#123;</span><br><span class="line">......</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> (_EEPROM_SIZE_KBIT==1024)<span class="comment">// AT24C1024又有P位了</span></span></span><br><span class="line">    <span class="keyword">if</span> (HAL_I2C_Mem_Read(&amp;_EEPROM_I2C, _EEPROM_ADDRESS | ((address &amp; <span class="number">0x10000</span>) &gt;&gt; <span class="number">15</span>), address, I2C_MEMADD_SIZE_16BIT, data, len, <span class="number">100</span>) == HAL_OK)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模拟一下写入43个1byte数据到AT24C1024，<code>address</code>为<code>0xfff0</code></p><table><thead><tr><th></th><th>第 1 次</th><th>第 2 次</th><th>第 3 次</th></tr></thead><tbody><tr><td>address(BIN) (DEC)</td><td>0,1111,1111,1111,0000 (65520)</td><td><span style="color:rgb(255, 175, 200);">1</span>,0000,0000,0000,0000 (65536)</td><td>1,0000,0000,0001,0000 (65552)</td></tr><tr><td>w 或 size (BIN) (DEC)</td><td>0001,0000 (16)</td><td>0001,0000 (16)</td><td>0000,1011 (11)</td></tr><tr><td>DevAddress (BIN)</td><td>1010,0000</td><td>1010,00<span style="color:rgb(255, 175, 200);">1</span>0</td><td>1010,0010</td></tr><tr><td>MemAddress (BIN)</td><td>0000,0000,1111,0000</td><td>0000,0000,0000,0000</td><td>0000,0000,0001,0000</td></tr><tr><td>data 或 pData</td><td>&amp;array[0]</td><td>&amp;array[16]</td><td>&amp;array[32]</td></tr><tr><td>len</td><td>43</td><td>27</td><td>11</td></tr></tbody></table><p>OK大功告成！</p><h2 id="eeprom检测大小"><a class="markdownIt-Anchor" href="#eeprom检测大小"></a> EEPROM检测大小</h2><h3 id="检测总大小"><a class="markdownIt-Anchor" href="#检测总大小"></a> 检测总大小</h3><p>利用地址指针溢出后回到第一页的特性</p><blockquote><p>给你一片不知道多大的EEPROM（比如丝印没了），如何快速得知它的容量？</p></blockquote><p>对<a href="https://github.com/RobTillaart/I2C_EEPROM/blob/1a6461a7dd5645ab3dcd148fbdc6dfc5ce6f9971/I2C_eeprom.cpp" target="_blank" rel="noopener">I2C_EEPROM/I2C_eeprom.cpp</a>的<code>I2C_eeprom::determineSize()</code>分析</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// returns size in bytes</span></span><br><span class="line"><span class="comment">// returns 0 if not connected</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//   tested for</span></span><br><span class="line"><span class="comment">//   2 byte address</span></span><br><span class="line"><span class="comment">//   24LC512     64 KB    YES</span></span><br><span class="line"><span class="comment">//   24LC256     32 KB    YES</span></span><br><span class="line"><span class="comment">//   24LC128     16 KB    YES</span></span><br><span class="line"><span class="comment">//   24LC64       8 KB    YES</span></span><br><span class="line"><span class="comment">//   24LC32       4 KB    YES* - no hardware test, address scheme identical to 24LC64.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//   1 byte address (uses part of deviceAddress byte)</span></span><br><span class="line"><span class="comment">//   24LC16       2 KB    YES</span></span><br><span class="line"><span class="comment">//   24LC08       1 KB    YES</span></span><br><span class="line"><span class="comment">//   24LC04      512 B    YES</span></span><br><span class="line"><span class="comment">//   24LC02      256 B    YES</span></span><br><span class="line"><span class="comment">//   24LC01      128 B    YES</span></span><br><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">I2C_eeprom::determineSize</span><span class="params">(<span class="keyword">const</span> <span class="keyword">bool</span> debug)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// try to read a byte to see if connected</span></span><br><span class="line">  <span class="keyword">if</span> (! isConnected()) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint8_t</span> patAA = <span class="number">0xAA</span>;    <span class="comment">//1010,1010</span></span><br><span class="line">  <span class="keyword">uint8_t</span> pat55 = <span class="number">0x55</span>; <span class="comment">//0101,0101</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">   * 每次倍增size，注意size即作检测的EEPROM大小，也作为地址指针位置</span></span><br><span class="line"><span class="comment">   * 对于24C01，size = 127是最末尾的byte，size = 128 会循环覆盖到 0</span></span><br><span class="line"><span class="comment">   * 对于24C02，size = 255是最末尾的byte，size = 256 会循环覆盖到 0</span></span><br><span class="line"><span class="comment">   * ......</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">uint32_t</span> <span class="built_in">size</span> = <span class="number">128</span>; <span class="built_in">size</span> &lt;= <span class="number">65536</span>; <span class="built_in">size</span> *= <span class="number">2</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">bool</span> folded = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// store old values</span></span><br><span class="line">    <span class="comment">//bool addressSize = _isAddressSizeTwoWords;            //依赖构造函数传是否是2byte地址, 不依赖，可以不初始化该值</span></span><br><span class="line">    _isAddressSizeTwoWords = <span class="built_in">size</span> &gt; I2C_DEVICESIZE_24LC16;  <span class="comment">//如果size倍增迭代大于2048Kbit，那么_isAddressSizeTwoWords = true</span></span><br><span class="line">    <span class="keyword">uint8_t</span> buf = readByte(<span class="built_in">size</span>);        <span class="comment">//去读地址指针=size处地址的1byte值，临时存起来</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// test folding 测试折叠</span></span><br><span class="line">    <span class="keyword">uint8_t</span> cnt = <span class="number">0</span>;                    <span class="comment">//统计页的大小，以byte为单位</span></span><br><span class="line">    writeByte(<span class="built_in">size</span>, pat55);                <span class="comment">//对size地址写入 0101,0101</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 如果首地址的值与写入的值相同，说明地址指针溢出后回到第一页地址，</span></span><br><span class="line"><span class="comment">     * 第一页之前的数据将被覆盖，不过没关系，我们事先存了副本到buf中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (readByte(<span class="number">0</span>) == pat55) cnt++;</span><br><span class="line"></span><br><span class="line">    writeByte(<span class="built_in">size</span>, patAA);                <span class="comment">//对size地址继续写入 1010,1010，地址指针会自增吗？</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 如果首地址的值与写入的值相同，说明页发生了折叠</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (readByte(<span class="number">0</span>) == patAA) cnt++;</span><br><span class="line">    folded = (cnt == <span class="number">2</span>);    <span class="comment">//如果cnt==2，那么发生了折叠</span></span><br><span class="line">    <span class="keyword">if</span> (debug)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="built_in">size</span>, HEX);</span><br><span class="line">      <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">'\t'</span>);</span><br><span class="line">      <span class="built_in">Serial</span>.<span class="built_in">println</span>(readByte(<span class="built_in">size</span>), HEX);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// restore old values    //恢复原有的数据，也就是说这个测试不会破坏原有的数据，考虑很周到</span></span><br><span class="line">    writeByte(<span class="built_in">size</span>, buf);</span><br><span class="line">    <span class="comment">//_isAddressSizeTwoWords = addressSize;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (folded) <span class="keyword">return</span> <span class="built_in">size</span>;    <span class="comment">//发生了折叠，返回size就是检测的EEPROM大小</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，抬头的注释：对于24C16及以下容量的型号，使用1byte address检测，24C32及以上容量的型号，使用2byte address检测，地址长度的变化根据I2C_eeprom类的成员<code>_isAddressSizeTwoWords</code> 的值在<code>I2C_eeprom::_beginTransmission()</code>中更改，相关代码节选：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  supports one and two bytes addresses</span></span><br><span class="line"><span class="keyword">void</span> I2C_eeprom::_beginTransmission(<span class="keyword">const</span> <span class="keyword">uint16_t</span> memoryAddress)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;_isAddressSizeTwoWords)</span><br><span class="line">  &#123;</span><br><span class="line">  _wire-&gt;<span class="built_in">beginTransmission</span>(_deviceAddress);</span><br><span class="line">    <span class="comment">// Address High Byte</span></span><br><span class="line">    _wire-&gt;<span class="built_in">write</span>((memoryAddress &gt;&gt; <span class="number">8</span>));            <span class="comment">//左移8bit，发送高位8bit</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> addr = _deviceAddress | ((memoryAddress &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0x07</span>);</span><br><span class="line">    _wire-&gt;<span class="built_in">beginTransmission</span>(addr);</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">// Address Low Byte (or single byte for chips 16K or smaller that have one-word addresses)</span></span><br><span class="line">  _wire-&gt;<span class="built_in">write</span>((memoryAddress &amp; <span class="number">0xFF</span>));            <span class="comment">//将bit[15:8]置0, 发送低位8bit</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>_isAddressSizeTwoWords</code> 默认未初始化，必须在I2C_eeprom类其中一个构造函数中传入deviceSize，才会初始化：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">I2C_eeprom</span> &#123;</span></span><br><span class="line">......</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">//  24LC32..24LC512 use two bytes for memory address</span></span><br><span class="line">  <span class="comment">//  24LC01..24LC16  use one-byte addresses + part of device address</span></span><br><span class="line">  <span class="keyword">bool</span>     _isAddressSizeTwoWords;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">I2C_eeprom::I2C_eeprom(<span class="keyword">const</span> <span class="keyword">uint8_t</span> deviceAddress, TwoWire *wire)</span><br><span class="line">&#123;</span><br><span class="line">    I2C_eeprom(deviceAddress, I2C_PAGESIZE_24LC256, wire);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据传入的deviceSize初始化_isAddressSizeTwoWords</span></span><br><span class="line">I2C_eeprom::I2C_eeprom(<span class="keyword">const</span> <span class="keyword">uint8_t</span> deviceAddress, <span class="keyword">const</span> <span class="keyword">uint32_t</span> deviceSize, TwoWire *wire)</span><br><span class="line">&#123;</span><br><span class="line">    _deviceAddress = deviceAddress;</span><br><span class="line">    _deviceSize = deviceSize;</span><br><span class="line">    _pageSize = getPageSize(_deviceSize);</span><br><span class="line">    _wire = wire;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Chips 16Kbit (2048 Bytes) or smaller only have one-word addresses.</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;_isAddressSizeTwoWords = deviceSize &gt; I2C_DEVICESIZE_24LC16;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个检测逻辑如果不给定<code>deviceSize</code>，就没法得知<code>_isAddressSizeTwoWords</code>，假真不给定<code>deviceSize</code>那如何检测容量？很简单，让<code>uint32_t I2C_eeprom::determineSize()</code>以1byte和2byte长度的地址各测试一遍，取计算结果偏大的，我分别进行了以下测试，可以看出该方法理论上可行：</p><table><thead><tr><th>被检测型号</th><th>address长度</th><th>检测的size</th><th>检测page</th></tr></thead><tbody><tr><td>24C02</td><td>1byte</td><td>256</td><td>8</td></tr><tr><td>24C02</td><td>2byte</td><td>128</td><td>8</td></tr><tr><td>24C128</td><td>1byte</td><td>0</td><td>8</td></tr><tr><td>24C128</td><td>2byte</td><td>16384</td><td>64</td></tr></tbody></table><p>对于24C1024，地址指针有1位在I2C P0位，实际是17bit寻址，所有该库uint16 address无法检测，需要升级类型到32bit，或者在<code>I2C_eeprom::determineSize()</code>检测到为65536时，更改I2C地址bit[1]，再次检测，看还是不是65536</p><h3 id="检测页大小"><a class="markdownIt-Anchor" href="#检测页大小"></a> 检测页大小</h3><p>根据之前的总大小自动返回页大小就行，没有用到页覆盖特性（不搞这么麻烦，简单粗暴）</p><p>另外，24C1024的Page size是256byte，还可以加一行if</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">I2C_eeprom::getPageSize</span><span class="params">(<span class="keyword">uint32_t</span> deviceSize)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// determine page size from device size - based on Microchip 24LCXX data sheets.</span></span><br><span class="line">    <span class="keyword">if</span> (deviceSize &lt;= I2C_DEVICESIZE_24LC02) <span class="keyword">return</span> <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">if</span> (deviceSize &lt;= I2C_DEVICESIZE_24LC16) <span class="keyword">return</span> <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">if</span> (deviceSize &lt;= I2C_DEVICESIZE_24LC64) <span class="keyword">return</span> <span class="number">32</span>;</span><br><span class="line">    <span class="keyword">if</span> (deviceSize &lt;= I2C_DEVICESIZE_24LC256) <span class="keyword">return</span> <span class="number">64</span>;</span><br><span class="line">    <span class="comment">// I2C_DEVICESIZE_24LC512</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改arduino库的实现到ee24库"><a class="markdownIt-Anchor" href="#修改arduino库的实现到ee24库"></a> 修改arduino库的实现到EE24库</h3><p>以下是检测页和Page大小的函数（我用 class 将 ee24 库套了一层）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">EE24::determine_memsize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// try to read a byte to see if connected</span></span><br><span class="line">    <span class="keyword">if</span> (! isConnected()) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设为测试值</span></span><br><span class="line">    _sizePageByte = <span class="number">8</span>;</span><br><span class="line">    _addrBitAndDev = <span class="number">0xff</span>;</span><br><span class="line">    _addrBitRightOffSet = <span class="number">0</span>;</span><br><span class="line">    _addrBitAndMem =  <span class="number">0x1ffff</span>;</span><br><span class="line">    _memAddSize = I2C_MEMADD_SIZE_8BIT;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">uint8_t</span> patAA = <span class="number">0xAA</span>;    <span class="comment">//1010,1010</span></span><br><span class="line">    <span class="keyword">uint8_t</span> pat55 = <span class="number">0x55</span>; <span class="comment">//0101,0101</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 每次倍增size，注意size即作检测的EEPROM大小，也作为地址指针位置</span></span><br><span class="line"><span class="comment">     * 对于24C01，size = 127是最末尾的byte，size = 128 会循环覆盖到 0</span></span><br><span class="line"><span class="comment">     * 对于24C02，size = 255是最末尾的byte，size = 256 会循环覆盖到 0</span></span><br><span class="line"><span class="comment">     * ......</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">uint32_t</span> <span class="built_in">size</span>;</span><br><span class="line">    <span class="keyword">uint32_t</span> sizePrev = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">uint32_t</span> sizeLater = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> folded;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="number">1</span>)</span><br><span class="line">            _memAddSize = I2C_MEMADD_SIZE_16BIT;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">size</span> = <span class="number">128</span>; <span class="built_in">size</span> &lt;= <span class="number">65536</span>; <span class="built_in">size</span> *= <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            folded = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//            uint8_t buf;</span></span><br><span class="line"><span class="comment">//            readByte(size,&amp;buf);        //去读地址指针=size处地址的1byte值，临时存起来</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// test folding 测试折叠</span></span><br><span class="line">            <span class="keyword">uint8_t</span> cnt = <span class="number">0</span>;            <span class="comment">//统计页的大小，以byte为单位</span></span><br><span class="line">            writeByte(<span class="built_in">size</span>,  &amp;pat55);     <span class="comment">//对size地址写入 0101,0101</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">uint8_t</span> readBuffer;</span><br><span class="line">            readByte( <span class="number">0</span>, &amp;readBuffer);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (readBuffer == pat55) cnt++;    <span class="comment">//如果首地址的值与写入的值相同，说明地址指针溢出后回到第一页地址， 第一页之前的数据将被覆盖，不过没关系，我们事先存了副本到buf中</span></span><br><span class="line">            writeByte(<span class="built_in">size</span>, &amp;patAA);         <span class="comment">//对size地址继续写入 1010,1010，地址指针会自增吗？</span></span><br><span class="line"></span><br><span class="line">            readByte( <span class="number">0</span>,  &amp;readBuffer);</span><br><span class="line">            <span class="keyword">if</span> (readBuffer == patAA) cnt++;    <span class="comment">//如果首地址的值与写入的值相同，说明页发生了折叠</span></span><br><span class="line"></span><br><span class="line">            folded = (cnt == <span class="number">2</span>);            <span class="comment">//如果cnt==2，那么发生了折叠</span></span><br><span class="line"></span><br><span class="line">            readByte(<span class="built_in">size</span>, &amp;readBuffer);</span><br><span class="line">            DBG_EE24(<span class="string">"size = %d,read address size: %d  "</span>, <span class="built_in">size</span>, readBuffer);</span><br><span class="line"><span class="comment">//            writeByte(size, &amp;buf); // restore old values    //恢复原有的数据，也就是说这个测试不会破坏原有的数据，但对8bit地址指针使用16bit搞不一定</span></span><br><span class="line">            <span class="keyword">if</span> (folded) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">size</span>;</span><br><span class="line">                <span class="keyword">if</span>(j == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="built_in">size</span> &gt; <span class="number">65535</span>) <span class="built_in">size</span> = <span class="number">0</span>;    <span class="comment">//说明16bit地址指针溢出</span></span><br><span class="line">                    sizePrev = <span class="built_in">size</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123; <span class="comment">//j == 1</span></span><br><span class="line">                    <span class="keyword">if</span>(<span class="built_in">size</span> &gt; <span class="number">65535</span>) <span class="built_in">size</span> = <span class="number">0</span>;    <span class="comment">//说明16bit地址指针溢出</span></span><br><span class="line">                    sizeLater = <span class="built_in">size</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果至少一个size非零, 那肯定发生了折叠，可以确定地址值位数</span></span><br><span class="line">    <span class="keyword">if</span>(sizePrev | sizeLater)&#123;</span><br><span class="line">        <span class="keyword">if</span>(sizePrev &lt; sizeLater) &#123;</span><br><span class="line">            _memAddSize = I2C_MEMADD_SIZE_16BIT;</span><br><span class="line">            <span class="built_in">size</span> = sizeLater;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            _memAddSize = I2C_MEMADD_SIZE_8BIT;</span><br><span class="line">            <span class="built_in">size</span> = sizePrev;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">size</span> / <span class="number">128</span>;    <span class="comment">//以Kbit单位返回，例如24C128返回128</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//   tested for 2 byte address</span></span><br><span class="line"><span class="comment">//   24LC1024     128 KB    待测试</span></span><br><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">EE24::determineMemSize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> <span class="built_in">size</span> = determine_memsize();</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">size</span> == I2C_DEVICESIZE_24LC512)&#123;</span><br><span class="line">        <span class="keyword">uint8_t</span> devAddrOld = _devAddress;</span><br><span class="line">        _devAddress = _devAddress | <span class="number">0x2</span>; <span class="comment">//更改P0位以检测24C1024</span></span><br><span class="line">        <span class="keyword">if</span>(determine_memsize() == I2C_DEVICESIZE_24LC512)</span><br><span class="line">            <span class="built_in">size</span> = I2C_DEVICESIZE_24LC1024;</span><br><span class="line">        _devAddress = devAddrOld;    <span class="comment">//还原地址</span></span><br><span class="line">    &#125;</span><br><span class="line">    _sizeMemKbit = <span class="built_in">size</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">size</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint16_t</span> <span class="title">EE24::determinePageSize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint16_t</span> <span class="built_in">size</span>;</span><br><span class="line">    <span class="comment">// determine page size from device size - based on Microchip 24LCXX data sheets.</span></span><br><span class="line">    <span class="keyword">if</span> (_sizeMemKbit &lt;= I2C_DEVICESIZE_24LC02) <span class="built_in">size</span> = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (_sizeMemKbit &lt;= I2C_DEVICESIZE_24LC16) <span class="built_in">size</span> = <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (_sizeMemKbit &lt;= I2C_DEVICESIZE_24LC64) <span class="built_in">size</span> = <span class="number">32</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (_sizeMemKbit &lt;= I2C_DEVICESIZE_24LC256) <span class="built_in">size</span> = <span class="number">64</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (_sizeMemKbit &lt;= I2C_DEVICESIZE_24LC512) <span class="built_in">size</span> = <span class="number">128</span>;</span><br><span class="line">    <span class="comment">// I2C_DEVICESIZE_24LC1024</span></span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">size</span> = <span class="number">256</span>;</span><br><span class="line">    _sizePageByte = <span class="built_in">size</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">size</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="eepprom存储数据"><a class="markdownIt-Anchor" href="#eepprom存储数据"></a> EEPPROM存储数据</h2><h3 id="将结构体存到eeprom"><a class="markdownIt-Anchor" href="#将结构体存到eeprom"></a> 将结构体存到EEPROM</h3><h4 id="union结合struct的技巧"><a class="markdownIt-Anchor" href="#union结合struct的技巧"></a> union结合struct的技巧</h4><p>EEPROM不论是1byte、多个byte、页的读写，每一次目标地址的迭代单位都是1byte，也就是说对于2byte及以上的单个类型（例如 uint16_t、int16_t、float、long、double等）不能直接用1byte迭代的读写函数，需要将这种类型拆分成多个1byte，存进去。取出来，也要再经历组合操作，转换成原来的类型，标准方法是使用 union：</p><p>联合体保存float到eeprom的方法</p><blockquote><p>联合体看似与结构体相似，但有不同之处，结构体中每个变量占用不同的内存，而联合体共用一段内存</p><p>联合体同一时间只用到一个成员</p><p>结构体变量所占内存长度是其中最大字段大小的整数倍</p><p>共用体变量所占的内存长度等于最长的成员变量的长度</p></blockquote><p><a href="https://blog.csdn.net/mrwangwang/article/details/49706005" target="_blank" rel="noopener">在EEPROM中保存浮点数的方法_mrwangwang的博客</a></p><p><a href="https://www.geek-workshop.com/thread-2323-1-1.html" target="_blank" rel="noopener">Arduino中利用EEPROM存储double和float类型的数据（使用共用体）</a></p><p><a href="https://docs.microsoft.com/zh-cn/cpp/cpp/unions?view=msvc-170" target="_blank" rel="noopener">union_Microsoft_Docs</a></p><p>🐂🍺<a href="https://www.eet-china.com/mp/a34530.html" target="_blank" rel="noopener">结构体内嵌联合体 在数据组包和解包的应用、Ti单片寄存器封装：union内嵌位域结构体、管理状态变量</a></p><p><a href="https://www.amobbs.com/thread-5636688-1-1.html" target="_blank" rel="noopener">amobbs：如何方便的读写结构体到EEPROM中？</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sensor_rom_t</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> addr;   </span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> altimes;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> exist;<span class="comment">//设置的状态</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> ctr;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> relay;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">union</span> cf_page</span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sensor_rom_t</span> <span class="title">s</span>[<span class="title">ALMMAX</span>];</span><span class="comment">//ALMMAX是存成结构体数组        //获取结构体值时，使用s</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> str[<span class="keyword">sizeof</span>(struct <span class="keyword">sensor_rom_t</span>) * ALMMAX];   <span class="comment">//读写EEPROM时，使用str </span></span><br><span class="line">&#125; cf;</span><br></pre></td></tr></table></figure><p>把 union 的 str 成员用 eeprom_write 写到eeprom里就可以了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eeprom_write((<span class="keyword">uint8_t</span> *)&amp;structx, <span class="keyword">sizeof</span>(structx));</span><br></pre></td></tr></table></figure><p>不过有个问题,，结构体有不同类型的成员，编译器可能插入填充字节进行<strong>字节对齐</strong>，结构体实际大小可能大于其成员大小的总和，这种情况的结构体如果是union 的成员，那么用union的另一个成员保存到EEPROM，会造成EEPROM空间浪费？先Mark一下，以后再想想</p><h4 id="sau-g0的系统设置的存储结构"><a class="markdownIt-Anchor" href="#sau-g0的系统设置的存储结构"></a> SAU-G0的系统设置的存储结构</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//路径 Settings.h</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">orgData</span>&#123;</span></span><br><span class="line">    <span class="comment">//版本信息</span></span><br><span class="line">    <span class="keyword">uint16_t</span> FWversion;</span><br><span class="line">    <span class="comment">//数据采集</span></span><br><span class="line">    <span class="keyword">uint32_t</span> TimeRUN;                <span class="comment">// 累计运行时间--RUN</span></span><br><span class="line">    <span class="keyword">uint32_t</span> TimeLPW_RUN;            <span class="comment">// 累计运行时间--LPW_RUN</span></span><br><span class="line">    <span class="keyword">uint32_t</span> TImeSTOP1;                <span class="comment">// 累计运行时间--STOP1</span></span><br><span class="line">    <span class="keyword">uint16_t</span> NumOfDataCollected;    <span class="comment">// 已采集的数据组个数(也用于下次写EEPROM地址的指针偏移)</span></span><br><span class="line">    <span class="keyword">uint16_t</span> NumOfDataWillCollect;    <span class="comment">// 将采集的数据组个数</span></span><br><span class="line">    <span class="comment">//任务开始日期</span></span><br><span class="line">    <span class="keyword">uint16_t</span> STyy;</span><br><span class="line">    <span class="keyword">uint16_t</span> STMM;</span><br><span class="line">    <span class="keyword">uint16_t</span> STdd;</span><br><span class="line">    <span class="keyword">uint16_t</span> SThh;</span><br><span class="line">    <span class="keyword">uint16_t</span> STmm;</span><br><span class="line">    <span class="keyword">uint16_t</span> STss;</span><br><span class="line">    <span class="comment">//任务采集周期（+ 任务开始日期，可以配合RTClib的opertor算出结束日期）</span></span><br><span class="line">    <span class="keyword">uint16_t</span> Thh;    <span class="comment">//&gt;24小时后, 换算为天</span></span><br><span class="line">    <span class="keyword">uint16_t</span> Tmm;</span><br><span class="line">    <span class="keyword">uint16_t</span> Tss;</span><br><span class="line">    <span class="comment">//每个周期采集样本数（给滤波器的处理为一组数据，不会存未经滤波的多个数据组）</span></span><br><span class="line">    <span class="keyword">uint16_t</span> TSamples;                        <span class="comment">//暂时不支持单独设置某一对象的样本数</span></span><br><span class="line">    <span class="comment">//这个其实当全局变量好了，不需要存在eeprom</span></span><br><span class="line">    <span class="comment">//日期时间</span></span><br><span class="line">    <span class="keyword">uint16_t</span> yy;    <span class="comment">//0~99</span></span><br><span class="line">    <span class="keyword">uint16_t</span> MM;</span><br><span class="line">    <span class="keyword">uint16_t</span> dd;</span><br><span class="line">    <span class="keyword">uint16_t</span> hh;</span><br><span class="line">    <span class="keyword">uint16_t</span> mm;</span><br><span class="line">    <span class="keyword">uint16_t</span> ss;</span><br><span class="line">    <span class="comment">//显示设置</span></span><br><span class="line">    <span class="keyword">uint16_t</span> ScreenBrightness;    <span class="comment">// 0~100% 屏幕亮度</span></span><br><span class="line">    <span class="comment">//熄屏唤醒</span></span><br><span class="line">    <span class="keyword">uint16_t</span> Sensitivity;         <span class="comment">// 0~100% 动作阈值</span></span><br><span class="line">    <span class="keyword">uint16_t</span> SleepTime;         <span class="comment">// 0~999S 亮屏时间</span></span><br><span class="line">    <span class="comment">//开关标志</span></span><br><span class="line">    settingsBitsType settingsBits[<span class="number">2</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * systemStorageType</span></span><br><span class="line"><span class="comment"> * 用于片外 EEPROM 储存设置信息和数据采集信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">union</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">orgData</span> <span class="title">data</span>;</span>            <span class="comment">//运行时使用</span></span><br><span class="line">    <span class="keyword">uint8_t</span> ctrl[<span class="keyword">sizeof</span>(orgData)];    <span class="comment">//向eeprom读写时使用</span></span><br><span class="line">&#125; systemStorageType;</span><br></pre></td></tr></table></figure><h4 id="如何节约标志位的空间"><a class="markdownIt-Anchor" href="#如何节约标志位的空间"></a> 如何节约标志位的空间？</h4><blockquote><p>注：”Colum“ 的正确拼写是 &quot;Column&quot;，后文都是用 ”Colum“ 是我的历史遗留问题，见笑了</p></blockquote><p>SAU-G0的系统设置里有很多“开启”或”关闭“的设置，如果用uint8_t，或uint16_t存放，非常耗费EEPROM容量，使用前面提到的技巧</p><p>系统设置是systemStorageType类型，它的data成员的settingsBits[2]数组，是settingsBitsType类型，其使用union内嵌位域结构体，每个settings_Bits结构可存8个标志位（0或1）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//路径 Settings.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sysBits 0    <span class="comment">//表示系统设置</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> colBits 1    <span class="comment">//表示采样设置</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">settings_Bits</span>&#123;</span></span><br><span class="line">    <span class="keyword">uint8_t</span> bit0     :<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> bit1     :<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> bit2     :<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> bit3     :<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> bit4     :<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> bit5     :<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> bit6     :<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> bit7     :<span class="number">1</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">union</span>&#123;</span><br><span class="line">    settings_Bits bits;</span><br><span class="line">    <span class="keyword">uint8_t</span> ctrl;        <span class="comment">//    colum对象成员prBits和mask修改bits时使用</span></span><br><span class="line">&#125;settingsBitsType;</span><br></pre></td></tr></table></figure><p>在实现多级菜单的Page类中也实现了对位域的修改，例如构造colum时可传入 <code>指向settingsBitsType的指针</code> + <code>对应bit的掩码</code>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//路径 colum.hpp</span></span><br><span class="line">Class colum &#123; </span><br><span class="line">......</span><br><span class="line">        colum(<span class="keyword">const</span> <span class="keyword">char</span> *Str, settingsBitsType* Bits, <span class="keyword">uint8_t</span> Mask)  :</span><br><span class="line">        str(Str), ptrBits(Bits), mask(Mask)&#123;&#125;</span><br><span class="line">......</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//路径 CutomPageObjects.cpp，实例化colum对象</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;colum&gt; columsScreenOffAndWKUP = &#123;</span><br><span class="line">......</span><br><span class="line">        colum(<span class="string">"自动休眠"</span>, &amp;systemSto.data.settingsBits[sysBits], B00000001),</span><br><span class="line">......</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>changeSettingsBitByMask()实现修改位，类似于I2C读写寄存器指定位：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//路径 Page.cpp</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">changeSettingsBitByMask</span><span class="params">(settingsBitsType * ptrBits, <span class="keyword">uint8_t</span> mask)</span></span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> b = ptrBits-&gt;ctrl;    <span class="comment">//先备份一个</span></span><br><span class="line">    (b &amp; mask)?            <span class="comment">//若b对应mask为1的位为1</span></span><br><span class="line">        (b = b &amp; ~mask)        <span class="comment">//不改变b对应mask为0位的值，将mask为1的值改为0</span></span><br><span class="line">    :                    <span class="comment">//b对应mask为1的位为0</span></span><br><span class="line">        (b = b | mask);        <span class="comment">//不改变b对应mask为0位的值，将mask为0的值改为1</span></span><br><span class="line"><span class="comment">//参考                b = (data != 0) ? (b | mask) : (b &amp; ~mask);</span></span><br><span class="line">    ptrBits-&gt;ctrl = b;    <span class="comment">//保存b到结构体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试union内嵌位域结构体作为colum构造函数参数，在Debug下查看位域修改情况：</p><p><img src="/74fbdec2/union%E5%86%85%E5%B5%8C%E4%BD%8D%E5%9F%9F%E7%BB%93%E6%9E%84%E4%BD%93%E4%BD%9C%E4%B8%BAColum%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E5%9C%A8Debug%E4%B8%8B%E6%9F%A5%E7%9C%8B%E4%BD%8D%E5%9F%9F%E4%BF%AE%E6%94%B9%E6%83%85%E5%86%B5.png" alt="union内嵌位域结构体作为Colum构造函数参数在Debug下查看位域修改情况"></p><h3 id="sau-g0采集数据的格式"><a class="markdownIt-Anchor" href="#sau-g0采集数据的格式"></a> SAU-G0采集数据的格式</h3><p>存SAU-G0采集数据的EEPROM建议24C16（16Kbit容量）以上，因为 24C16刚好是2KB，与G031 Flash的页大小一样，存满了可以拷贝到G031的Flash的一个页里</p><p>对于24C16，每小时存一组（温度16bit+湿度16bit）的采集数据，可以存20天，消耗1920byte，余下的128byte，支持每天用6byte存一次日期，还余下8byte，6byte日期数据如下：</p><table><thead><tr><th>大小</th><th>1byte</th><th>1byte</th><th>1byte</th><th>1byte</th><th>1byte</th><th>1byte</th></tr></thead><tbody><tr><td>类型</td><td>uint8_t</td><td>uint8_t</td><td>uint8_t</td><td>uint8_t</td><td>uint8_t</td><td>uint8_t</td></tr><tr><td>举个栗子</td><td>22</td><td>5</td><td>23</td><td>16</td><td>04</td><td>23</td></tr><tr><td>单位</td><td>年</td><td>月</td><td>日</td><td>时</td><td>分</td><td>秒</td></tr></tbody></table><p>4byte温湿度采集数据如下：</p><table><thead><tr><th>大小</th><th>2byte</th><th>2byte</th></tr></thead><tbody><tr><td>类型</td><td>uint16_t</td><td>uint16_t</td></tr><tr><td>举个栗子</td><td>25.7</td><td>63.2</td></tr><tr><td>单位</td><td>℃或℉</td><td>%</td></tr></tbody></table><p>即使24C16只有2KB最多存20天，但拷贝到flash后，只要G031 的 Flash空间还有，每页就能多存20天</p><h3 id="串口输出eeprom存储的采集数据"><a class="markdownIt-Anchor" href="#串口输出eeprom存储的采集数据"></a> 串口输出EEPROM存储的采集数据</h3><p>流程：每24次里 从EEPEOM读1次日期，读24次温湿度数据，转成字符串，分配一个缓冲区，将热乎的字符串数据格式化成MarkDown表格的编码结构</p><p>举个例子，想要串口输出成这样子的：（注意时间和日期没有前导0）</p><table><thead><tr><th>Date &amp; Time</th><th>T(℃)</th><th>H(%)</th></tr></thead><tbody><tr><td>2022/5/10 8:00</td><td>8.72</td><td>5.83</td></tr><tr><td>2022/5/10 10:00</td><td>22.54</td><td>58.44</td></tr><tr><td>2022/5/10 12:00</td><td>25.67</td><td>53.12</td></tr><tr><td>...</td><td>...</td><td>...</td></tr></tbody></table><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string"> 时间            </span>|<span class="string"> 温度(℃) </span>|<span class="string"> 湿度(%) </span>|</span><br><span class="line">|<span class="string"> --------------- </span>|<span class="string"> ------- </span>|<span class="string"> ------- </span>|</span><br><span class="line">|<span class="string"> 2022/5/10 08:00 </span>|<span class="string"> 18.7    </span>|<span class="string"> 65.8    </span>|</span><br><span class="line">|<span class="string"> 2022/5/10 10:00 </span>|<span class="string"> 22.5    </span>|<span class="string"> 58.4    </span>|</span><br><span class="line">|<span class="string"> 2022/5/10 12:00 </span>|<span class="string"> 25.6    </span>|<span class="string"> 53.1    </span>|</span><br><span class="line">|<span class="string"> ...             </span>|<span class="string"> ...     </span>|<span class="string"> ...     </span>|</span><br></pre></td></tr></table></figure><p>不算表格抬头，一次输出一行，至少得分配42byte作为TxBuffer</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| <span class="number">2022</span>/<span class="number">5</span>/<span class="number">10</span> <span class="number">08</span>:<span class="number">00</span> | <span class="number">18.7</span>    | <span class="number">65.8</span>    |  \r \n \<span class="number">0</span></span><br><span class="line">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class="line"><span class="number">012345678901234567890123456789012345678</span>  <span class="number">9</span>  <span class="number">0</span>  <span class="number">1</span></span><br></pre></td></tr></table></figure><p>相关实现在 <a href="https://github.com/oldgerman/SAU-G0/blob/master/SoftWare/SAU-G031G8U6/USER/GUI/Menu/CustomPageFuc.cpp#L210" target="_blank" rel="noopener">columsDataCollect_Export</a></p><h2 id="附"><a class="markdownIt-Anchor" href="#附"></a> 附</h2><h3 id="eeprom-字节对齐"><a class="markdownIt-Anchor" href="#eeprom-字节对齐"></a> EEPROM 字节对齐？</h3><p><a href="https://github.com/RobTillaart/I2C_EEPROM/blob/1a6461a7dd5645ab3dcd148fbdc6dfc5ce6f9971/I2C_eeprom.cpp" target="_blank" rel="noopener">I2C_EEPROM/I2C_eeprom.cpp</a>，这个库实现了EEPROM字节对齐</p><p><a href="https://www.cnblogs.com/King-Gentleman/p/5297355.html" target="_blank" rel="noopener">stm32使用#pragma pack（非常详细的字节对齐用法说明）</a></p><p><a href="http://www.openedv.com/thread-7415-1-1.html" target="_blank" rel="noopener">STM32 FATFS结构体的字节对齐问题.所以建议大家在自己建立结构体的时候,最好加上__packed关键字</a></p><h3 id="excel-技巧"><a class="markdownIt-Anchor" href="#excel-技巧"></a> Excel 技巧</h3><p><a href="https://zhuanlan.zhihu.com/p/85613944" target="_blank" rel="noopener">excel录入技巧：如何进行日期格式的转换，真日期vs假日期</a></p><p><a href="https://zhuanlan.zhihu.com/p/149604904" target="_blank" rel="noopener">Excel时间计算公式大全</a></p><p><a href="https://support.microsoft.com/zh-cn/office/%E8%AE%A1%E7%AE%97%E4%B8%A4%E4%B8%AA%E6%97%B6%E9%97%B4%E4%B9%8B%E9%97%B4%E7%9A%84%E5%B7%AE%E5%80%BC-e1c78778-749b-49a3-b13e-737715505ff6" target="_blank" rel="noopener">计算两个时间之间的差值 support.microsoft</a></p><p><a href="https://www.bilibili.com/s/video/BV1jh411y7bz" target="_blank" rel="noopener">如何在excel中求气温距平序列</a></p>]]></content>
      
      
      <categories>
          
          <category> SAU-G0 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nRLC音频头版组装指南</title>
      <link href="/1eb159fd/"/>
      <url>/1eb159fd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h2><p>点击可快速跳转</p><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#%E5%85%B3%E4%BA%8E%E5%8E%9F%E7%89%88nRLC">关于原版nRLC</a></li><li><a href="#%E5%85%B3%E4%BA%8E%E9%9F%B3%E9%A2%91%E5%A4%B4%E7%89%88nRLC">关于音频头版nRLC</a></li><li><a href="#%E6%89%93%E6%A0%B7">打样</a></li><li><a href="#%E9%87%87%E8%B4%AD">采购</a></li><li><a href="#%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87">工具准备</a></li><li><a href="#%E6%9E%84%E5%BB%BA">构建</a></li><li><a href="#%E6%8C%89%E9%94%AE%E6%93%8D%E4%BD%9C">按键操作</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E6%97%B6%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98">使用时的一些问题</a></li><li><a href="#%E6%A0%A1%E5%87%86">校准</a></li><li><a href="#%E8%93%9D%E7%89%99%E6%A8%A1%E5%9D%97">蓝牙模块</a></li><li><a href="#%E7%BB%AD%E8%88%AA%E5%92%8C%E7%94%B5%E6%B5%81%E6%B5%8B%E8%AF%95">续航和电流测试</a></li><li><a href="#%E5%90%91GFX%E5%86%99%E9%82%AE%E4%BB%B6">向GFX写邮件</a></li><li><a href="#%E8%87%B4%E8%B0%A2">致谢</a></li></ul><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><blockquote><p>本文解决nRLC音频头版制作和使用问题，谢绝转载发布！</p><p>文章和附加资料免费给有意DIY的朋友参考，请不要将其用作商业用途！</p><p>你第一次接触到本套文件可能是压缩包，内容可能滞后，制作前请访问原始链接检查更新：</p><p>本文网页版链接： <a href="https://oldgerman.github.io/1eb159fd/">https://oldgerman.github.io/1eb159fd/</a></p><p>附加资料仓库链接：<a href="https://github.com/oldgerman/nRLC-Split" target="_blank" rel="noopener">https://github.com/oldgerman/nRLC-Split</a></p></blockquote><a id="more"></a><p>欢迎制作nRLC音频头版！</p><p>虽搬砖细节诸多，但本文按组装顺序排列章节，可在这找到从零到正常工作的所有信息，各项配置已通过第一轮内测验证</p><p><img src="/1eb159fd/s_OldGerman%E5%88%B6%E4%BD%9C%E7%9A%84%E5%88%9D%E5%8F%B7%E6%9C%BA%E5%92%8C%E4%BA%8C%E5%8F%B7%E6%9C%BA.JPG" alt></p><h2 id="关于原版nrlc"><a class="markdownIt-Anchor" href="#关于原版nrlc"></a> 关于原版nRLC</h2><h3 id="作者"><a class="markdownIt-Anchor" href="#作者"></a> 作者</h3><p>原版nRLC由两位作者开发，发布在radiokot论坛上参赛，但讨论贴转到vrtp论坛了</p><table><thead><tr><th>radiokot论坛昵称</th><th>vrtp论坛昵称</th><th>名字</th></tr></thead><tbody><tr><td>Alex2</td><td>литиум（锂）</td><td>Александр Лебедь（亚历山大·莱伯德）</td></tr><tr><td>GFX</td><td>GFX</td><td>Павел Сметанников（帕维尔·斯梅坦尼科夫）</td></tr></tbody></table><h3 id="pcb和固件"><a class="markdownIt-Anchor" href="#pcb和固件"></a> PCB和固件</h3><p>截至2022/03/19</p><ul><li><p>PCB版本：V1.0</p></li><li><p>固件版本：v2.12</p><p>分为免费和付费版，程序不开源，以hex形式提供</p><p>免费固件发布在作者GFX的网盘，测量频率固定为1KHz</p><p>付费版有更多可调节的测量频率，需要向作者GFX写邮件支付注册费用，价格500卢布</p></li></ul><h3 id="相关链接"><a class="markdownIt-Anchor" href="#相关链接"></a> 相关链接</h3><p>以下链接需要科学上网、俄语翻译</p><p><a href="https://radiokot.ru/artfiles/6645/" target="_blank" rel="noopener">文章：nRLC 仪表（radiokot论坛）</a>（介绍清楚的地方本文不再复述）</p><p><a href="https://yadi.sk/d/b8ccGOW2jkNCRg" target="_blank" rel="noopener">作者发布资料的网盘：包括文档、原理图、BOM、Gerber、固件、外壳、手册等</a></p><p><a href="https://vrtp.ru/index.php?showtopic=33311&amp;st=780" target="_blank" rel="noopener">讨论贴（vrtp论坛）</a></p><p><a href="https://www.youtube.com/watch?v=Y4qtolGoLX4&amp;t=33s" target="_blank" rel="noopener">nRLC运行视频</a></p><h2 id="关于音频头版nrlc"><a class="markdownIt-Anchor" href="#关于音频头版nrlc"></a> 关于音频头版nRLC</h2><p>只是PCB和外壳些许不同，程序还是和原版nRLC一样</p><p>制作过<a href="https://radiokot.ru/artfiles/6435/" target="_blank" rel="noopener">原版uRLC</a>，但镊子的固定方式不太理想，一直想改可插拔探头</p><p>感谢作者提供的资料，历经一个多月的时间，PCB验证收工，外壳也完成了设计验证</p><p>相关的制造资料请从<a href="https://github.com/oldgerman/nRLC-Split" target="_blank" rel="noopener">Github仓库</a>下载</p><p>虽然修改为音频头，但若非必要，请尽量减少连接器插拔次数</p><h3 id="成本"><a class="markdownIt-Anchor" href="#成本"></a> 成本</h3><p>疫情导致芯片涨麻了，电子器件部分的一套物料（电阻电容算到每颗）按照全新原装报价，费用突破250元，不包括邮费</p><h3 id="主体pcb"><a class="markdownIt-Anchor" href="#主体pcb"></a> 主体PCB</h3><p>和原版nRLC一样上下叠板设计，器件的摆放次序几乎不变，一些器件的封装和摆放位置经过优化，层数增加到4层，中间两层铺地</p><p>右侧多余的部分是拼板，蓝牙模块和音频座垫高板</p><table><thead><tr><th><img src="/1eb159fd/PCB_layout_2.png" alt></th><th><img src="/1eb159fd/PCB_layout_3.png" alt></th></tr></thead></table><p>由于芯片荒，有些器件很难买到，或者涨价离谱，在不影响测量性能情况下给出了可选的替代器件，某些焊盘做了兼容设计，详情请参考<a href="https://github.com/oldgerman/nRLC-Split/tree/master/BOM" target="_blank" rel="noopener">交互式BOM</a>和<a href="https://github.com/oldgerman/nRLC-Split/tree/master/Gerber/nRLC-Split" target="_blank" rel="noopener">Gerber</a></p><h3 id="镊子探头pcb"><a class="markdownIt-Anchor" href="#镊子探头pcb"></a> 镊子探头PCB</h3><p>制作一个镊子探头需要两片该PCB榫接</p><table><thead><tr><th><img src="/1eb159fd/PCB_Tweezers_1.png" alt></th><th><img src="/1eb159fd/PCB_Tweezers_2.png" alt></th></tr></thead></table><h3 id="外壳"><a class="markdownIt-Anchor" href="#外壳"></a> 外壳</h3><p>盒盖设计，壳厚2mm，确保经久耐用，FDM打印容易</p><p><img src="/1eb159fd/%E5%A4%96%E5%A3%B3%E8%A3%85%E9%85%8D.png" alt></p><h2 id="打样"><a class="markdownIt-Anchor" href="#打样"></a> 打样</h2><p>PCB需打样两次四层版，分别为nRLC音频头版PCB和镊子PCB，JLC可免费包邮打板，考虑到JLC客编到处加影响美观，Gerber文件合适的地方已有 “JLCJLCJLCJLC”标识，下单时可选指定位置加客编~</p><ul><li>音频头版PCB：四层，板厚1.0mm，最小线宽线距5mil，是拼板，拼板白线之间无铜，但不会被JLC判定为拼板</li><li>镊子PCB：四层，板厚1.6mm，是拼板，但拼板白线之间有铜，如果像主板PCB那样无铜会被JLC判定为拼板</li></ul><h2 id="采购"><a class="markdownIt-Anchor" href="#采购"></a> 采购</h2><h3 id="电子器件"><a class="markdownIt-Anchor" href="#电子器件"></a> 电子器件</h3><p><a href="https://github.com/oldgerman/nRLC-Split/tree/master/BOM" target="_blank" rel="noopener">交互式BOM</a>，下载到本地后，双击它，浏览器打开即可，值为N/I是不用焊接的器件，<a href="https://github.com/oldgerman/nRLC-Split/tree/master/SCH" target="_blank" rel="noopener">原理图</a>与该BOM某些器件的值不一样，请以BOM的值为准！</p><h3 id="某些集成器件的采购建议"><a class="markdownIt-Anchor" href="#某些集成器件的采购建议"></a> 某些集成器件的采购建议</h3><p>以下统计截止于2022/03</p><ul><li><p>AD8542ARMZ（封装 MSOP-8）：涨得离谱，建议海外购AD8542ARUZ（封装 TSSOP-8）代替</p></li><li><p>INA826AIDGK（封装 VSSOP-8）：涨得离谱，建议海外购INA826<span style="color:red;">S</span>IDRC（封装 WSON-10），或者INA826AIDRG（封装 WSON-8，似乎无货）代替</p></li><li><p>TPS63000：涨价离谱，某店铺<span style="color:red;">2元包邮</span>的翻新货经测试正常（md血赚，这不买爆？）<a href="https://item.taobao.com/item.htm?id=643406471842" target="_blank" rel="noopener">TPS63000DRCR 丝印 BPT 封装QFN10 开关稳压器</a></p></li><li><p>STM32F303：涨得离谱，优先使用STM32F303CCT6，建议闲鱼收F3飞控拆下来用</p><blockquote><p>用STM32F303CBT6还是STM32F303CCT6？</p><p>使用ST-LINK读出FLASH，观察固件的结束地址是0x802E3F0，也就是占用flash大小约185KB，根据ST的手册，303CC有256KB Flash可用，而303CB只有128KB，当用STM32Programmer去读Flash时，303CB和303CC都能读到256K空间（大小0x40000，结束地址0x8040000），那么可推断303CB与303CC在同一块晶圆上生产，303CB没有对后128KB空间做物理屏蔽，但可以照样访问它，但不能保证后128KB空间检测是否合格，这与F103C8和F103CB的状况一样</p><p>参考：<a href="https://www.stmcu.org.cn/module/forum/forum.php?mod=viewthread&amp;tid=607566" target="_blank" rel="noopener">ST的福利？STM32F103C8T6的flash居然有有128k? </a></p></blockquote></li></ul><h3 id="其他物料的采购"><a class="markdownIt-Anchor" href="#其他物料的采购"></a> 其他物料的采购</h3><ul><li><p>五点导航按键：</p><p><a href="https://item.taobao.com/item.htm?id=603833760438" target="_blank" rel="noopener">薄片型10*10五向按键贴片10脚</a></p></li><li><p>type-c母座16p弹片版：</p><p><a href="https://item.taobao.com/item.htm?id=558120853450" target="_blank" rel="noopener">USB3.1 Type-C 母座 卧贴 四脚定位 16P 有弹片</a></p></li><li><p>3.5音频头母座：nRLC本体PCB需要焊接的</p><p><a href="https://item.taobao.com/item.htm?id=541918871301" target="_blank" rel="noopener">耳机插座 PJ-320 4脚插脚 立式 镀金 耳机母座</a></p></li><li><p>3.5音频头公座：制作镊子探头选用</p><p><a href="https://item.taobao.com/item.htm?id=618962800759" target="_blank" rel="noopener"> 3.5耳机公头 4节 4脚 插板式 2.0厚盘</a></p></li><li><p>3.5屏蔽公对公音频线：制作鳄鱼夹探头选用</p><p><a href="https://item.taobao.com/item.htm?id=641111890445" target="_blank" rel="noopener">富士康1米公对公3.5mm音频线</a></p></li><li><p>压电陶瓷蜂鸣片：使用12MM规格</p><p><a href="https://item.taobao.com/item.htm?id=626704955015" target="_blank" rel="noopener">蜂鸣片铜片焊线压电陶瓷蜂鸣片</a></p></li><li><p>锂电池：尺寸402025，不同厂家的厚度差异较大，推荐厚度3.7mm左右</p><p><a href="https://item.taobao.com/item.htm?id=524477988173" target="_blank" rel="noopener">3.7V聚合物锂电池402025 180mAh</a></p></li><li><p>热缩管：</p><p>镊子探头选用，镊子腿PCB宽度10mm，建议直径8mm</p><p>鳄鱼夹探头选用，音频线径3mm，建议直径4mm</p></li><li><p>鳄鱼夹一对：制作鳄鱼夹探头选用，锯齿和平口都可</p></li><li><p>H62黄铜板：厚度0.5或0.8mm</p><p>镊子探头选用，用于制作接触头片，如果没有曲线锯，需要找厂家激光切割，有的话可以自己做，<a href="https://github.com/oldgerman/nRLC-Split/tree/master/CAD" target="_blank" rel="noopener">CAD图纸</a></p></li><li><p>烧录工具（若使用<a href="#DFU%E6%A8%A1%E5%BC%8F%E5%88%B7%E5%9B%BA%E4%BB%B6">DFU模式刷固件</a>则非必须）：ST-LINK、USB-A母座小板、2.54杜邦线母对母3根</p></li><li><p>焊接工具、五金工具：见工具章节部分</p></li><li><p>金手指胶带</p></li></ul><p>一套外壳固定用的五金件：</p><ul><li><p>不锈钢内六角螺丝杯头 x5规格：M1.6x12 (螺纹/螺纹的长度)，<a href="https://item.taobao.com/item.htm?id=40272016203" target="_blank" rel="noopener">链接</a></p></li><li><p>注塑热熔铜滚花螺母 x5规格：外2.5 M1.6 1.5高，<a href="https://item.taobao.com/item.htm?id=39063858665" target="_blank" rel="noopener">链接</a></p></li></ul><h2 id="工具准备"><a class="markdownIt-Anchor" href="#工具准备"></a> 工具准备</h2><h3 id="焊接工具"><a class="markdownIt-Anchor" href="#焊接工具"></a> 焊接工具</h3><blockquote><p>焊接工具影响焊接的可靠性，良好的工具能减少虚焊连锡导致的诸多电路问题</p></blockquote><p><img src="/1eb159fd/s_%E7%84%8A%E6%8E%A5%E5%B7%A5%E5%85%B7.JPG" alt></p><p><strong>基本</strong></p><ul><li><p>电烙铁：936、T12等</p></li><li><p>焊锡丝：Sn63以上的有铅或无铅焊锡丝，直径0.6mm以内</p></li><li><p>助焊剂：固体松香、液体助焊剂、助焊膏、助焊油等</p></li><li><p>吸锡带：宽度越小越好，十分适合处理长腿的器件连锡，例如LQFP、MSOP封装</p></li><li><p>镊子：ESD镊子或陶瓷镊子，放置元器件</p></li><li><p>吸锡器</p></li></ul><p><strong>清洗</strong></p><ul><li><p>洗板水</p></li><li><p>1ml注射器</p></li><li><p>毛刷或棉签</p></li></ul><p><strong>钢网</strong></p><ul><li>锡膏：Sn63以上的有铅或无铅锡膏</li><li>锡膏稀释剂</li><li>飞鹰牌保安刀片：刮锡膏</li><li>热风枪（可调温）</li></ul><p><strong>夹持</strong></p><ul><li>小台钳、万向夹具等，也可DIY一套图示的：<a href="https://github.com/oldgerman/ODG-Clip" target="_blank" rel="noopener">仓库资料</a></li></ul><h3 id="五金工具"><a class="markdownIt-Anchor" href="#五金工具"></a> 五金工具</h3><blockquote><p>五金工具关乎电路板与外壳的组装，外壳与PCB的间隙仅0.2mm，要求尺寸精确</p></blockquote><p><img src="/1eb159fd/s_%E4%BA%94%E9%87%91%E5%B7%A5%E5%85%B7.JPG" alt="五金工具"></p><ul><li>水砂纸：建议准备320目、600目、1000目</li><li>锉刀：直径3mm的圆锉刀，平锉刀随意</li><li>壁纸刀：划分电路板</li><li>尺子：游标卡尺、直尺等</li><li>内六角扳手：对边1.5mm，拧外壳的M1.6杯头螺丝</li><li>曲线锯：做黄铜镊子接触头（选用）</li></ul><h2 id="构建"><a class="markdownIt-Anchor" href="#构建"></a> 构建</h2><h3 id="主体"><a class="markdownIt-Anchor" href="#主体"></a> 主体</h3><table><thead><tr><th><img src="/1eb159fd/%E6%9E%84%E5%BB%BA%E4%B8%BB%E4%BD%931.png" alt></th><th><img src="/1eb159fd/%E6%9E%84%E5%BB%BA%E4%B8%BB%E4%BD%932.png" alt></th></tr></thead></table><h4 id="分板"><a class="markdownIt-Anchor" href="#分板"></a> 分板</h4><p>请用壁纸刀或者锯子沿着PCB分板的两条白线中间区域分割，若用壁纸刀，PCB正反面都要划几十下，再掰断分板后，用锉刀+砂纸打磨至分板的白线消失</p><table><thead><tr><th><img src="/1eb159fd/%E9%9F%B3%E9%A2%91%E5%A4%B4%E7%89%88PCB%E5%88%86%E6%9D%BF(1).JPG" alt="音频头版PCB分板(1)"></th><th><img src="/1eb159fd/%E9%9F%B3%E9%A2%91%E5%A4%B4%E7%89%88PCB%E5%88%86%E6%9D%BF(2).JPG" alt="音频头版PCB分板(2)"></th></tr></thead></table><h4 id="bom"><a class="markdownIt-Anchor" href="#bom"></a> BOM</h4><p><a href="https://github.com/oldgerman/nRLC-Split/tree/master/BOM" target="_blank" rel="noopener">交互式BOM</a>，下载到本地后，双击它，浏览器打开即可，值为N/I是不用焊接的器件，<a href="https://github.com/oldgerman/nRLC-Split/tree/master/SCH" target="_blank" rel="noopener">原理图</a>与该BOM某些器件的值不一样，请以BOM的值为准！</p><h4 id="type-c"><a class="markdownIt-Anchor" href="#type-c"></a> Type-c</h4><p>用尖嘴钳两侧折耳，壁纸刀切掉定位柱，与原版nRLC改的方法一样</p><table><thead><tr><th>右边为修改后的</th><th>右边为修改后的</th></tr></thead><tbody><tr><td><img src="/1eb159fd/TTPE-C%E9%AD%94%E6%94%B91.JPG" alt></td><td><img src="/1eb159fd/TTPE-C%E9%AD%94%E6%94%B92.JPG" alt></td></tr></tbody></table><h4 id="刮锡膏回流焊"><a class="markdownIt-Anchor" href="#刮锡膏回流焊"></a> 刮锡膏&amp;回流焊</h4><blockquote><p>建议观看Alan分享的<a href="https://www.youtube.com/watch?v=_i3AWOY-sRU" target="_blank" rel="noopener">从钢网印刷到手动贴片到回流焊接的PCB制作全流程</a>，但本节没必要用这么好的工具</p><p>屏幕的排线焊接请参考：<a href="https://www.bilibili.com/video/BV17J41167bA/?spm_id_from=333.788.recommend_more_video.2" target="_blank" rel="noopener">一分钟教你规范焊接排线</a></p><p>某些器件需要根据使用的封装，需要挑去多余的锡膏，或焊接方式特殊，具体后文有说明</p></blockquote><p>低成本教学</p><ol><li>将需要刮锡膏的PCB使用多余的PCB和胶带固定</li><li>取适量锡膏到容器中，滴锡膏稀释剂，搅拌均匀</li><li>将锡膏挑到钢网左侧无开孔的区域，铺成均匀的条状，长度要求覆盖焊盘区域宽度</li><li>钢网对齐焊盘，手指按住钢网，使用飞鹰牌保安刀片呈45度，施加一定压力，从左往右缓慢刮锡膏</li><li>压住钢网左边，从右边掀开钢网，若操作得当，可以看见边沿清爽的锡膏（如图1、2）</li><li>根据交互式BOM表，使用镊子放置元器件（如图3）</li><li>使用工具夹住PCB（镊子也行），风枪按<a href="https://www.researchmfg.com/2018/02/rss-rts/" target="_blank" rel="noopener">马鞍式回流焊曲线</a>分段加热，直到完成回流焊步骤（如图4）</li></ol><table><thead><tr><th><img src="/1eb159fd/%E9%92%A2%E7%BD%91%E4%BD%9C%E4%B8%9A(1).jpeg" alt="钢网作业(1)"></th><th><img src="/1eb159fd/%E9%92%A2%E7%BD%91%E4%BD%9C%E4%B8%9A(3).jpeg" alt="钢网作业(3)"></th></tr></thead><tbody><tr><td><img src="/1eb159fd/%E9%92%A2%E7%BD%91%E4%BD%9C%E4%B8%9A(2).jpeg" alt="钢网作业(2)"></td><td><img src="/1eb159fd/%E9%92%A2%E7%BD%91%E4%BD%9C%E4%B8%9A(4).jpeg" alt="钢网作业(4)"></td></tr></tbody></table><h4 id="焊盘锡膏处理"><a class="markdownIt-Anchor" href="#焊盘锡膏处理"></a> 焊盘锡膏处理</h4><table><thead><tr><th>AD8542ARMZ + 2片 INA826AIDGK</th><th>AD8542ARUZ +  2片 INA826<span style="color:red;">S</span>IDRC</th></tr></thead><tbody><tr><td><img src="/1eb159fd/y_%E5%85%BC%E5%AE%B9%E7%84%8A%E7%9B%981.jpg" alt></td><td><img src="/1eb159fd/y_%E5%85%BC%E5%AE%B9%E7%84%8A%E7%9B%982.jpg" alt></td></tr></tbody></table><table><thead><tr><th>AD8542ARUZ</th><th>INA826<span style="color:red;">S</span>IDRC 或 INA826AIDRG</th></tr></thead><tbody><tr><td><img src="/1eb159fd/%E9%94%A1%E8%86%8F%E5%A4%84%E7%90%86-AD8542ARUZ-1.jpg" alt></td><td><img src="/1eb159fd/INA826%E5%89%94%E9%99%A4%E9%94%A1%E8%86%8F.jpg" alt="INA826剔除锡膏"></td></tr><tr><td>这个特殊焊盘是封装 TSSOP-8 和 MSOP-8 的混合焊盘<br><br>若使用 AD8542ARUZ（封装 TSSOP-8），封装会长一点，需要剔除部分锡膏，若使用 AD8542ARMZ（封装 MSOP-8）则不需要此操作</td><td>这个特殊焊盘是封装 VSSOP-8 和 WSON-10 的混合焊盘<br><br>若使用 INA826AIDGK（封装 VSSOP-8）需要剔除中间的锡膏，若使用 INA826<span style="color:red;">S</span>IDRC（封装 WSON-10）则不需要，若使用 INA826AIDRG（封装 WSON-8）要剔除封装 WSON-10 的pin5和pin6脚的锡膏<br><br><span style="color:red;">注意：</span>WSON封装器件侧面爬锡会不太理想（张力将焊锡往外拉），回流焊后大概率需要手动补锡</td></tr></tbody></table><h4 id="五点按钮"><a class="markdownIt-Anchor" href="#五点按钮"></a> 五点按钮</h4><p>按钮的黑色十字塑料在高温下极易翘曲变形，建议从背面加热焊接</p><table><thead><tr><th><img src="/1eb159fd/%E4%BA%94%E7%82%B9%E6%8C%89%E9%92%AE.JPG" alt></th><th><img src="/1eb159fd/%E4%BA%94%E7%82%B9%E6%8C%89%E9%92%AE%E7%84%8A%E6%8E%A5.png" alt></th></tr></thead></table><h4 id="音频母座"><a class="markdownIt-Anchor" href="#音频母座"></a> 音频母座</h4><table><thead><tr><th>PCB的拼板专门有两个小板（区分左右）用作垫高1mm</th><th>上下板拼接后，侧面效果：</th></tr></thead><tbody><tr><td><img src="/1eb159fd/PJ320A%E5%9E%AB%E9%AB%98PCB-1.jpg" alt></td><td><img src="/1eb159fd/PJ320A%E5%9E%AB%E9%AB%98PCB-2.JPG" alt></td></tr></tbody></table><h4 id="跳线"><a class="markdownIt-Anchor" href="#跳线"></a> 跳线</h4><p>nRLC原版PCB存在Q1无法关断耗电的BUG，根据讨论帖Q1关断不完全的解决方式（2021 年 11 月 26 日的一些帖子），增加了这个跳线焊盘，请从两种跳线方式中选一种焊接，即可解决</p><table><thead><tr><th>跳线1、2号焊盘</th><th>跳线2、3号焊盘</th></tr></thead><tbody><tr><td><img src="/1eb159fd/%E7%84%8A%E6%8E%A5%E8%B7%B3%E7%BA%BF1.png" alt></td><td><img src="/1eb159fd/%E7%84%8A%E6%8E%A5%E8%B7%B3%E7%BA%BF2.png" alt></td></tr><tr><td>SN74AHC1G32DBVR的pin1与OK1网络连接</td><td>SN74AHC1G32DBVR的pin1串接二极管</td></tr></tbody></table><h4 id="电池引线"><a class="markdownIt-Anchor" href="#电池引线"></a> 电池引线</h4><table><thead><tr><th>拆除金手指胶带从中间引线，再重新包好</th><th>安装示意，注意正负极</th></tr></thead><tbody><tr><td><img src="/1eb159fd/%E9%94%82%E7%94%B5%E6%B1%A0-1.png" alt></td><td><img src="/1eb159fd/%E9%94%82%E7%94%B5%E6%B1%A0-2.jpeg" alt="锂电池-2"></td></tr></tbody></table><h4 id="插针-陶瓷蜂鸣片"><a class="markdownIt-Anchor" href="#插针-陶瓷蜂鸣片"></a> 插针、陶瓷蜂鸣片</h4><table><thead><tr><th>这两对插针需要剪断高出PCB平面的部分再焊接，影响外壳安装</th><th>陶瓷蜂鸣片处理</th></tr></thead><tbody><tr><td><img src="/1eb159fd/%E6%A8%A1%E6%8B%9F%E5%9C%B0%E6%8E%92%E9%92%88(1).jpg" alt="模拟地排针(1)"></td><td><img src="/1eb159fd/%E6%A8%A1%E6%8B%9F%E5%9C%B0%E6%8E%92%E9%92%88(2).jpg" alt="模拟地排针(2)"></td></tr></tbody></table><h3 id="固件烧录"><a class="markdownIt-Anchor" href="#固件烧录"></a> 固件烧录</h3><h4 id="swd接口刷固件"><a class="markdownIt-Anchor" href="#swd接口刷固件"></a> SWD接口刷固件</h4><p>准备ST-LINK，USB-A母座小板，USB-A to USB-C数据线，按下图所示引线，接到ST-LINK</p><p>从ST官网安装并打开<a href="https://www.st.com/en/development-tools/stsw-link004.html" target="_blank" rel="noopener">ST-LINK Uitilty</a>或<a href="https://www.st.com/en/development-tools/stm32cubeprog.html" target="_blank" rel="noopener">STM32CubeProgrammer</a>软件，全程按住五点开关中键不放，连接后等待固件烧录完成，烧录完成后可硬复位重启（按键操作请参考<a href="#%E6%8C%89%E9%94%AE%E6%93%8D%E4%BD%9C">按键操作</a>：硬复位）</p><table><thead><tr><th><img src="/1eb159fd/SWD%E6%8E%A5%E7%BA%BF-2.JPG" alt="SWD接线-2"></th><th><img src="/1eb159fd/SWD%E6%8E%A5%E7%BA%BF-1.JPG" alt="SWD接线-1"></th></tr></thead></table><h4 id="dfu模式刷固件"><a class="markdownIt-Anchor" href="#dfu模式刷固件"></a> DFU模式刷固件</h4><blockquote><p><a href="https://www.youtube.com/watch?v=Kx7yWVi8kbU" target="_blank" rel="noopener">ST官方教程：Getting started with STM32 built-in USB DFU Bootloader</a></p></blockquote><ol><li>从ST官网安装<a href="https://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-programmers/stsw-stm32080.html" target="_blank" rel="noopener">DfuSe</a>软件，这个软件安装过程中会安装STM32的DFU驱动，以及DFU file manager软件</li><li>把老毛的hex文件用DFU file manager转成dfu文件，详细步骤请参考：<a href="https://www.cnblogs.com/wanglouxiaozi/p/12793334.html" target="_blank" rel="noopener">STM32 DFU windows烧录工具的使用</a></li><li>打开DfuSe，用USB线将nRLC直接连电脑，然后进入DFU模式，请参考<a href="#%E6%8C%89%E9%94%AE%E6%93%8D%E4%BD%9C">按键操作</a>：DFU</li><li>最后刷入即可</li></ol><h3 id="镊子探头"><a class="markdownIt-Anchor" href="#镊子探头"></a> 镊子探头</h3><table><thead><tr><th><img src="/1eb159fd/%E6%9E%84%E5%BB%BA%E9%95%8A%E5%AD%901.png" alt></th><th><img src="/1eb159fd/%E6%9E%84%E5%BB%BA%E9%95%8A%E5%AD%902.png" alt></th></tr></thead></table><h4 id="分板-2"><a class="markdownIt-Anchor" href="#分板-2"></a> 分板</h4><table><thead><tr><th><img src="/1eb159fd/%E9%95%8A%E5%AD%90PCB%E5%88%86%E6%9D%BF(1).JPG" alt="镊子PCB分板(1)"></th><th><img src="/1eb159fd/%E9%95%8A%E5%AD%90PCB%E5%88%86%E6%9D%BF(2).JPG" alt></th></tr></thead></table><h4 id="接触头"><a class="markdownIt-Anchor" href="#接触头"></a> 接触头</h4><p>研究了下某商用电桥SMT测试夹接触片，设计了本接触头，可以低成本简单制作</p><table><thead><tr><th>某商用电桥SMT测试夹接触片</th><th>接触头（本节DIY的）</th></tr></thead><tbody><tr><td><img src="/1eb159fd/%E6%8E%A5%E8%A7%A6%E5%A4%B4-1.png" alt></td><td><img src="/1eb159fd/%E6%8E%A5%E8%A7%A6%E5%A4%B4-2.png" alt></td></tr></tbody></table><p>材料H62黄铜板0.5或0.8mm厚，若有<a href="#%E4%BA%94%E9%87%91%E5%B7%A5%E5%85%B7">五金工具</a>齐全，可以自己做，没有的话，找厂家激光切割，<a href="https://github.com/oldgerman/nRLC-Split/tree/master/CAD" target="_blank" rel="noopener">CAD图纸</a></p><table><thead><tr><th>根据CAD加工黄铜片，水砂纸抛去毛刺</th><th>使用尖嘴钳的平整部分沿线折弯，折弯线可拿壁纸刀划出</th></tr></thead><tbody><tr><td><img src="/1eb159fd/%E6%8E%A5%E8%A7%A6%E5%A4%B4DIY-1.JPG" alt></td><td><img src="/1eb159fd/%E6%8E%A5%E8%A7%A6%E5%A4%B4DIY-2.jpg" alt></td></tr><tr><td>两次折弯的方向相反，折弯的一致性要求高</td><td>折弯后的小惊喜：回流焊时居然能自动焊盘归位</td></tr><tr><td><img src="/1eb159fd/%E6%8E%A5%E8%A7%A6%E5%A4%B4DIY-4.png" alt="接触头DIY-3"></td><td><img src="/1eb159fd/%E6%8E%A5%E8%A7%A6%E5%A4%B4DIY-3.JPG" alt="接触头DIY-4"></td></tr></tbody></table><h4 id="焊接组装"><a class="markdownIt-Anchor" href="#焊接组装"></a> 焊接&amp;组装</h4><table><thead><tr><th><img src="/1eb159fd/%E6%8E%A5%E8%A7%A6%E5%A4%B4%E7%84%8A%E6%8E%A5-1.JPG" alt></th><th><img src="/1eb159fd/%E6%8E%A5%E8%A7%A6%E5%A4%B4%E7%84%8A%E6%8E%A5-2.JPG" alt></th></tr></thead><tbody><tr><td><img src="/1eb159fd/%E9%95%8A%E5%AD%90%E7%84%8A%E6%8E%A5%E7%BB%84%E8%A3%85-1.JPG" alt="镊子焊接组装-1"></td><td><img src="/1eb159fd/%E9%95%8A%E5%AD%90%E7%84%8A%E6%8E%A5%E7%BB%84%E8%A3%85-2.JPG" alt="镊子焊接组装-2"></td></tr><tr><td>需要制作两半一样的</td><td>两半拼接固定的焊点可以不焊，放入外壳后不会松动</td></tr><tr><td><img src="/1eb159fd/%E9%95%8A%E5%AD%90%E7%84%8A%E6%8E%A5%E7%BB%84%E8%A3%85-4.JPG" alt="镊子焊接组装-4"></td><td><img src="/1eb159fd/%E9%95%8A%E5%AD%90%E7%84%8A%E6%8E%A5%E7%BB%84%E8%A3%85-5.JPG" alt="镊子焊接组装-5"></td></tr></tbody></table><h3 id="鳄鱼夹探头"><a class="markdownIt-Anchor" href="#鳄鱼夹探头"></a> 鳄鱼夹探头</h3><p>本部分演示低成本的鳄鱼测试夹的制作（费用&lt;10￥）</p><p><a href="https://www.bilibili.com/s/video/BV1o54y1973Y" target="_blank" rel="noopener">【经验分享】鳄鱼夹这样焊接更牢固</a></p><table><thead><tr><th>准备公对公带屏蔽的音频线</th><th>沿中间剪断</th><th>剥出信号线，剪掉外露的屏蔽线</th></tr></thead><tbody><tr><td><img src="/1eb159fd/DIY%E9%B3%84%E9%B1%BC%E5%A4%B9%E6%8E%A2%E5%A4%B4(1).JPG" alt></td><td><img src="/1eb159fd/DIY%E9%B3%84%E9%B1%BC%E5%A4%B9%E6%8E%A2%E5%A4%B4(2).JPG" alt></td><td><img src="/1eb159fd/DIY%E9%B3%84%E9%B1%BC%E5%A4%B9%E6%8E%A2%E5%A4%B4(3).JPG" alt></td></tr><tr><td>可以用金手指胶带包一圈再焊接，防止屏蔽线与铜夹子接触</td><td>热缩管再套一圈</td><td>套上绝缘保护套</td></tr><tr><td><img src="/1eb159fd/DIY%E9%B3%84%E9%B1%BC%E5%A4%B9%E6%8E%A2%E5%A4%B4(4).JPG" alt></td><td><img src="/1eb159fd/DIY%E9%B3%84%E9%B1%BC%E5%A4%B9%E6%8E%A2%E5%A4%B4(5).JPG" alt></td><td><img src="/1eb159fd/DIY%E9%B3%84%E9%B1%BC%E5%A4%B9%E6%8E%A2%E5%A4%B4(6).JPG" alt></td></tr></tbody></table><h3 id="四端测试线"><a class="markdownIt-Anchor" href="#四端测试线"></a> 四端测试线</h3><p>鳄鱼夹探头不是标准四端测试夹，若测量要求更高，建议使用开尔文测试夹（作者Alex2（литиум）在讨论贴<a href="https://vrtp.ru/index.php?s=998560494c4145bd415e5f295a4e9b5e&amp;showtopic=33311&amp;st=1590#" target="_blank" rel="noopener"># 925745</a>指出问题）</p><p>nRLC每个音频头母座能引出两对GND和信号线，你可以自己画块转接板，用两个<a href="https://item.taobao.com/item.htm?id=618962800759" target="_blank" rel="noopener">四节音频公头</a>引出四端测试线，通过单芯屏蔽线接到两个开尔文测试夹，接线图如下：</p><p><img src="/1eb159fd/nRLC-Split%E5%BC%80%E5%B0%94%E6%96%87%E5%A4%B9%E6%8E%A5%E7%BA%BF%E7%A4%BA%E6%84%8F.png" alt></p><p>主板音频头母座的四线定义如下：</p><p><img src="/1eb159fd/nRLC-Split%E4%B8%BB%E6%9D%BF%E9%9F%B3%E9%A2%91%E5%A4%B4%E6%AF%8D%E5%BA%A7%E5%9B%9B%E7%BA%BF%E5%AE%9A%E4%B9%89.png" alt></p><p>分别是：</p><ul><li>L<sub>CUR</sub>：电流激励低端</li><li>L<sub>POT</sub>：电压取样低端</li><li>H<sub>POT</sub>：电压取样高端</li><li>H<sub>CUR</sub>：电流激励高端</li></ul><p>短路开尔文夹子校准时，正确的夹序可以是：</p><ul><li>H<sub>CUR</sub>、L<sub>CUR</sub>、H<sub>POT</sub>、L<sub>POT</sub></li><li>L<sub>CUR</sub>、H<sub>CUR</sub>、L<sub>POT</sub>、H<sub>POT</sub></li></ul><p>以nRLC主机正面看，音频孔在左侧时，红色夹子接下面的音频头，黑色夹子接上面的音频头</p><blockquote><p>有不少网友好奇测量毫欧级电阻的准确度，这里补充一个小测试：</p></blockquote><p>测量毫欧级电阻，设置FPS为1，稳定5秒后取30秒读数跳动的最大范围</p><p>测量前已校准：以正确夹序四线短路校准、1Ω 0.1% 电阻校准，校准后再次测量1Ω校准电阻读数1.000Ω非常稳定</p><table><thead><tr><th>型号</th><th>阻值</th><th>误差</th><th>温漂</th><th>功率</th><th>封装</th><th>测量信号（Vpp）</th><th>频率：1KHz（读数±跳动范围）</th></tr></thead><tbody><tr><td>N/A</td><td>正确夹序四线短路</td><td>N/A</td><td>N/A</td><td>N/A</td><td>N/A</td><td>2.5V</td><td>0.016mΩ±-0.021mΩ</td></tr><tr><td>PA2512FKE7W0R001E</td><td>1mΩ</td><td>±1%</td><td>±50ppm/℃</td><td>2W</td><td>2512</td><td>2.5V</td><td>0.976mΩ±0.026mΩ</td></tr><tr><td>PA2512FKE7W0R01E</td><td>10mΩ</td><td>±1%</td><td>±50ppm/℃</td><td>2W</td><td>2512</td><td>2.5V</td><td>9.974mΩ±0.026mΩ</td></tr><tr><td>HoJLR2512-3W-100mR-1%</td><td>100mΩ</td><td>±1%</td><td>±50ppm/℃</td><td>3W</td><td>2512</td><td>2.5V</td><td>98.91mΩ±0.02mΩ</td></tr><tr><td>RT1206BRD071RL</td><td>1Ω（校准电阻）</td><td>±0.1%</td><td>±25ppm/℃</td><td>250mW</td><td>1206</td><td>2.5V</td><td>1.000Ω±0.000Ω</td></tr></tbody></table><p>测试线使用30cm音频线接开尔文测试夹，测试的电阻都焊在 <a href="https://github.com/oldgerman/mR-71-RE/tree/master/Gerber/Kelvin_RES" target="_blank" rel="noopener">开尔文焊盘电阻测试板</a></p><table><thead><tr><th><img src="/1eb159fd/nRLC-Split%E9%9F%B3%E9%A2%91%E7%BA%BF%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9.JPG" alt="nRLC-Split音频线开尔文测试夹"></th><th><img src="/1eb159fd/nRLC-Split%E9%9F%B3%E9%A2%91%E7%BA%BF%E5%BC%80%E5%B0%94%E6%96%87%E6%B5%8B%E8%AF%95%E5%A4%B9%EF%BC%9A%E6%B5%8B%E9%87%8F1m%CE%A9%E7%94%B5%E9%98%BB.JPG" alt="nRLC-Split音频线开尔文测试夹：测量1mΩ电阻"></th></tr></thead></table><h3 id="外壳-2"><a class="markdownIt-Anchor" href="#外壳-2"></a> 外壳</h3><h4 id="3d打印"><a class="markdownIt-Anchor" href="#3d打印"></a> 3D打印</h4><table><thead><tr><th></th><th>推荐材料</th><th>备注</th></tr></thead><tbody><tr><td>FDM</td><td>PLA、ABS、HTPA-CF(#滑稽)</td><td>外壳用ABS和HTPA-CF都打过，下面是推荐的一些切片参数<br>层高：0.15mm<br>喷嘴：0.4mm<br>壁走线次数：≥ 2<br>流量：内壁外壁120%，其他110%<br>填充密度：100%<br>打印速度： 首层 30mm/s，内外壁 30mm/s，其他 60mm/s<br>回抽：速度5mm/s，加速度45mm/s<sup>2</sup></td></tr><tr><td>SLA</td><td>类ABS树脂</td><td>分为刚性树脂与类ABS树脂，建议使用类ABS树脂，不要使用刚性树脂（无法埋注塑滚花螺母，会碎裂成粉末）</td></tr><tr><td>SLS</td><td>PA12、HTPA、碳纤或玻纤增强的PA12或HTPA</td><td>PA6在螺丝的压力下容易蠕变（缓慢变形）不推荐，PA12蠕变性很小，比较昂贵，建议使用至少PA12性能的尼龙</td></tr></tbody></table><p><a href="https://formlabs.com/asia/blog/fdm-vs-sla-vs-sls-how-to-choose-the-right-3d-printing-technology/" target="_blank" rel="noopener">3D Printing Technology Comparison: FDM vs. SLA vs. SLS</a></p><h4 id="按钮垫片"><a class="markdownIt-Anchor" href="#按钮垫片"></a> 按钮垫片</h4><p>SLA与SLS存在最薄处限制，通常为0.8mm，零件<code>按钮垫片_XXX.STL</code>要求材料具有较好的弹性，但SLA打出来的可能比较硬，按钮无法正常按下，建议使用FDM或者SLS打印</p><ul><li>SLA：不推荐打印</li><li>SLS：<code>按钮垫片_0.8mm.STL</code> （存在最薄限制，否则打不出来）</li><li>FDM<code>按钮垫片_0.3mm.STL</code> 或 <code>按钮垫片_0.45mm.STL</code>，如果材料是碳纤玻纤增强的，选 <code>按钮垫片_0.3mm.STL</code> ，只打首层</li></ul><h4 id="链接零件"><a class="markdownIt-Anchor" href="#链接零件"></a> 链接零件</h4><p>提供的<a href="https://github.com/oldgerman/nRLC-Split/tree/master/STL" target="_blank" rel="noopener">链接零件.STL</a>只适用SLA或SLS工艺，厂家普遍存在单件打印起步价格，因此将这些琐碎的零件拼起来打更便宜</p><p>链接零件包括：</p><ul><li>中心按钮*4：但缩放比例不同，1.000，1.033，1.066，1.099，考虑材料可能收缩，请选择最适合的</li><li>周围按钮*1</li><li>按钮垫片*2：多一个备用</li><li>屏幕垫片*1</li></ul><p>此零件需分件修整</p><table><thead><tr><th>链接前</th><th>链接后</th></tr></thead><tbody><tr><td><img src="/1eb159fd/%E9%93%BE%E6%8E%A5%E9%9B%B6%E4%BB%B6-1.png" alt></td><td><img src="/1eb159fd/%E9%93%BE%E6%8E%A5%E9%9B%B6%E4%BB%B6-2.png" alt></td></tr></tbody></table><h4 id="埋注塑滚花螺母"><a class="markdownIt-Anchor" href="#埋注塑滚花螺母"></a> 埋注塑滚花螺母</h4><p>外壳的上壳需要使用烙铁埋注塑滚花螺母，烙铁头的温度不要太高，应调节到外壳材料的打印温度，孔给的比较小，可以用直径不大于2mm的麻花钻扩孔</p><table><thead><tr><th><img src="/1eb159fd/y_%E5%A4%96%E5%A3%B3%E8%A3%85%E9%85%8D-2.png" alt></th><th><img src="/1eb159fd/%E5%A4%96%E5%A3%B3%E8%A3%85%E9%85%8D-3.JPG" alt="外壳装配-3"></th></tr></thead></table><h4 id="壳内结构零件安装"><a class="markdownIt-Anchor" href="#壳内结构零件安装"></a> 壳内结构零件安装</h4><p>中心按钮、周围按钮、按钮垫片、屏幕垫片</p><p>十分建议屏幕排线焊好后再用金手指胶带贴在PCB上，防止拆外壳时拉断排线的焊点</p><table><thead><tr><th><img src="/1eb159fd/%E5%9E%AB%E7%89%87(1).jpeg" alt></th><th><img src="/1eb159fd/%E5%9E%AB%E7%89%87(2).jpeg" alt></th></tr></thead></table><h2 id="按键操作"><a class="markdownIt-Anchor" href="#按键操作"></a> 按键操作</h2><ul><li><p>点按中键：</p><blockquote><p>开机（关机时）</p><p>进入菜单（运行时且在主界面）</p><p>确定（运行时在菜单页）</p></blockquote></li><li><p>点按左键：切换详情页</p></li><li><p>点按右键：切换波形页</p></li><li><p>点按上下键：</p><blockquote><p>切换测量频率（运行时且在主界面，注册版固件才有的操作）</p><p>移动菜单选中的栏（运行时在菜单页）</p></blockquote></li><li><p>长按中键：开关机</p></li><li><p>长按左键：切换P/S模式</p></li><li><p>长按右键：切换2.5V/0.25V</p></li><li><p>菜单内一键返回主界面：点按左键、点按右键、长按上键、长按下键 都行</p></li><li><p>硬复位：按住OK键不放，点按下键，即可硬复位重启</p></li><li><p>DFU：关机下按住上键不放，然后长按中键，进入DFU模式，此时可以松开上键，但中键得一直长按以维持系统上电。若DFU刷固件，要等固件上传完成，进行硬复位，再松开</p></li></ul><h2 id="使用时的一些问题"><a class="markdownIt-Anchor" href="#使用时的一些问题"></a> 使用时的一些问题</h2><ol><li><p>加速度计旋转不起作用：</p><blockquote><p>焊接锂电池后，上下板子首次合二为一，需要在设置里再次设置自动旋转，否则加速度计不起作用，即使板子上一次分开前使能了自动旋转</p></blockquote></li><li><p>屏幕只有背光，无显示</p><blockquote><p>长按OK关机后再次长按打开即可，不行就多来几次</p></blockquote></li><li><p>菜单默认为俄语，可切换：俄语、乌克兰语、英语</p><blockquote><p>俄语模式下，关机再开机，在主界面后，按照以下顺序【点按】即可切换为英语：</p><p>中 下 中 下 下 中 中 上 中</p></blockquote></li><li><p>超底功耗模式下windows无法识别USB串口，时钟只有24M，因此关闭了USB</p></li><li><p>五向按钮映射：右手模式上键在上，左手模式上键也在上，但相对位置变了，DFU、硬复位的按键操作以右手模式为准</p></li></ol><h2 id="校准"><a class="markdownIt-Anchor" href="#校准"></a> 校准</h2><p>菜单Calibration里，按照顺序依次校准，最后保存即可，具体细节可以看<a href="https://oldgerman.github.io/845419ff/">uRLC复刻笔记</a>的校准章节</p><p>另外，在菜单Settings--&gt;Performance MCU，可设置MCU工作在三种性能模式：高性能、经济、超级经济。根据讨论贴<a href="https://vrtp.ru/index.php?showtopic=33311&amp;st=1530#" target="_blank" rel="noopener">#923569</a>，GFX建议在以后要使用的性能模式下进行校准</p><h2 id="蓝牙模块"><a class="markdownIt-Anchor" href="#蓝牙模块"></a> 蓝牙模块</h2><p>目前不准备测试，蓝牙的与用USB连电脑与上位机通信的功能一样</p><p>原版nRLC使用HM-17或HM-19模块(CC2640R2F)，通过飞线连接，用一张纸隔在模拟部分电路下方，会增加2mm左右的外壳厚度</p><p>为不增加壳体厚度，尝试在上下板之间的缝隙内安装模块和转接板，经尺寸检查可行，同样通过飞线连接</p><p>不一定要用本转接板+成品模块，可以照转接板尺寸自己画一个蓝牙模块，把HM-17或HM-19模块的元件搬过来用</p><p>转接板用的信驰达的RF-BM-4044B4或RF-BM-4044B5迷你蓝牙模块，这两个也是CCR2640芯片，固件与hm17或hm19不一样，但模块引出了芯片的JTAG_TDI、JTAG_TDO、TMS、TCK以及RESET引脚，可以使用J-Link四线制模式刷固件，或者使用xds100v3 两线制刷机，Ti示例的或者第三方固件都没有试过，不知道能否使用</p><table><thead><tr><th><img src="/1eb159fd/%E8%93%9D%E7%89%99%E6%A8%A1%E5%9D%97(1).jpeg" alt="蓝牙模块(1)"></th><th><img src="/1eb159fd/%E8%93%9D%E7%89%99%E6%A8%A1%E5%9D%97(2).jpg" alt="蓝牙模块(2)"></th></tr></thead></table><p>一些可能有用的链接：</p><p><a href="http://www.jnhuamao.cn/download_rom_en.asp?id=1" target="_blank" rel="noopener">hm17、hm19 固件下载</a>，通过串口升级的，这个模块出厂有bootloader</p><p><a href="http://furzy.com/mikesblog/notes/loading-firmware-cc2640-loading-a-hex-file/" target="_blank" rel="noopener">CC2640加载hex文件</a></p><p><a href="https://www.cnblogs.com/twxbtx/p/10006410.html" target="_blank" rel="noopener">使用Jlink给CC2640R2F烧写固件方法</a></p><h2 id="续航和电流测试"><a class="markdownIt-Anchor" href="#续航和电流测试"></a> 续航和电流测试</h2><h3 id="续航"><a class="markdownIt-Anchor" href="#续航"></a> 续航</h3><p>充电速度：约0.5C充电，从电池2.95V欠压保护开始测试，约两小时充电到4.23V</p><p>402025 180mAh电池，充满电到4.2V开始测试，运行到电量红色警告</p><table><thead><tr><th>MCU模式</th><th>屏幕亮度</th><th>时间</th></tr></thead><tbody><tr><td>高性能</td><td>100%</td><td>约60分钟，此时电池电压3.42V</td></tr><tr><td>极致省电</td><td>5%</td><td>约160分钟，此时电池电压3.45V</td></tr></tbody></table><h3 id="锂电池电流"><a class="markdownIt-Anchor" href="#锂电池电流"></a> 锂电池电流</h3><p>万用表电流档位：200mA 测试</p><table><thead><tr><th>CPU模式</th><th>屏幕亮度 (%)</th><th>开机前几秒电流 (mA)</th><th>稳定时电流 (mA)</th></tr></thead><tbody><tr><td>高性能</td><td>100</td><td>121</td><td>120.5~120.07</td></tr><tr><td>高性能</td><td>5</td><td>107</td><td>106.8~107.3</td></tr><tr><td>经济</td><td>100</td><td>103</td><td>68.8~71.1</td></tr><tr><td>经济</td><td>5</td><td>88.5</td><td>68.5~70.1</td></tr><tr><td>超级经济</td><td>100</td><td>83</td><td>57.5~59</td></tr><tr><td>超级经济</td><td>5</td><td>68.6</td><td>57.6~59</td></tr></tbody></table><h2 id="向gfx写邮件"><a class="markdownIt-Anchor" href="#向gfx写邮件"></a> 向GFX写邮件</h2><p>芯片ID和GFX邮箱位置：菜单Information里，连按中键到第四页会显示</p><p>付费的完整版固件请向GFX写邮件询问，仅限本机芯片ID使用</p><p>邮件请附上芯片ID和制作nRLC一些图片，证明是你自己组装的而不是商人</p><p>GFX是俄罗斯人，若写邮件不会俄语的话建议首选英语，请注意礼貌哦！</p><h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2><ul><li>感谢nRLC作者GFX和Alex2(литиум)开发出这么棒的作品</li><li>感谢参与nRLC音频头版第一轮内测的朋友们</li><li>感谢JLC PCB制造的高可靠性四层板</li><li>感谢FusRock开发的UltraPA-CF耗材</li></ul><h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2><p>欢迎在博客下方留言！为尊重原作者的劳动成果，与破解固件有关的留言都会删除！</p>]]></content>
      
      
      <categories>
          
          <category> 仪表制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ODGIRON LIS3DH笔记</title>
      <link href="/74a960e2/"/>
      <url>/74a960e2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ts100的两个加速度计"><a class="markdownIt-Anchor" href="#ts100的两个加速度计"></a> TS100的两个加速度计</h2><p>基于IronOS固件的典型烙铁，比如TS100的PCB预留了两种加速度计焊盘，一种是NXP的MMA系列的MMA8652FC加速度计，一种是ST的LIS系列的LIS2DH12加速度计，实际出货时只焊接一个（这么做应该是和采购有关），大多数TS100仅焊接的是LIS2DH12加速度计，其封装为 LGA12(2.0x2.0x1.0 mm)，焊盘之间实在距离太小了，又是LGA封装，和QFN封装能侧面爬锡不同，LGA封装仅底面开了焊盘，侧面无法爬锡，从网上找到TS100的PCB的加速度计如下：</p><a id="more"></a><table><thead><tr><th>TS100采用双PCB设计</th><th>小PCB通过板对板连接器与大PCB连接</th></tr></thead><tbody><tr><td><img src="/74a960e2/TS100-72%E5%8F%98(1).png" alt="TS100-72变(1)"></td><td><img src="/74a960e2/TS100-72%E5%8F%98(2).png" alt="TS100-72变(2)"></td></tr></tbody></table><table><thead><tr><th>小PCB右加速计和STM32</th><th>确认型号与LC商城的LIS2DH12一致</th></tr></thead><tbody><tr><td><img src="/74a960e2/TS100-guts2-525px.jpg" alt="TS100-guts2-525px"></td><td><img src="/74a960e2/LIS2DH12-LC.png" alt="LIS2DH12-LC"></td></tr></tbody></table><h2 id="lis3dh与lis2dh12"><a class="markdownIt-Anchor" href="#lis3dh与lis2dh12"></a> LIS3DH与LIS2DH12</h2><p><a href="https://oldgerman.github.io/d5ffc54/">ODGIRON</a>，是我最近在开发的基于ironOS的快充T12电烙铁，由于ODGIRON双面布线，加速度盘下要走两个过孔才能布通，因此选用了封装更大的LIS3DH，封装为LGA12(3.0x3.0x1.0 mm)，其焊接更友好，还更便宜，需要用到的地方与LIS2DH12几乎完全一致，要什么自行车</p><table><thead><tr><th></th><th>LIS3DH</th><th>LIS2DH12</th></tr></thead><tbody><tr><td>尺寸</td><td><img src="/74a960e2/LIS3DH-LC.png" alt="LIS3DH-LC"></td><td><img src="/74a960e2/LIS2DH12-LC.png" alt="LIS2DH12-LC"></td></tr><tr><td></td><td><img src="/74a960e2/LIS3DH-LC-BK.png" alt="LIS3DH-LC-BK"></td><td><img src="/74a960e2/LIS2DH12-LC-BK.png" alt="LIS2DH12-LC-BK"></td></tr><tr><td>供电电压</td><td>1.71 V to 3.6 V</td><td>1.71 V to 3.6 V</td></tr><tr><td>50Hz正常工作电流(uA)</td><td>11</td><td>11</td></tr><tr><td>量程（FS）</td><td>±2g/±4g/±8g/±16g</td><td>±2g/±4g/±8g/±16g</td></tr><tr><td>量程特性</td><td><span style="color:rgb(255, 128, 255);">dynamically</span> selectable full scale</td><td>selectable full scales</td></tr><tr><td>接口</td><td>I2C/SPI</td><td>I2C/SPI</td></tr><tr><td>可编程中断GPIO</td><td>2</td><td>2</td></tr><tr><td>中断GPIO功能</td><td>free-fall and motion detection</td><td>free-fall and motion detection</td></tr><tr><td>硬件方向检测</td><td>6D/4D orientation detection</td><td>6D/4D orientation detection</td></tr><tr><td>数据位数(bit)</td><td>Low-power mode (8-bit data output)<br>Normal mode (10-bit data output)<br>High-resolution mode (12-bit data output)</td><td>Low-power mode (8-bit data output)<br>Normal mode (10-bit data output)<br>High-resolution mode (12-bit data output)</td></tr><tr><td>输出数据位数</td><td>12bit/10bit/8bit</td><td>12bit/10bit/8bit</td></tr><tr><td>片上温度传感器</td><td>Yes</td><td>Yes</td></tr><tr><td>自检</td><td>Yes</td><td>Yes</td></tr><tr><td><span style="color:rgb(255, 128, 255);">FIFO</span></td><td>16-bit, 32-level</td><td>10-bit, 32-level</td></tr><tr><td>ADC</td><td>多一路A/D converter<br>引出3路ADC GPIO</td><td>仅一路A/D converter</td></tr><tr><td><span style="color:rgb(255, 128, 255);">抗震性(g)</span></td><td>10000</td><td>N/A</td></tr><tr><td>Datasheet一样的参数</td><td>Mechanical characteristics<br>Temperature sensor characteristics<br>Electrical characteristics<br>Communication interface characteristics<br>Absolute maximum ratings<br>Terminology and functionality</td><td></td></tr><tr><td><span style="color:rgb(255, 128, 255);">最低价格</span></td><td>1.3包邮</td><td>2.3包邮</td></tr></tbody></table><h2 id="ironos-加速度计读数不正常问题解决"><a class="markdownIt-Anchor" href="#ironos-加速度计读数不正常问题解决"></a> ironOS 加速度计读数不正常问题解决</h2><p>ironOS跑了FreeRTOS，加速度计为MOVTask任务，与oled的GUITask共用 I2C1 总线，由二值信号量做 I2C1 互斥，具体实现请见ironOS源码</p><p>ironOS的LISDH12的加速度计驱动代码有BUG，它配置了一大堆非必要的加速度计寄存器，而实际上任务仅用到读取3轴数据和6D检测，我仔细跟了它原本的寄存器配置，得出LISDH12工作状态如下：</p><ul><li>输出数据：12bit，即 [-2048, +2048]</li><li>加速度量程：±2g</li><li>ODR：1Hz，实际上注释是想配置成25Hz，但它实际的配置数据位写错了</li><li>实际加速度输出频率：当ODR=1，ODR/9 = 0.111次/秒，运动检测很迟钝</li><li>期望的加速度输出频率：当ODR=25，ODR/9 = 2.777次/秒，运动检测较迟钝</li><li>ODGIRON设置的加速度输出频率：ODR为100Hz，ODR/9=11.111次/秒，与MOVTask调度频率10Hz几乎同步，运动检测很灵敏</li></ul><p>其运动检测的源代码：ironOS运动检测是由MOVTask里跑了一个阈值比较程序，它实现了运动检测，既然软件进行了运动检测，那为啥还要使能6D阈值检测的事件中断？</p><p>ironOS读取加速度计的代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief  读取三轴数据</span></span><br><span class="line"><span class="comment"> * @param  传x、y、z数据的引用</span></span><br><span class="line"><span class="comment"> * @retval none</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LIS2DH12::getAxisReadings</span><span class="params">(<span class="keyword">int16_t</span> &amp;x, <span class="keyword">int16_t</span> &amp;y, <span class="keyword">int16_t</span> &amp;z)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">array</span>&lt;<span class="keyword">int16_t</span>, 3&gt; sensorData;<span class="comment">//三组16bit用于存储三个轴12bit数据</span></span><br><span class="line"></span><br><span class="line">  FRToSI2C::Mem_Read(</span><br><span class="line">truetrue        LIS2DH_I2C_ADDRESS,</span><br><span class="line">truetrue        <span class="number">0xA8</span>,<span class="comment">//注意，0xA8是OUT_X_L的0x28 与 连续读取的0x80 两者按位与运算得到的</span></span><br><span class="line">      <span class="comment">//这里它连续读取 OUT_X_L 到 OUT_Z_H 共六个相邻的只读寄存器</span></span><br><span class="line">truetruetruetruetrue  <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">uint8_t</span> *&gt;(sensorData.<span class="built_in">begin</span>()), <span class="comment">// 将定位到容器首元素iterator强制转换为unit8_t*,炫技操作？</span></span><br><span class="line">truetruetruetruetrue  sensorData.<span class="built_in">size</span>() * <span class="keyword">sizeof</span>(<span class="keyword">int16_t</span>)</span><br><span class="line">truetruetruetruetrue);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//依次赋值</span></span><br><span class="line">  x = sensorData[<span class="number">0</span>];</span><br><span class="line">  y = sensorData[<span class="number">1</span>];</span><br><span class="line">  z = sensorData[<span class="number">2</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于12bit数据是左对齐的，可见，在 //依次赋值 的地方，未作 &gt;&gt; 4 运算，直接输出的xyz结果范围不是[-2048, +2048]，而是有时候数据能到 ±10000以外，离谱</p><p>我补上 &gt;&gt; 4运算，使劲晃动时输出数据也不正常，很难到 ±2000附近：</p><p><img src="/74a960e2/ironOS%E7%9A%84%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1-%E5%89%A7%E7%83%88%E6%91%87%E6%99%83%EF%BC%8C%E5%B0%86%E8%AF%BB%E6%95%B0%E5%B7%A6%E7%A7%BB%E4%BD%8D4bit%E8%BF%90%E7%AE%97%E7%BB%93%E6%9E%9C.png" alt="ironOS的加速度计-剧烈摇晃，将读数左移位4bit运算结果"></p><p>这与arduino的Sparkfun 的LIS3DH例程非常不同，arduino的例程跑起来，若水平放置加速度计，z方向会在-1024附近，即能显示地球的重力加速度1g，奇怪的是ironOS的跑起来没有1g的加速度，读出数据如下：</p><p><img src="/74a960e2/3%E8%BD%B4%E6%95%B0%E6%8D%AE%E9%80%9A%E8%BF%87%E9%AB%98%E9%80%9A%E6%BB%A4%E6%B3%A2%E5%99%A8.png" alt="20210220005151"></p><p>这是为什么呢？排查出错原因是仅配置了LIS_CTRL_REG2的FDS位，使能了High-pass filter ，这之后输出的三轴数据，是经高通滤波后的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;LIS_CTRL_REG2, <span class="number">0b00001000</span>, <span class="number">0</span>&#125;, <span class="comment">//default：00000000 // Highpass filter off          //  FDS[3:3] = 1：</span></span><br><span class="line"><span class="comment">//筛选数据选择。默认值：0</span></span><br><span class="line"><span class="comment">// 0：绕过内部滤波器</span></span><br><span class="line"><span class="comment">// 1：来自内部滤波器的数据发送到输出寄存器和FIFO</span></span><br></pre></td></tr></table></figure><p>我将该配置取消掉，之后水平静置读数正常，换算z方向的加速度是正常的1g左右：</p><p><img src="/74a960e2/ironOS%E7%9A%84%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1-%E6%AD%A3%E5%B8%B8%E9%9D%99%E7%BD%AE.png" alt></p><p>实际上，后面运动检测也可以读经过高通滤波器的值，ironOS没有将经过高通滤波器的值 做&lt;&lt;4运算，即实际传入运动检测程序的值大了2^4 = 16倍，这就能解释为啥我默认打印xyz读到的数据剧烈晃动时可以到±10000，能触发运动检测，但&lt;&lt;4后摇晃时读数稳如泰山，摇晃得很厉害也无法触发运动检测</p><p>所以，是否按ironOS的原始代码启用高通滤波器看你的喜好，个人感觉数据不过滤波器运动检测舒服一些</p><p>注意：数据经过滤波器对6D阈值无影响，6D阈值是取原始读数的</p><p>LIS3DH的滤波器还有很多高级特性供配置，可以作用于中断、敲击检测，更多请参考手册的 8.9节 CTRL_REG2 (21h)</p><h2 id="根据加速读计旋转oled"><a class="markdownIt-Anchor" href="#根据加速读计旋转oled"></a> 根据加速读计旋转oled</h2><p>LIS3DH带有6D阈值事件中断功能。</p><h3 id="加速度计坐标轴"><a class="markdownIt-Anchor" href="#加速度计坐标轴"></a> 加速度计坐标轴</h3><p>注意TS100的LIS2DH12和我ODGIRON的LIS3DH的轴向坐标不同：</p><table><thead><tr><th></th><th>LIS3DH</th><th>LIS2DH12</th></tr></thead><tbody><tr><td>轴向</td><td><img src="/74a960e2/LIS3DH%E8%BD%B4%E5%90%91.png" alt="LIS3DH轴向"></td><td><img src="/74a960e2/LIS2DH12%E8%BD%B4%E5%90%91.png" alt="LIS2DH12轴向"></td></tr></tbody></table><p>我对原本TS100的 LIS3DH::getOrientation() 函数进行修改，使之符合LIS3DH的坐标轴，明细请见源代码。</p><h3 id="右手与左手的旋转与加速度计坐标关系"><a class="markdownIt-Anchor" href="#右手与左手的旋转与加速度计坐标关系"></a> 右手与左手的旋转与加速度计坐标关系</h3><p>我根据加速度计相对烙铁的安装的位置，画了ODGIRON和TS100的加速读坐标两张纸贴在烙铁上，下文都按照左边ODGIRON贴纸上的坐标</p><table><thead><tr><th>右手模式水平静置</th><th>右手模式旋转 +90°</th></tr></thead><tbody><tr><td><img src="/74a960e2/%E5%8F%B3%E6%89%8B%E6%A8%A1%E5%BC%8F%E6%97%8B%E8%BD%AC(1).png" alt="右手模式旋转(1)"></td><td><img src="/74a960e2/%E5%8F%B3%E6%89%8B%E6%A8%A1%E5%BC%8F%E6%97%8B%E8%BD%AC(2).png" alt="右手模式旋转(2)"></td></tr></tbody></table><table><thead><tr><th>左手模式水平静置</th><th>左手模式旋转 -90°</th></tr></thead><tbody><tr><td><img src="/74a960e2/%E5%B7%A6%E6%89%8B%E6%A8%A1%E5%BC%8F%E6%97%8B%E8%BD%AC(2).png" alt="左手模式旋转(2)"></td><td><img src="/74a960e2/%E5%B7%A6%E6%89%8B%E6%A8%A1%E5%BC%8F%E6%97%8B%E8%BD%AC(1).png" alt="左手模式旋转(1)"></td></tr></tbody></table><h3 id="int2_ths-阈值寄存器"><a class="markdownIt-Anchor" href="#int2_ths-阈值寄存器"></a> INT2_THS 阈值寄存器</h3><p>THS 即 threshold 阈值</p><p>ironOS 的 <code>INT2_THS</code> 寄存器 设置值为0x28，根据datasheet：</p><ul><li><p>由 Table 68. <code>INT2_THS</code> description：LIS3DH工作在12bit ±2g，则 THS[6:0] 的 1LSB = 16mg，计算触发阈值：先将0x28转换为10进制：0x28 = 40DEC ,  再乘以16msg 得到触发阈值为±640mg，</p></li><li><p>由 Table 4. Mechanical characteristics的Sensitivity部分：LIS3DH工作在12bit ±2g时 ，加速度输出数据的1LSB = 1mg，则读数为±640触发临界点</p></li></ul><p>测试，0x28的640mg实际旋转触发时以z轴值主导，z的阈值为±640附近，而x阈值为±830附近：</p><table><thead><tr><th>左手阈值触发临界点附近：</th><th>右手阈值触发临界点附近：</th></tr></thead><tbody><tr><td><img src="/74a960e2/0x28%E5%B7%A6%E6%89%8B%E9%98%88%E5%80%BC%E8%A7%A6%E5%8F%91%E4%B8%B4%E7%95%8C%E7%82%B9.png" alt="0x28左手阈值触发临界点"></td><td><img src="/74a960e2/0x28%E5%8F%B3%E6%89%8B%E9%98%88%E5%80%BC%E8%A7%A6%E5%8F%91%E4%B8%B4%E7%95%8C%E7%82%B9.png.png" alt="0x28右手阈值触发临界点.png"></td></tr></tbody></table><p>将0x28改为0x20，0x20为512mg，实际旋转触发时以z轴值主导，z的阈值为±640附近，x阈值为±910附近：</p><table><thead><tr><th>左手阈值触发临界点附近：</th><th>右手阈值触发临界点附近：</th></tr></thead><tbody><tr><td><img src="/74a960e2/0x20%E5%B7%A6%E6%89%8B%E9%98%88%E5%80%BC%E8%A7%A6%E5%8F%91%E4%B8%B4%E7%95%8C%E7%82%B9.png" alt="20210219234731"></td><td><img src="/74a960e2/0x20%E5%8F%B3%E6%89%8B%E9%98%88%E5%80%BC%E8%A7%A6%E5%8F%91%E4%B8%B4%E7%95%8C%E7%82%B9.png.png" alt="20210219234715"></td></tr></tbody></table><p>改为50，50为800mg，实际旋转触发时以x轴值为主导，z的阈值为±640附近，x阈值为±800附近：</p><table><thead><tr><th>左手阈值触发临界点附近：</th><th>右手阈值触发临界点附近：</th></tr></thead><tbody><tr><td><img src="/74a960e2/50DEC%E5%B7%A6%E6%89%8B%E9%98%88%E5%80%BC%E8%A7%A6%E5%8F%91%E4%B8%B4%E7%95%8C%E7%82%B9.png.png" alt="20210220000410"></td><td><img src="/74a960e2/50DEC%E5%8F%B3%E6%89%8B%E9%98%88%E5%80%BC%E8%A7%A6%E5%8F%91%E4%B8%B4%E7%95%8C%E7%82%B9.png.png" alt="20210220000425"></td></tr></tbody></table><p>所以这很奇怪，<code>INT2_THS</code>的值可能由z轴也可能为x轴的阈值事件触发，但最终手性的判断是OK的</p><h3 id="那么旋转oled阈值事件到底是以x还是z轴触发判断"><a class="markdownIt-Anchor" href="#那么旋转oled阈值事件到底是以x还是z轴触发判断"></a> 那么旋转oled阈值事件到底是以x还是z轴触发判断？</h3><p>设xoy面水平，即烙铁屏幕水平，当烙铁沿y轴旋转时，z轴加速度读数 与 旋转角度 存在函数关系，推导一下</p><p>规定屏幕水平向上时，沿y轴的旋转角度为0，则烙铁沿y轴旋转时，垂直于屏幕的法线与旋转角度为0时的法线存在夹角θ，令该法线通过原点，则该法线的参数方程为：<span></span></p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: No such environment: align at position 15: \left\{\begin{̲a̲l̲i̲g̲n̲}̲x&amp;=tcos(\frac{…">\left\{\begin{align}x&amp;=tcos(\frac{\pi}{2}-\theta)\\y&amp;=tsin(\frac{\pi}{2}-\theta)\\\end{align}\right.\space\space\space\space,\space\space\theta∈[-\frac{\pi}{2},\frac{\pi}{2}]</p>如图所示，建立与x轴加速度读数有关的圆，直径是1g时，读数为1024，则半径为512，那么该的圆的方程为：<span>$$x^2+(y-512)^2=512^2$$</span>该圆上任一点 (x,y) 到原点 (0,0) 的距离为：<span>$$d=\sqrt{x^2+y^2}$$</span>联立以上公式：<span>$$\left\{\begin{align}x&=tcos(\frac{\pi}{2}-\theta)\\y&=tsin(\frac{\pi}{2}-\theta)\\x^2+(y-512)^2&=512^2\\d&=\sqrt{x^2+y^2}\\\end{align}\right.\space\space\space\space,\space\space\theta∈[-\frac{\pi}{2},\frac{\pi}{2}]$$</span>整理后，只有一个sin：<span>$$d=1024\cdot sin(\frac{\pi}{2}-\theta) \space\space\space\space,\space\space\theta∈[-\frac{\pi}{2},\frac{\pi}{2}]$$</span> 由于z轴于屏幕显示方向刚好相反，所以<span>$$z轴加速度读数=-1024\cdot sin(\frac{\pi}{2}-\theta) \space\space\space\space,\space\space\theta∈[-\frac{\pi}{2},\frac{\pi}{2}]$$</span>类似地，可以写出<span>$$x轴加速度读数=1024\cdot sin(\theta) \space\space\space\space,\space\space\theta∈[-\frac{\pi}{2},\frac{\pi}{2}]$$</span><p>那么把旋转角度θ带入x轴加速度读数函数求得的值，再由 THS[6:0] 的 1LSB = 16mg 计算触发阈值，设置为<code>INT2_THS</code>的值，就可指定旋转角度触发中断了</p><p><img src="/74a960e2/sw.png" alt="sw"></p><p>可以画出x轴和z轴读数随沿y轴旋转角度（-90度到90度）的图像：</p><p><img src="/74a960e2/GeoGebra_x%E8%BD%B4%E5%92%8Cz%E8%BD%B4%E8%AF%BB%E6%95%B0%E9%9A%8F%E7%BB%95y%E8%BD%B4%E8%A7%92%E5%BA%A6%E7%9A%84%E5%85%B3%E7%B3%BB.png" alt></p><p>发现x与z轴的事件 受<code>INT2_THS</code>的值范围 会出现先后触发的情况，在<code>x=-π/4</code>或<code>x=π/4</code>的附近，即旋转<code>-45</code>度和<code>45</code>度附近，在<code>-45</code>度的左边时，z轴比x轴先触发，在<code>-45</code>度右边时，则相反，但实际x轴和z轴事件的先后顺序却相反，应该是加速度计片内电路判断成反序了</p><p>注意：使能了IN2中断锁存：LIR_INT2[7:7] = 1：在INT2_SRC（35h）寄存器上锁存中断请求，对此没有影响</p><p>为了最佳旋转触发，我<code>45</code>度作为临界点：</p><span>$$1024\cdot sin(\pi/2)≈724.08$$</span><p>然后再除以寄存器的分辨率16mg/LSB：</p><span>$$724.08/16≈45$$</span><p>那么将<code>INT2_THS</code>设置为45即可</p><p>剩下oled驱动、旋转oled的命令不是重点，略</p><h3 id="int2_duration寄存器有没有用"><a class="markdownIt-Anchor" href="#int2_duration寄存器有没有用"></a> INT2_DURATION寄存器有没有用？</h3><p>会增加一个消抖时间，可开可不开，实际效果无明显变化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*开了没开一样，没卵用？*/</span>&#123;LIS_INT2_DURATION, <span class="number">64</span>, <span class="number">0</span>&#125;,    <span class="comment">//default：00000000 // 64 = 0b01000000// 超出阈值持续多少时间才触发INT2的中断（相当于按键延时消抖）</span></span><br></pre></td></tr></table></figure><h2 id="运动检测"><a class="markdownIt-Anchor" href="#运动检测"></a> 运动检测</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">currentPointer = (currentPointer + <span class="number">1</span>) % MOVFilter <span class="comment">// 每8次MOVTask调度，currentPointer归0</span></span><br></pre></td></tr></table></figure><p>串口打印currentPointer随MOVTAsk调度次数变化：ptr是currentPointer， time是调度次数</p><p><img src="/74a960e2/currentPointer%E9%9A%8FMOVTAsk%E8%B0%83%E5%BA%A6%E6%AC%A1%E6%95%B0%E5%8F%98%E5%8C%96.png" alt="20210220230512"></p><p>读到的轴数据在滑动滤波器数组里的变化情况：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第1次：</span></span><br><span class="line">currentPointer = <span class="number">0</span></span><br><span class="line">datax[] = &#123;<span class="number">111</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">111</span>&#125;<span class="comment">//首次会将每一个元素都赋值为第一次的x轴数据，之后不会</span></span><br><span class="line"><span class="comment">//         ^    ^     ^    ^    ^    ^    ^    ^</span></span><br><span class="line"><span class="comment">//     第1次 第1次 第1次 第1次 第1次 第1次 第1次 第1次</span></span><br><span class="line"><span class="comment">//第2次：</span></span><br><span class="line">currentPointer = <span class="number">1</span></span><br><span class="line">datax[] = &#123;<span class="number">111</span>, <span class="number">222</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">111</span>&#125;</span><br><span class="line"><span class="comment">//         ^    ^     ^    ^    ^    ^    ^    ^</span></span><br><span class="line"><span class="comment">//     第1次 第2次 第1次 第1次 第1次 第1次 第1次 第1次</span></span><br><span class="line">......</span><br><span class="line"><span class="comment">//第7次：</span></span><br><span class="line">currentPointer = <span class="number">7</span></span><br><span class="line">datax[] = &#123;<span class="number">111</span>, <span class="number">222</span>, <span class="number">333</span>, <span class="number">444</span>, <span class="number">555</span>, <span class="number">666</span>, <span class="number">777</span>, <span class="number">111</span>&#125;<span class="comment">//xxx表示x轴的随机取值</span></span><br><span class="line"><span class="comment">//         ^    ^     ^    ^    ^    ^    ^    ^</span></span><br><span class="line"><span class="comment">//     第1次 第2次 第3次 第4次 第5次 第6次 第7次 第1次</span></span><br><span class="line"><span class="comment">//第8次：</span></span><br><span class="line">currentPointer = <span class="number">0</span><span class="comment">//整除归零，重新计数</span></span><br><span class="line">datax[] = &#123;<span class="number">111</span>, <span class="number">222</span>, <span class="number">333</span>, <span class="number">444</span>, <span class="number">555</span>, <span class="number">666</span>, <span class="number">777</span>, <span class="number">888</span>&#125;</span><br><span class="line"><span class="comment">//         ^    ^     ^    ^    ^    ^    ^    ^</span></span><br><span class="line"><span class="comment">//     第1次 第2次 第3次 第4次 第5次 第6次 第7次 第8次</span></span><br><span class="line"><span class="comment">//第9次：</span></span><br><span class="line">currentPointer = <span class="number">1</span></span><br><span class="line">datax[] = &#123;<span class="number">999</span>, <span class="number">222</span>, <span class="number">333</span>, <span class="number">444</span>, <span class="number">555</span>, <span class="number">666</span>, <span class="number">777</span>, <span class="number">888</span>&#125;</span><br><span class="line"><span class="comment">//         ^    ^     ^    ^    ^    ^    ^    ^</span></span><br><span class="line"><span class="comment">//     第9次 第2次 第3次 第4次 第5次 第6次 第7次 第8次</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>然后每次求一次8个元素的平均值，即变量avgx，使用<code>abs(avgx - 本次读到的x数据)</code>，得到x轴变化量的绝对值，以同样的方式计算y和z轴，求和为三轴的总变化值，即变量error，将error与threshold比较，若大于，则更新运动检测的时间戳，即变量lastMovementTime，详细见代码，以下节选部分：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 求三轴变化量绝对值的总和 //Sum the deltas//abs()求传入数据的绝对值</span></span><br><span class="line"><span class="keyword">int32_t</span> error = (<span class="built_in">abs</span>(avgx - axisData.x) + <span class="built_in">abs</span>(avgy - axisData.y) + <span class="built_in">abs</span>(avgz - axisData.z));</span><br><span class="line"><span class="comment">// So now we have averages, we want to look if these are different by more</span></span><br><span class="line"><span class="comment">// than the threshold</span></span><br><span class="line"><span class="comment">// If movement has occurred then we update the tick timer</span></span><br><span class="line"><span class="comment">// 如果发生了移动，那么我们更新滴答计时器</span></span><br><span class="line"><span class="keyword">if</span> (error &gt; threshold) &#123;</span><br><span class="line">    lastMovementTime = xTaskGetTickCount();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="综合测试"><a class="markdownIt-Anchor" href="#综合测试"></a> 综合测试</h2><p>一边读3轴数据，一边6D旋转阈值检测，一边运动检测的瞬间，OK：</p><p><img src="/74a960e2/%E4%B8%80%E8%BE%B96D%E6%97%8B%E8%BD%AC%E9%98%88%E5%80%BC%E6%A3%80%E6%B5%8B%E4%B8%80%E8%BE%B9%E8%BF%90%E5%8A%A8%E6%A3%80%E6%B5%8B%E7%9A%84%E7%9E%AC%E9%97%B4.png" alt="20210220011749"></p><h2 id="相关链接"><a class="markdownIt-Anchor" href="#相关链接"></a> 相关链接</h2><p><a href="https://oldgerman.github.io/d5ffc54/">ODGIRON_开源PD电烙铁</a></p><p><a href="https://github.com/Ralim/IronOS" target="_blank" rel="noopener">IronOS开源烙铁固件github</a></p><p><a href="https://www.sohu.com/a/109038400_116463" target="_blank" rel="noopener">美与质量共存——TS100袖珍迷你烙铁评测</a></p><p><a href="https://www.analog.com/cn/products/landing-pages/001/accelerometer-specifications-definitions.html#" target="_blank" rel="noopener">AD：加速度计技术规格——快速定义</a></p><p><a href="https://www.st.com/resource/en/datasheet/lis3dh.pdf" target="_blank" rel="noopener">LIS3DH Datashee- STMicroelectronics</a></p><p><a href="https://www.st.com/resource/en/datasheet/lis2dh12.pdf" target="_blank" rel="noopener">LIS2DH12 Datasheet - STMicroelectronics</a></p>]]></content>
      
      
      <categories>
          
          <category> ODGIRON </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加速度计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32常见英文单词、术语、缩写等</title>
      <link href="/c57b1704/"/>
      <url>/c57b1704/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>其实大家学啥外设术语太多直接找对应外设的UMxxx（ST的User manual系列的PDF）就有归纳整理的，这些术语在ST很多手册的Acronyms and definitions部分都右有的，</p><p>例如：</p><p><a href="https://www.st.com/resource/en/user_manual/dm00105879-description-of-stm32f4-hal-and-ll-drivers-stmicroelectronics.pdf" target="_blank" rel="noopener">UM1725——Description of STM32F4 HAL and low-layer drivers</a> 的Table 1</p><a id="more"></a><p><a href="https://www.st.com/resource/en/user_manual/dm00108129-stm32cube-usb-device-library-stmicroelectronics.pdf" target="_blank" rel="noopener">UM1734——STM32Cube™ USB device library</a> 的Table 2</p><h2 id="a"><a class="markdownIt-Anchor" href="#a"></a> A</h2><p>AF——Alternate function   复用功能 (port multiplexing and remapping 端口复用和重映射)</p><p>AHB 先进高性能总线</p><p>ALU——Arithmetic Logical Unit 算术逻辑单元（CPU负责几乎所有的计算任务的核心）</p><p>API——Application Programming Interface 应用编程接口</p><p>ARG——argument 参数</p><p>ARR——auto-reload register 自动装载(寄存器)</p><p>ARPE——auto-reload preload enable 自动预载(寄存器)</p><p>asynchronous 异步的</p><h2 id="b"><a class="markdownIt-Anchor" href="#b"></a> B</h2><p>BIN——binary 二进制</p><p>brief 简介</p><p>BSP——board support package 板级支持包】</p><p>Byte 字节 8位长的数据或指令</p><h2 id="c"><a class="markdownIt-Anchor" href="#c"></a> C</h2><p>Calibration 校准</p><p>CC——Capture/Compare 捕获/比较</p><p>CDC——communication device class 通信设备类</p><p>CMSIS——Cortex MicroController Software Interface Standard Cortex 微控制器软件接口标准：独立于供应商的硬件抽象层，适用于基于 Arm Cortex 处理器的微控制器</p><p>CK_INT——clock internal 内部时钟</p><p>CNT——counter 计数器</p><p>Coefficient——系数</p><p>contants 常量</p><p>context 上下文环境</p><p>coupled 耦合的</p><p>critical——临界的</p><h2 id="d"><a class="markdownIt-Anchor" href="#d"></a> D</h2><p>D-Code 这是连接Cortex-M3核心的D-Code总线（常数和调试访问）与闪存数据存储器接口的总线</p><p>DEC——decimal 十进制</p><p>DFU——Device Firmware Upgrade 有USB接口的STM32型号从硬件或软件上支持</p><p>DISC——disconnect</p><p>division 分频因子</p><p>domain  n. 域，范围，定义域</p><p>downcounter n. 降值计数器</p><p>DMIPS——Dhrystone Million Instructions executed Per Second Dhrystone软件测算力的MIPS单位</p><p>duty cycle 占空比</p><p>Dhrystone 最常见的整数运算性能测试程序</p><h2 id="e"><a class="markdownIt-Anchor" href="#e"></a> E</h2><p>elapsed 过去</p><p>EOC——end of convert 转换结束</p><p>ETR——External 外部 (信号)</p><h2 id="f"><a class="markdownIt-Anchor" href="#f"></a> F</h2><p>FPEC——FLASH Program/Erase controller 闪存编程/擦除控制器</p><p>FS——Full Speed 全速（12 Mbps）</p><p>function 1) 功能；2) 函数</p><h2 id="g"><a class="markdownIt-Anchor" href="#g"></a> G</h2><p>generation 产生</p><h2 id="h"><a class="markdownIt-Anchor" href="#h"></a> H</h2><p>HAL——Hardware Abstraction Layer 硬件抽象层</p><p>Half Word 半字 16位长的数据或指令</p><p>handler n. 句柄</p><p>HEX——hexdadecimal 十六进制</p><p>HID——human interface device 人机界面设备</p><h2 id="i"><a class="markdownIt-Anchor" href="#i"></a> I</h2><p>IABR——Interrupt Active Bit Registers             中断激活标志位寄存器组</p><p>IAP——In-Application Programming 在程序中编程</p><p>I-Code：这是连接Cortex-M3核心的指令总线与闪存程序存储器接口的总线，指令预取是 在这个总线上实现的</p><p>ICP——In-Circuit Programming 在线编程</p><p>ICPR——Interrupt Clear-Pending Registers     中断解挂控制寄存器组</p><p>ISPR——Interrupt Set-Pending Registers        中断挂起控制寄存器组</p><p>ICER——Interrupt Clear-Enable Registers       中断除能寄存器组</p><p>idle 空闲的</p><p>LL库——low-layer drivers</p><p>instance 寄存器指针</p><p>integrity 完整（测试完整性）</p><p>Initialise  初始化</p><p>IRQ——Interrupt Request 中断请求</p><p>IRQn——Interrupt Request number 中断请求号</p><p>ISER——Interrupt Set-Enable Registers 中断使能寄存器组</p><p>iterator 迭代器</p><p>ITM——仪表跟踪单元</p><p>IPR——Interrupt Priority Registers  中断优先级控制的寄存器组</p><p>IWDG——independent watchdog 独立看门狗</p><p>Instance n. 实例; 例子; 事例; v.举例</p><h2 id="j"><a class="markdownIt-Anchor" href="#j"></a> J</h2><p>JTAG-DP JTAG 调试接口 提供基于JTAG(Joint Test Action Group 联合测试行动小组)协议的5线标准接口</p><h2 id="k"><a class="markdownIt-Anchor" href="#k"></a> K</h2><h2 id="l"><a class="markdownIt-Anchor" href="#l"></a> L</h2><p>latch 锁存</p><p>LIR——latch interrupt request 锁存中断请求</p><p>LSB——Last（Least） Significant Bit，最低有效位</p><h2 id="m"><a class="markdownIt-Anchor" href="#m"></a> M</h2><p>MIPS——Million Instructions executed Per Second，每秒执行百万条指令，用来计算同一秒内系统的处理能力，即每秒执行了多少百万条指令</p><p>MFLOPS——Million Floating-point Operations per Second，主要用于测浮点计算能力。</p><p>MPU——1）Microprocessor Unit 微处理器；2）Micro Processor Unit 内存保护单元</p><p>MSB——Most Significant Bit， 最高有效位</p><p>MSC——mass storage device class 大容量存储类</p><p>MSP——1）MCU Specific Package   MCU 特征包、MCU 实例化包；——2）MCU Support package   MCU支持包</p><p>MUX——multiplexer (multiplexor)多路复用器，也称数据选择器（data selector）</p><h2 id="n"><a class="markdownIt-Anchor" href="#n"></a> N</h2><p>NVIC——Nested Vectored Interrupt Controller   嵌套向量中断控制器</p><h2 id="o"><a class="markdownIt-Anchor" href="#o"></a> O</h2><p>OBL：选择字节加载单元</p><p>occure 发生</p><p>ODR——Output data rate 数据输出频率，出处：LIS3DH手册 CTRL_REG1 (20h)的ODR[3:0]，单位Hz</p><p>OTG——On-The-Go：OTG外设可运行时切换 HOST/DEVICE角色</p><p>overload 重载</p><h2 id="p"><a class="markdownIt-Anchor" href="#p"></a> P</h2><p>Parity 奇偶检验（参数有 None、Odd、Even）</p><p>parameter(s) n. 参数</p><p>period 1.(定时器的)自动装载值ARR（自动重装载寄存器（TIMx_ARR））  <s>2.周期，(物理学符号是 T)</s></p><p>peripheral n. 外设 外围设备)</p><p>PID——USB 产品标识：A <strong>USB</strong> device that is plugged in identifies itself by its VID/<strong>PID</strong> combination. A VID is a 16-bit vendor number (Vendor ID). A <strong>PID</strong> is a 16-bit product number (<strong>Product ID</strong>). The PC uses the VID/<strong>PID</strong> combination to find the drivers (if any) that are to be used for the <strong>USB</strong> device.</p><p>platform 平台</p><p>polarity 极性</p><p>POR——Power-on reset</p><p>PRI——priority 优先级</p><p>preemption priority 抢占优先级</p><p>prototype 原型 （functions prototypes 函数原型）</p><p>PSC——prescaler n. 预分频器</p><h2 id="q"><a class="markdownIt-Anchor" href="#q"></a> Q</h2><p>queue 队列</p><h2 id="r"><a class="markdownIt-Anchor" href="#r"></a> R</h2><p>RCC——Reset and clock control 时钟配置</p><p>repetition 重复（overload是 重载，不要混了）</p><p>RES——resolution 分辨率</p><p>ret——retval——return value 返回值</p><p>restrict 限制</p><p>resume 恢复</p><h2 id="s"><a class="markdownIt-Anchor" href="#s"></a> S</h2><p>sample——样本</p><p>SAK——slave acknowledge 从机应答</p><p>scheduler 调度器</p><p>SCSI——small computer system inerface 小型计算机系统接口</p><p>SMBus——STM32 I2C Slave 模式（从机模式）</p><p>SWD——Serial Wire Debug 串行线调试</p><p>SWO——Serial Wire Output 串行线输出</p><p>SWV——Serial Wire Viewer 串行线查看器</p><p>SOF——Start of Frame 帧起始：Every millisecond (12000 full-bandwidth bit times), the <strong>USB</strong> host transmits a special <strong>SOF</strong> (<strong>start of frame</strong>) token, containing an 11-bit incrementing frame number in place of a device address. This is used to synchronize isochronous and interrupt data transfers.</p><p>state . 状态</p><p>status n. 状态</p><p>stream 流（数据流、流的缓冲区）</p><p>SUB——sub-address 子地址</p><p>suspend 挂起</p><p>SWD-DP SWD调试接口 提供基于SWD(Serial Wire Debug 串行线调试)协议的2 线标准接口</p><p>synchronous 同步的</p><h2 id="t"><a class="markdownIt-Anchor" href="#t"></a> T</h2><p>task 任务</p><p>TCB——task control block 任务控制块</p><p>THS——threshold 阈值</p><p>Trigger 触发</p><h2 id="u"><a class="markdownIt-Anchor" href="#u"></a> U</h2><p>UEV——update event 更新事件</p><p>UDIS——update disable 禁止产生更新事件 (UEV)</p><p>USB——Universal Serial Bus 通用串行总线</p><h2 id="v"><a class="markdownIt-Anchor" href="#v"></a> V</h2><p>VCP——visual com port 虚拟串口</p><p>VID——USB 厂商标识：A <strong>USB</strong> device that is plugged in identifies itself by its VID/<strong>PID</strong> combination. A VID is a 16-bit vendor number (Vendor ID). A <strong>PID</strong> is a 16-bit product number (<strong>Product ID</strong>). The PC uses the VID/<strong>PID</strong> combination to find the drivers (if any) that are to be used for the <strong>USB</strong> device.</p><h2 id="w"><a class="markdownIt-Anchor" href="#w"></a> W</h2><p>Whetstone 最常见的浮点运算性能测试程序</p><p>Word 字 32位长的数据或指令</p><p>WWDG——window watchdog 窗口看门狗</p><h2 id="x"><a class="markdownIt-Anchor" href="#x"></a> X</h2><h2 id="y"><a class="markdownIt-Anchor" href="#y"></a> Y</h2><h2 id="z"><a class="markdownIt-Anchor" href="#z"></a> Z</h2>]]></content>
      
      
      <categories>
          
          <category> STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冰沙主板10x10设计&amp;制作笔记</title>
      <link href="/6722c02f/"/>
      <url>/6722c02f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h2><ul><li><p><a href="#%E5%89%8D%E8%A8%80">前言</a></p></li><li><p><a href="#%E5%86%B0%E6%B2%9910x10%E4%BB%8B%E7%BB%8D">冰沙10x10介绍</a></p></li><li><p><a href="#%E7%84%8A%E6%8E%A5%E6%8C%87%E5%8D%97">焊接指南</a></p></li><li><p><a href="#%E6%B5%8B%E8%AF%95%E5%92%8C%E4%BD%BF%E7%94%A8">测试和使用</a></p></li><li><p><a href="#%E9%99%84">附</a></p></li></ul><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>本文档以<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener">CC Attribution-Share Alike 4.0 International</a>发行</p><details> <summary>展开查看</summary> <pre><code><br>创建时间： 2020/08/25 17:40:56 UTC+8由过气德国佬（github：oldgerman）于 2020/12/12 UTC+8 最后一次编辑</code></pre></details><a id="more"></a><h3 id="项目地址"><a class="markdownIt-Anchor" href="#项目地址"></a> 项目地址</h3><p><a href="https://github.com/oldgerman/Smoothieboard-10x10-5driver" target="_blank" rel="noopener">Git仓库：含所有相关文件, 制作前请打包下载、检查是否有新版本</a></p><h3 id="关于本文档"><a class="markdownIt-Anchor" href="#关于本文档"></a> 关于本文档</h3><p>本文档面向有意<strong>低成本</strong>diy冰沙板的大侠，内容按照diy的一般顺序排序，向你展示Smoothie 10x10 的：</p><ul><li>相比<a href="http://smoothieware.org/smoothieboard-v1" target="_blank" rel="noopener">smoothieboard-v1.1</a>改动的地方、技术规格</li><li>钢网+风枪焊接技巧、</li><li>基本功能的使用，使用的注意事项。具体的高级功能还请详见官方文档（世界各地许多人齐心协力构建的文档）</li><li>文档的大多数配图滞后于10x10开源版本，是<a href="#%E8%BF%9B%E5%BA%A6%E4%B8%80%E8%A7%88">进度一览</a>中的二、三周目版本</li></ul><p>本文档不含手把手教你做3D机、激光机、雕刻机、贴片机...因为怎么做博主也纳闷😳</p><h3 id="为什么要将冰沙主板缩小为10x10"><a class="markdownIt-Anchor" href="#为什么要将冰沙主板缩小为10x10"></a> 为什么要将冰沙主板缩小为10x10？</h3><details> <summary>展开查看</summary> <pre><code><br>由于10x10的四层板打样的价格越来越低，而大于10x10的四层板价格仍居高不下，相信不少尝试制作原版冰沙板的大侠一开始就被昂贵的打样费用劝退，因此设计出10x10的冰沙板很有意义，但冰沙主板作为开源了4年以上的开源硬件，其他大佬也设计过不少衍生版本，这些就包括：C3D Remix Board、SKR V-1.3、Cohesion3D Mini、Tiny Smoothie等，似乎我们的选择有很多，然而就如同官方所说的一样，尽管替代形状的数量越来越多，但是原始设计（[Smoohieboard v1.1）能为中小型CNC机器（包括但不限于3D打印机，激光切割机和CNC铣床）供电和控制所需的所有电子零件：步进电机驱动器（5通道），加热器/冷却器驱动器（6通道Mosfet PWM），温度传感器（4通道），限位开关，SPI，I2C和用于硬件扩展的其他I / O，其中包括USB，UART，以太网和SD卡。替代设计也应包括这些元素或它们的类似物，或说明如何轻松添加它们。（实际上衍生的设计或多或少都打了折扣）几年来衍生的设计与冰沙板的相似性并不太好，对初次接触衍生的主板、阅读原版的文档来学习如何使用冰沙板的朋友们不太友好，因为你需要知道衍生版相比原版的区别（引脚图变动、电子元件变动、布局变动等），因此博主不另起炉灶，索性直接修改原版的Eagle工程，保留了官方原版（Smoohieboard v1.1）所有的元件和引出的连接器，并适度优化，设计出了Smoothieboard v1.3（10x10），与原版极其相似。</code></pre></details><h3 id="duet2-wifi-vs-冰沙"><a class="markdownIt-Anchor" href="#duet2-wifi-vs-冰沙"></a> Duet2 wifi VS 冰沙</h3><p><a href="https://forum.duet3d.com/topic/9223/duet-3d-wifi-vs-smoothieware/3" target="_blank" rel="noopener">这里的讨论</a>看起来冰沙已经过气了，为啥还要修改冰沙? 咱们看看价格再谈性能，芯片取自深水宝最低价，PCB取自JLC，不包括邮费：</p><table><thead><tr><th>主板</th><th>主芯片</th><th>步进驱动器</th><th>PCB</th><th>diy起步成本</th><th>附：钢网成本</th></tr></thead><tbody><tr><td>Duet2 wifi</td><td>ATSAM4E8E：25￥<br>(剪板拆机片)</td><td>256细分；TMC2660：<br>13x5 = 65￥</td><td>12.3x10.0cm 四层板：5片240￥<br>（44板费+200工程费）<br>或 JP领券免费+22运费</td><td>112~330￥</td><td>40+运费</td></tr><tr><td>Smoothieboard v1.1</td><td>LPC1769：14￥</td><td>32细分；A5984：4x5=20￥</td><td>12.9x10.5cm 四层板：5片244￥<br>（44板费+200工程费）<br>或 JP领券免费+22运费</td><td>56~278￥</td><td>40+运费</td></tr><tr><td>Smoothieboard 10x10</td><td>LPC1769：14￥</td><td>32细分；A5984：4x5=20￥</td><td>10.0x10.0cm 四层板：5片50￥ <br>或 JP领券免费</td><td>34~84￥</td><td>15+运费</td></tr></tbody></table><p>Smoothie因为过气才有一定的性价比，以及openpnp的官方指定主板（对于diy贴片机而言十分好上手），才费尽心思做修改</p><h3 id="如果那么不建议使用冰沙"><a class="markdownIt-Anchor" href="#如果那么不建议使用冰沙"></a> 如果...那么不建议使用冰沙</h3><p>相信各位大侠因为想做贴片机才自远方来，除非你想做基于openpnp的贴片机才建议使用冰沙（32细分最高可能是稳定贴0402阻容，0201就不好说了），但如果你想做3D打印机，相比现在TMC2208步进驱动器基本成为3D打印机的标配（1.4A/36V 256细分 参考价7￥），冰沙的A5984步进驱动器（2.0A/40V 32细分 深水价4￥，但是2A电流香啊）显得过时，因此若冰沙固件的无需编译即可配置的功能对你做机器的帮助不大，或你预算充足，对256细分以及静音有要求，那么不建议使用冰沙主板diy 3D打印机。可以选购常见的基于STM32F407的五轴主板配TMC2208（细分更高且更静音但电流较小），若你想驱动更大电流的例如57步进，或对delta 3D机型的精度有刚需，那么十分推荐diy或购买成品的Duet2 wifi（使用5路TMC2660步进驱动器 4.0A/30V 256细分，深水价13）。</p><h3 id="冰沙主板简介"><a class="markdownIt-Anchor" href="#冰沙主板简介"></a> 冰沙主板简介</h3><p>项目创始人：<em>Arthur Wolf</em>（亚瑟·沃尔夫）</p><p><strong>历史</strong></p><ul><li><p>Smoothie最早期的<a href="http://smoothieware.org/smoothie-on-a-breadboard" target="_blank" rel="noopener">面包板版本</a>基于<a href="http://www.embeddedartists.com/products/lpcxpresso/lpc1769_xpr.php" target="_blank" rel="noopener">LPCXpresso 1769</a> breakout board搭建</p></li><li><p>Smoothie社区最早的<a href="http://smoothieware.org/smoothieboard-beta" target="_blank" rel="noopener">beta冰沙板</a></p></li><li><p>2013年<a href="https://www.kickstarter.com/projects/logxen/smoothieboard-the-future-of-cnc-motion-control?fbclid=IwAR3p6yq5UywppQh38nAqqtlnclIN4z0dtqtKcVALAKv71L_h7LvgYeH1cW8" target="_blank" rel="noopener">Smoothie V1众筹地址</a></p></li></ul><p><a href="https://www.reprap.org/wiki/Smoothieboard" target="_blank" rel="noopener">RepRap wiki</a>👈强烈建议在阅读此篇博文前先浏览这个，以对冰沙板有一个总体的认识</p><p><a href="http://smoothieware.org/smoothieboard-v1" target="_blank" rel="noopener">官方文档</a></p><p><a href="https://github.com/Smoothieware/Smoothieboard" target="_blank" rel="noopener">git仓库</a></p><p>上面的<a href="https://www.reprap.org/wiki/Smoothieboard" target="_blank" rel="noopener">ReppRap wiki</a>指明冰沙主板共有3个版本：</p><ul><li><a href="https://shop.uberclock.com/collections/smoothie/products/smoothieboard" target="_blank" rel="noopener">Smoothieboard_5x</a>具有5个步进电机驱动器，3个小型mosfet，3个大型mosfet和以太网支持，通常用于具有两个或更多挤出机的3D打印机</li><li><a href="https://shop.uberclock.com/products/smoothieboard-4x" target="_blank" rel="noopener">Smoothieboard_4x</a>具有4个步进电机驱动器，2个小型mosfet，2个大型mosfet和以太网支持，通常用于单挤出机3D打印机</li><li><a href="https://shop.uberclock.com/products/smoothieboard-3x" target="_blank" rel="noopener">Smoothieboard_3x</a>具有3个步进电机驱动器，2个小型mosfet，并且<strong>不</strong>支持以太网，通常用于激光切割机/绘图仪</li></ul><p>实际上他们的区别就是少贴装相应的元件，PCB都是同一块（Smoothieboard v1.1），<s>毕竟正规渠道的A5984可要20RMB左右一片</s></p><h3 id="冰沙固件简介"><a class="markdownIt-Anchor" href="#冰沙固件简介"></a> 冰沙固件简介</h3><p>模块化，开源，高性能G代码解释器、用面向对象的C ++编写的CNC控制器</p><p><a href="http://smoothieware.org/" target="_blank" rel="noopener">官方文档</a></p><p><a href="https://github.com/Smoothieware/Smoothieware" target="_blank" rel="noopener">git仓库</a></p><p>语言：<a href="https://libraries.io/languages/C++" target="_blank" rel="noopener">C ++</a></p><p><a href="http://smoothieware.org/smoothie-accessory-protocol" target="_blank" rel="noopener">冰沙附件的许可协议</a></p><p><a href="http://smoothieware.org/supported-g-codes" target="_blank" rel="noopener">Smoothie官方的G代码文档</a></p><p><a href="https://marlinfw.org/meta/gcode/" target="_blank" rel="noopener">Marlin的G代码文档</a></p><h2 id="冰沙10x10介绍"><a class="markdownIt-Anchor" href="#冰沙10x10介绍"></a> 冰沙10x10介绍</h2><h3 id="改动"><a class="markdownIt-Anchor" href="#改动"></a> 改动</h3><h4 id="图片对比版"><a class="markdownIt-Anchor" href="#图片对比版"></a> 图片对比版：</h4><p>（等比例）</p><p><img src="/6722c02f/%E5%8E%9F%E7%89%88vs10x10-1021.jpg" alt="原版vs10x10"></p><h4 id="文字描述版"><a class="markdownIt-Anchor" href="#文字描述版"></a> 文字描述版：</h4><p>由于博主从设计到定稿过程中打样了三次板，分别叫...</p><table><thead><tr><th>板子</th><th>优化的地方</th><th>失败的地方</th></tr></thead><tbody><tr><td>一周目</td><td>USB-C 、丝印位置、安装孔、线距、部分覆铜、优化所有的阻焊开窗使阻焊桥&gt;8mil，即使杂色板最密集引脚处的阻焊桥也能百分百存在</td><td>内层的Y限位信号线将3V3的过孔和PLA的过孔短接，限位一单触发就关机，紧急按钮也无法使用，另外，原版的大4P封装的孔位有问题，无法安装</td></tr><tr><td>二周目</td><td>PCB缩小至最经济的10x10cm，保留了原版所有的功能和引脚，增加了DCDC电路，增加数字/机械电位器二选一电路，修改一周目的所有问题，优化所有连接器的位置（对齐）和丝印</td><td>所有线路部分正常，但是KF2510连接器和插拔式接线端子的的间距偏小，5V电源轨的防反灌的肖特基二极管位置给错，从USB-C_5V上电时会倒灌到12V电源轨，TC4427丝印位错</td></tr><tr><td>三周目</td><td>优化二周目的所有问题，在L1 L2层密集过孔区增加了铜皮，L1层增加了小功率MOS管的电源轨铜皮，Bottom层restrict了MOS管和大电流端子的pin与pin之间的铜皮，防止焊接时误损阻焊层造成连锡短路，增加了用于散热片定位丝印</td><td>0 error<br>1 warning: C13的位置不对劲</td></tr><tr><td>开源20201013</td><td>调整C13，稍微对齐R108~R111<br>去除Smoothie相关的商标s</td><td></td></tr><tr><td>开源20201021</td><td>加宽A5984 OUT的部分铜箔从33mil加宽到60mil</td><td></td></tr><tr><td>开源20201210</td><td>优化dcdc电感走线</td><td></td></tr></tbody></table><h3 id="取舍"><a class="markdownIt-Anchor" href="#取舍"></a> 取舍</h3><table><thead><tr><th style="text-align:left">舍</th><th>得</th></tr></thead><tbody><tr><td style="text-align:left">PCB面积减少 &gt; 1/4，板面散热性能有损失<br>大功率MOSFET推荐载流减少30%</td><td>对称，整齐，紧凑的布局<br>PCB和激光钢网的打样费用前所未有地减少</td></tr><tr><td style="text-align:left">PCB没有空余的位置放置元件名字的丝印</td><td>用交互式BOM查找元件位置</td></tr><tr><td style="text-align:left">500mA <a href="https://shop.uberclock.com/collections/smoothie/products/switching-regulator-dc-to-dc-5v" target="_blank" rel="noopener">DCDC模块</a></td><td>板载 2.5A <a href="https://www.monolithicpower.com/en/mp2565.html" target="_blank" rel="noopener">MP2565</a> DCDC电路，物料(仅这部分)有所增加</td></tr><tr><td style="text-align:left">N/A</td><td>数字/机械电位器二选一，若对电流一致性要求不高，<br>用机械电位器相比前者成本降低15~20元</td></tr><tr><td style="text-align:left">2512 0.05R 3W 合金采样电阻</td><td>1206 0.05R 1W合金采样电阻 (实测最大2A时才1/5W)</td></tr><tr><td style="text-align:left">D+的上拉SOT363 MOSFET-P</td><td>换为常见的SOT23 MOSFET-P</td></tr><tr><td style="text-align:left">USB方口</td><td>USB-C (16p) + <a href="https://www.st.com/resource/en/datasheet/usblc6-2.pdf" target="_blank" rel="noopener">USBLC6</a></td></tr><tr><td style="text-align:left">N/A</td><td>增加1812自恢复保险丝保护AMS1117-3.3</td></tr><tr><td style="text-align:left">将所有的默认连线的焊接跳线盘改为未连线</td><td>更自由地跳线</td></tr></tbody></table><h3 id="技术规格"><a class="markdownIt-Anchor" href="#技术规格"></a> 技术规格</h3><p>恩智浦LPC1769微控制器</p><ul><li>96MHz-120MHz 32位ARM Cortex-M3内核，64KB RAM，512KB闪存</li></ul><p>Allegro A5984双极步进驱动器</p><ul><li><p>高达40V 2A 32x微步进，数字/机械式电流控制</p></li><li><p>5个步进驱动器</p></li></ul><p>多达6个FET</p><ul><li>3个最高可支持24V 5A的电流，另外3个最高可支持24V 10A(原版为12A)的电流，以控制外部设备，如热水袋，风扇和加热床。</li></ul><p>扩展：4个热敏电阻端口，6个终端挡板端口，SPI，I2C，UART，USB，MicroSD插槽，以太网</p><p>轻松配置！</p><ul><li>基于文件的配置（无需重新编译）</li><li>基于文件的升级（提供了二进制文件，升级无需编译）</li><li>通过USB同时进行文件和串行访问</li></ul><h3 id="引脚定义"><a class="markdownIt-Anchor" href="#引脚定义"></a> 引脚定义</h3><p>官方抽不出人手绘制fritzing风格的pinout，我就当一次美工哈，根据<a href="http://smoothieware.org/pinout" target="_blank" rel="noopener">Smoothieboard v1.1的pinout</a>乾坤大挪移，可以与原版对比着看</p><table><thead><tr><th>pin out</th><th>pin capabilities</th></tr></thead><tbody><tr><td><img src="/6722c02f/Smoothie-10x10-pinout-map-mini.png" alt="Smoothie-10x10-pinout-map-mini"></td><td><img src="/6722c02f/Smoothie-10x10-pin-capabilities-mini.png" alt="Smoothie-10x10-pin-capabilities-mini"></td></tr></tbody></table><h3 id="成品展示"><a class="markdownIt-Anchor" href="#成品展示"></a> 成品展示</h3><p><strong>2020-10-13 版本之前的三周目</strong></p><table><thead><tr><th>正</th><th>反</th></tr></thead><tbody><tr><td><img src="/6722c02f/%E4%B8%89%E5%91%A8%E7%9B%AE%E6%88%90%E5%93%81(1).jpg" alt="三周目成品(1)"></td><td><img src="/6722c02f/%E4%B8%89%E5%91%A8%E7%9B%AE%E6%88%90%E5%93%81(2).jpg" alt="三周目成品(2)"></td></tr></tbody></table><p><strong>2020-10-21版本</strong></p><p><a href="https://oshwhub.com/red_bean" target="_blank" rel="noopener">红豆</a>和烂尾侠制作的2020-10-21成品，基本功能测试OK</p><p><img src="/6722c02f/redbean.JPG" alt="redbean"></p><p><strong>2020-12-10版本</strong></p><p>其实我把二周目板上的元件搬了个家。。。</p><table>    <td><image src="冰沙主板制作笔记/2020-12-10版冰沙_成品tp_small.JPG"></image></td>    <td><image src="冰沙主板制作笔记/2020-12-10版冰沙_成品bk_small.JPG"></image></td></table><h3 id="元件焊盘过孔数量"><a class="markdownIt-Anchor" href="#元件焊盘过孔数量"></a> 元件，焊盘，过孔数量</h3><table><thead><tr><th>10x10 三周目</th><th>原版</th></tr></thead><tbody><tr><td><img src="/6722c02f/PCB-INFO(1).png" alt="20201015004022"></td><td><img src="/6722c02f/PCB-INFO(2).png.png" alt="20201015004138"></td></tr></tbody></table><h3 id="物料清单-成本"><a class="markdownIt-Anchor" href="#物料清单-成本"></a> 物料清单、成本</h3><p>Excel  <a href="Smoothieboard_10x10-v1.3-BOM.xlsx">Smoothieboard_10x10-v1.3-BOM.xlsx</a> （付报价）</p><p>交互式BOM，见BOM文件夹的Smoothie-10x10_ibom.html文件，对应的区块如下图，附LPC1769 引脚：</p><table><thead><tr><th>功能区</th><th>LPC1768/LPC1769引脚定义</th></tr></thead><tbody><tr><td><img src="/6722c02f/smoothieboard-10x10-%E5%8A%9F%E8%83%BD%E5%8C%BA.jpg" alt="smoothieboard-10x10-功能区"></td><td><img src="/6722c02f/lpc1768_mbed_pinout.png" alt="lpc1768_mbed_pinout"></td></tr></tbody></table><p>LPC1768与LPC1769是pin to pin的，但1768的主频只有100MHz，而1769的主频是120MHz，文档说冰沙固件针对120Mhz做了特定的优化，所以在diy时注意芯片型号</p><h2 id="焊接指南"><a class="markdownIt-Anchor" href="#焊接指南"></a> 焊接指南</h2><h3 id="电烙铁"><a class="markdownIt-Anchor" href="#电烙铁"></a> 电烙铁</h3><p><s>乃神人也</s></p><p>建议按上图分功能区焊接，边焊接边测试</p><h3 id="回流焊"><a class="markdownIt-Anchor" href="#回流焊"></a> 回流焊</h3><p>若你使用无铅锡膏，建议PCB打样时选择TG温度&gt;150℃的基材</p><p><a href="https://www.researchmfg.com/2013/04/solder-paste/" target="_blank" rel="noopener">介紹並認識【錫膏(solder paste)】的基本知識(含助焊劑)</a></p><p><a href="https://zhuanlan.zhihu.com/p/72950962" target="_blank" rel="noopener">回流曲线的四大温区：【晨日•技术篇】教你理解回流温度曲线</a></p><p><a href="https://www.researchmfg.com/2010/07/reflow-profile/" target="_blank" rel="noopener">SMT回流焊的溫度曲線(Reflow Profile)解說與注意事項</a></p><p><a href="https://www.coilcraft.com/getmedia/36ca91a6-36bc-418b-88e0-7c318b2bed9b/Doc755_Solder_Reflow_Profile.pdf" target="_blank" rel="noopener">典型的RoHS回流焊曲线</a></p><h3 id="锡膏"><a class="markdownIt-Anchor" href="#锡膏"></a> 锡膏</h3><p><a href="http://www.jlc-gw.com/info/12.988.html" target="_blank" rel="noopener">SMT无铅焊料简介</a></p><p><a href="http://bbs.smthome.net/simple/t236956.html" target="_blank" rel="noopener">锡膏回温和搅拌时间</a></p><p>冷藏的锡膏需要回温，不然会有太多水蒸汽冷凝，回焊的时候水汽会沸腾，导致炸锡</p><p><a href="https://www.sohu.com/a/400612384_120150490" target="_blank" rel="noopener">锡膏使用前的准备</a></p><p><a href="https://zhuanlan.zhihu.com/p/108971614" target="_blank" rel="noopener">SMT贴片加工中常用的锡膏类型</a></p><p><strong>手工点锡膏</strong></p><p>21号不锈钢针头配1ml注射器，记得放锡膏稀释剂不然分分钟堵头，若堵头建议来一支0.4mm喷嘴疏通针</p><table><thead><tr><th>工具</th><th>挤锡膏放元件</th><th>风枪焊接效果</th></tr></thead><tbody><tr><td><img src="/6722c02f/%E4%BD%9C%E6%A1%88%E5%B7%A5%E5%85%B7.jpg" alt="作案工具"></td><td><img src="/6722c02f/%E4%BD%9C%E6%A1%88%E7%8E%B0%E5%9C%BA.jpg" alt="作案现场"></td><td><img src="/6722c02f/%E4%BD%9C%E6%A1%88ok.png" alt="img"></td></tr></tbody></table><h3 id="激光钢网"><a class="markdownIt-Anchor" href="#激光钢网"></a> 激光钢网</h3><p>转好钢网gerber文件在steel-mesh文件夹内</p><p><s>人生第一次给了</s>10x10冰沙主板，博主在宝钢电子开的10x10小钢片，<s>晒图朋友们觉得钢网很可爱？其实我觉得性价比挺高的，毕竟开了900+焊盘，逃）</s></p><p>三周目开钢网焊接，推荐飞鹰牌保安刀片刮锡膏。</p><p><strong>钢网四角需不需要螺丝固定孔</strong></p><p>因为是第一次开钢网，所以把能尝试的都尝试了，我将PCB四角的M3孔也开了，方便定位（似乎大家都用胶带固定钢片？）</p><p><strong>刮锡膏的角度</strong></p><p>45度贴紧，慢慢刮，<s>让巧克力慢慢融化</s></p><p><strong>是否可以来回反复刮锡膏</strong></p><p>可能一次刮后会有部分焊盘锡膏不完整，想再刮一次原则上不可以，但我实测之后，对于此PCB，用保安刀片来回刮并不会有多大影响，<s>淦就完事了</s></p><p><strong>钢网脱模</strong></p><p><s>手起刀落</s></p><p><strong>步骤演示</strong></p><table><thead><tr><th>准备工具</th><th>挑出足量的稀释后的锡膏</th><th>压紧45度刮至均匀</th></tr></thead><tbody><tr><td><img src="/6722c02f/%E5%88%AE%E9%92%A2%E7%BD%91%E6%AD%A5%E9%AA%A4%E5%B1%95%E7%A4%BA(1).png" alt="img"></td><td><img src="/6722c02f/%E5%88%AE%E9%92%A2%E7%BD%91%E6%AD%A5%E9%AA%A4%E5%B1%95%E7%A4%BA(2).png.png" alt="img"></td><td><img src="/6722c02f/%E5%88%AE%E9%92%A2%E7%BD%91%E6%AD%A5%E9%AA%A4%E5%B1%95%E7%A4%BA(3).png" alt="img"></td></tr></tbody></table><table><thead><tr><th>小心脱模</th><th>锡膏效果：</th><th></th></tr></thead><tbody><tr><td><img src="/6722c02f/%E5%88%AE%E9%92%A2%E7%BD%91%E6%AD%A5%E9%AA%A4%E5%B1%95%E7%A4%BA(4).png" alt="img"></td><td><img src="/6722c02f/%E5%88%AE%E9%92%A2%E7%BD%91%E6%AD%A5%E9%AA%A4%E5%B1%95%E7%A4%BA(5).png" alt="img"></td><td><img src="/6722c02f/%E5%88%AE%E9%92%A2%E7%BD%91%E6%AD%A5%E9%AA%A4%E5%B1%95%E7%A4%BA(7).png" alt="img"></td></tr></tbody></table><table><thead><tr><th>小心摆放元件</th><th>风枪回流焊接</th><th>检查连锡，虚焊后测试</th></tr></thead><tbody><tr><td><img src="/6722c02f/%E5%88%AE%E9%92%A2%E7%BD%91%E6%AD%A5%E9%AA%A4%E5%B1%95%E7%A4%BA(9).png" alt="img"></td><td><img src="/6722c02f/%E5%88%AE%E9%92%A2%E7%BD%91%E6%AD%A5%E9%AA%A4%E5%B1%95%E7%A4%BA(10).jpg" alt="IMG_2816"></td><td><img src="/6722c02f/%E5%88%AE%E9%92%A2%E7%BD%91%E6%AD%A5%E9%AA%A4%E5%B1%95%E7%A4%BA(10).png" alt="img"></td></tr></tbody></table><p><strong>锡膏如何清洗</strong></p><p>原则上要专用的钢网清洗剂，但实测用PCB的洗板水效果极佳，注意75%的酒精清洗8太行</p><h2 id="测试和使用"><a class="markdownIt-Anchor" href="#测试和使用"></a> 测试和使用</h2><p>若你使用烙铁或者逐区锡膏焊接，那么所有功能测试前需要焊接最小系统</p><h2 id="电源要求"><a class="markdownIt-Anchor" href="#电源要求"></a> 电源要求</h2><h3 id="usb取电"><a class="markdownIt-Anchor" href="#usb取电"></a> USB取电</h3><p>冰沙主板仅通过USB供电时，无法使用MOS管和步进驱动（通过主电源供电时，才能使用），主电源供电时，可以不从USB取电</p><p>引脚定义的VBB IN，就是主电源输入，冰沙文档中VBB指主电源，以下节选自<a href="http://smoothieware.org/main-power-input" target="_blank" rel="noopener">官方文档：主电源供电</a></p><h3 id="vbb供应"><a class="markdownIt-Anchor" href="#vbb供应"></a> VBB供应</h3><ul><li><a href="http://en.wikipedia.org/wiki/Voltage" target="_blank" rel="noopener">电压</a>（V）：<span style="color:blue;">VBB可以为12至24V</span>。尽管Smoothieboard上的大多数组件的额定电压均高达32V，但不建议或不建议使用该高电压。12V PSU更常见，并且通常更便宜。但是，<span style="color:blue;">电压越高，步进电机的性能就越高</span>。这就是某些设计师使用24V PSU的原因。但是，<span style="color:red;">请注意，使用24V PSU时，您将需要24V风扇，并且需要减少加热元件的PWM设置，或者（最好，更安全）使用24V加热元件。</span></li><li><a href="http://en.wikipedia.org/wiki/Electric_current" target="_blank" rel="noopener">电流</a>（A）：所需的总电流是每个步进电机的电流，加上机器上Smoothieboard将控制的每个外围设备的电流。这取决于您的机器类型。<ul><li>在典型的3D打印机上，您可以安全地认为10A对于加热床是足够的，而对于其余的负载则是10A或更少。</li><li>如果您有加热床，请使用17至20A PSU。</li><li>如果没有加热床（或者正在安装CNC铣床或激光切割机），则7A至10可能就足够了。</li><li>如果您以套件形式购买机器，则很可能会提供具有适当电流的PSU（或建议使用一个）。</li><li>如果您通过自行采购来自行构建机器，则该机器型号的文档也很可能会推荐当前等级。能够提供比所需电流更多的电流的电源不是问题。没有足够的电流来驱动热端，加热器床或电动机是一个问题。</li></ul></li><li>某些品牌外电源的额定功率可能超出其实际功率能力（动机：写出更大的数字会增加售价），可能未达到UL或CE额定值（如果起火，保险可能无法弥补损失），或可能很好。较低的售价意味着成本以某种方式被挤出了设计。最好了解如何。</li><li>电源效率不是100％，并且会发热。热量会缩短电子设备的寿命。如果它们包含冷却风扇，请确保入口和出口的气流不受限制。布置好入口，防止掉落物品和细丝；最好离开地板或桌子，以免吸入灰尘。</li></ul><h3 id="mos外部供电"><a class="markdownIt-Anchor" href="#mos外部供电"></a> MOS外部供电</h3><p>对于大功率和小功率MOS，若不使用跳线帽从主电源取电，而是从VIN 1，VIN 2 取电，电压最高为24V</p><h2 id="最小系统"><a class="markdownIt-Anchor" href="#最小系统"></a> 最小系统</h2><p>红色框内的最小系统部分可以顺带焊接把绿框内的限位开关电路</p><table><thead><tr><th>电路</th><th>配图为二周目</th></tr></thead><tbody><tr><td><img src="/6722c02f/smoothieboard-10x10-%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F.jpg" alt="smoothieboard-10x10-最小系统"></td><td><img src="/6722c02f/MinimumSystemCircuit(3).png.png" alt="img"></td></tr></tbody></table><h3 id="烧录bootloader"><a class="markdownIt-Anchor" href="#烧录bootloader"></a> 烧录Bootloader</h3><p>下载git仓库的Smoothieware的zip包解压</p><p>下载NXP LPC芯片专用的烧录工具：Flash Magic，并安装</p><p>下载烧录器的win驱动。安装，博主使用D1 mini开发板上的CH340(事先需要将8266烧一个空程序防止占用串口)，<a href="https://sparks.gogo.co.nz/assets/_site_/downloads/CH34x_Install_Windows_v3_4.zip" target="_blank" rel="noopener">CH340驱动下载</a></p><p>串口烧录器(ch340，cp2102等)，接冰沙的Serial口的TX，RX，GND，Seria口的V+接烧录器的5V，使冰沙板直接从烧录器取电（从烧录器取电时，要将冰沙10x10 PCB背面的SJ1二选一跳线焊盘焊接跳线到5V），注意USB和VBB都不要上电，否则Flashmagic会报错&quot;Failed to autobuad&quot;(自动波特率匹配失败)，原因可能是RXTX参考电压不一致博主接线如下：</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><img src="/6722c02f/CH340_ISP(1).png" alt="img"></td><td><img src="/6722c02f/CH340_ISP(2).png" alt="img"></td><td><img src="/6722c02f/CH340_ISP(3).png" alt="img"></td></tr></tbody></table><p>短接ISP和GND再将Serial的V+上5V电，保证100%进入ISP烧录模式（官方的四部曲我试了很多次都没成功）</p><p>进入ISP模式后，电源LED正常，但LED1~4非常暗淡，是正常的，在此模式下，打开Flash Magic</p><p>烧录Bootloader步骤如下</p><table><thead><tr><th></th><th>1</th></tr></thead><tbody><tr><td><img src="/6722c02f/FlashMagic(0).png" alt="FlashMagic(0)"></td><td><img src="/6722c02f/FlashMagic(1).png" alt="FlashMagic(1)"></td></tr><tr><td>Device栏选择LPC1759，在ISP栏中点击Read Signature读取芯片信息</td><td>Firmware栏的File路径里选择刚下载Smoothieware固件包的bootloader文件夹里的DFU-Bootloader.hex</td></tr></tbody></table><table><thead><tr><th>3</th><th>4</th></tr></thead><tbody><tr><td><img src="/6722c02f/FlashMagic(2).png" alt="FlashMagic(2)"></td><td><img src="/6722c02f/FlashMagic(5).png" alt="FlashMagic(5)"></td></tr><tr><td>Preference中默认的晶振频率为12MHz，与原理图相符<br>下方的3行DTR RTS配置选不选都不影响</td><td>Erase栏的Erase里选Entrie device或者Selectors by file都行，点击Start等待烧录结束</td></tr></tbody></table><p>烧录完hex文件RESET后，LED1~4会一直常亮，说明符合官方描述的无固件状态：</p><p><img src="/6722c02f/LED1-4notBlink.png" alt="LED1-4notBlink"></p><h3 id="烧录firmwarebin"><a class="markdownIt-Anchor" href="#烧录firmwarebin"></a> 烧录firmware.bin</h3><p>找一张FAT32格式的SD卡</p><p>将Smoothieware固件包的FirmwareBin文件夹里的<strong>firmware.bin</strong>、ConfigSamples/Smoothieboard文件夹里的<strong>config</strong>放入SD卡（这两个文件仅作测试用）</p><p>将SD卡插入冰沙板卡槽。按一次Reset等待LPC1769自己升级固件</p><h2 id="serial串口"><a class="markdownIt-Anchor" href="#serial串口"></a> Serial串口</h2><p>Serial串口除了在ISP模式下使用，跑冰沙固件时也可以显示一些信息，将波特率设为115200，打开串口并复位冰沙主板，会显示一些信息，若以太网使用还会显示网络的配置信息，还可以显示Kill按钮状态，可以执行从此串口收到的G代码和终端命令</p><p><img src="/6722c02f/Serial-_info.png" alt="20201002214041"></p><h2 id="usb-c串口"><a class="markdownIt-Anchor" href="#usb-c串口"></a> USB-C串口</h2><h3 id="安装冰沙串口驱动"><a class="markdownIt-Anchor" href="#安装冰沙串口驱动"></a> 安装冰沙串口驱动</h3><p><a href="http://smoothieware.org/windows-drivers" target="_blank" rel="noopener">官方文档：Smoothie drivers for Windows</a></p><h4 id="windows-2000-vista-78-64bit-32bit"><a class="markdownIt-Anchor" href="#windows-2000-vista-78-64bit-32bit"></a> Windows 2000 / Vista / 7/8 64bit / 32bit</h4><p><a href="http://smoothieware.org/_media/windows-drivers/smoothieware-usb-driver-v1.1.exe" target="_blank" rel="noopener">smoothieware-usb-driver-v1.1.exe</a>（git仓库资料中有）</p><h4 id="windows-10"><a class="markdownIt-Anchor" href="#windows-10"></a> Windows 10</h4><p>无需在Windows 10上安装驱动程序，应该可以立即使用。在Windows 10上安装驱动程序可能会引起麻烦</p><p>但是我的win10测试，win10需要装驱动，设备管理器才能识别为Smoothie，win10安装了smoohieboard驱动务必重启，不然pernterface发命令会显示超时</p><h2 id="以太网"><a class="markdownIt-Anchor" href="#以太网"></a> 以太网</h2><table><thead><tr><th>电路</th><th>配图为二周目</th></tr></thead><tbody><tr><td><img src="/6722c02f/smoothieboard-10x10-%E4%BB%A5%E5%A4%AA%E7%BD%91.jpg" alt="smoothieboard-10x10-以太网"></td><td><img src="/6722c02f/%E4%BB%A5%E5%A4%AA%E7%BD%91.png" alt="img"></td></tr></tbody></table><h3 id="470pf是必须的"><a class="markdownIt-Anchor" href="#470pf是必须的"></a> 470pF是必须的</h3><p>8720的Pin6 VDDCR输出1.2V，需要外部连接1uF和470pF电容是必须的！！不要用其它电容替代否则电压会不正常</p><h3 id="基础型webui"><a class="markdownIt-Anchor" href="#基础型webui"></a> 基础型Webui</h3><p><a href="http://smoothieware.org/network" target="_blank" rel="noopener">官方文档：Network interface</a></p><p>Smoothieboard firmware.bin内实现了一个基本的webui(PC端的Pronterface阉割版，没有3D预览)，将冰沙主板接入路由器使用在同一局域网的PC访问</p><h3 id="增强型webui"><a class="markdownIt-Anchor" href="#增强型webui"></a> 增强型Webui</h3><p><a href="http://smoothieware.org/install-web-interface" target="_blank" rel="noopener">官方文档：Installing the web interface to the SD card</a>若使用Chrome无法加载webui，试试在浏览器页面按Ctrl +Shift+Delete。勾选缓存的图片及文件，清除数据后再尝试</p><h3 id="同时使用webui和pronterface以及serial"><a class="markdownIt-Anchor" href="#同时使用webui和pronterface以及serial"></a> 同时使用Webui和pronterface以及Serial</h3><p>可以正常接收三处的G代码，板上SD卡也能正常挂载win10</p><p><img src="/6722c02f/%E6%AD%A5%E8%BF%9BM5%E6%B5%8B%E8%AF%953-%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8webui%E5%92%8Cpronterface.png" alt="步进M5测试3-同时使用webui和pronterface"></p><h2 id="kill-button"><a class="markdownIt-Anchor" href="#kill-button"></a> Kill button</h2><p><a href="http://smoothieware.org/killbutton" target="_blank" rel="noopener">官方文档：Kill button</a></p><p>冰沙板板载可爱的的12x12带灯开关，<s>一直觉得这是冰沙板的灵魂有木有？</s>，执行步进G代码的过程中黄都会长亮，异常状态会闪烁。长按使程序退出异常，等效于发送M999</p><h2 id="ntc温度"><a class="markdownIt-Anchor" href="#ntc温度"></a> NTC温度</h2><p>默认是NTC100K，选择其他型号的热敏电阻见<a href="http://smoothieware.org/temperaturecontrol" target="_blank" rel="noopener">官方文档：温度控制</a>]的热敏电阻选择部分</p><h3 id="异常"><a class="markdownIt-Anchor" href="#异常"></a> 异常</h3><p>若NTC电阻接触不良若未安装，则在执行需要加热的G代码时，会报错：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Temperature reading <span class="keyword">is</span> unreliable <span class="keyword">on</span> T HALT asserted - reset <span class="keyword">or</span> M999 required</span><br></pre></td></tr></table></figure><p>此时Killbutton会快速闪烁，长按它可以结束</p><h3 id="读取温度"><a class="markdownIt-Anchor" href="#读取温度"></a> 读取温度</h3><p>使用M105读取，默认仅返回TH1（喷头0），TH2（热床）通道的温度</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; M105</span><br><span class="line">SENDING:M105</span><br><span class="line">ok T:<span class="number">25.2</span> /<span class="number">0.0</span> @<span class="number">0</span> B:<span class="number">25.4</span> /<span class="number">0.0</span> @<span class="number">0</span> T:inf /<span class="number">0.0</span> @<span class="number">0</span> T:inf /<span class="number">0.0</span> @<span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="读取th3和th4"><a class="markdownIt-Anchor" href="#读取th3和th4"></a> 读取TH3和TH4</h3><p>（默认TH4未跳线，记得跳线）</p><table><thead><tr><th style="text-align:left">冰沙板热敏电阻输入引脚名称</th><th style="text-align:left">T0（th1）</th><th style="text-align:left">T1（th2）</th><th style="text-align:left">T2（th3）</th><th style="text-align:left">T3（th4）</th></tr></thead><tbody><tr><td style="text-align:left">引脚号</td><td style="text-align:left">0.23</td><td style="text-align:left">0.24</td><td style="text-align:left">0.25</td><td style="text-align:left">0.26</td></tr></tbody></table><p>可以在config中增加以下或注释掉原有的，来使用TH3、TH4</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">temperature_control.th3.enable</span> <span class="literal">true</span><span class="comment"># Whether to activate this ( "th3" ) module at all.</span></span><br><span class="line"><span class="string">temperature_control.th3.thermistor_pin</span> <span class="number">0.25</span><span class="comment"># Pin for the thermistor to read</span></span><br><span class="line"><span class="string">temperature_control.bed.heater_pin</span>           <span class="number">2.4</span>         <span class="comment"># Pin that controls the heater</span></span><br></pre></td></tr></table></figure><p>之后M105会返回TH3、TH4</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">SENDING</span>:M105</span><br><span class="line">k <span class="attribute">T</span>:<span class="number">25.2</span> /<span class="number">0.0</span> <span class="variable">@0</span> <span class="attribute">B</span>:<span class="number">25.4</span> /<span class="number">0.0</span> <span class="variable">@0</span> <span class="attribute">T</span>:<span class="number">25.6</span> /<span class="number">0.0</span> <span class="variable">@0</span> <span class="attribute">T</span>:<span class="number">25.5</span> /<span class="number">0.0</span> <span class="variable">@0</span></span><br></pre></td></tr></table></figure><p>注意：例如加热12V 5A的60W陶瓷芯最好使用大功率MOS，不要用小功率MOS，这里使用P2.4控制的小功率MOS仅作演示</p><h2 id="mosfet"><a class="markdownIt-Anchor" href="#mosfet"></a> Mosfet</h2><p>在焊接蓝色框内MOS部分前，建议先把黄框内的DCDC和VBB电源MOS焊接，测试VBB输入12~24V时，DCDC的5V是否正常</p><table><thead><tr><th>电路</th><th>配图为二周目</th></tr></thead><tbody><tr><td><img src="/6722c02f/smoothieboard-10x10-Mos+DCDC.jpg" alt="smoothieboard-10x10-Mos+DCDC"></td><td><img src="/6722c02f/MOSFET%E9%85%8D%E5%9B%BE%E4%B8%BA%E4%BA%8C%E5%91%A8%E7%9B%AE.png" alt="img"></td></tr></tbody></table><h3 id="每一路jumper的current-rating"><a class="markdownIt-Anchor" href="#每一路jumper的current-rating"></a> 每一路Jumper的Current rating</h3><p>However, <strong><a href="http://www.obscureinternet.com/wp-content/uploads/1268330310152.jpg" target="_blank" rel="noopener">WARNING</a></strong>, each jumper is rated for only 2A of current. This means you can not use this way of powering your MOSFETS if you are going to use more than 2A ( for the small MOSFETS ) or 4A ( for the big MOSFETS, with both jumpers used, for 2 x 2A ).</p><p>Do not use the jumpers to power a heated bed for example, as it uses much more than 4A.</p><p>LPC1769支持PWM的GPIO有6路原生PWM用于6个MOS输出， 可能需要舍弃congif里的bltouch和misc，将其改为false (占用P2.4)：</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>.misc.enable                          <span class="literal">false</span>             <span class="comment"># Enable this module</span></span><br><span class="line"><span class="keyword">switch</span>.misc.input_on_command                M42              <span class="comment"># Command that will turn this switch on</span></span><br><span class="line"><span class="keyword">switch</span>.misc.input_off_command               M43              <span class="comment"># Command that will turn this switch off</span></span><br><span class="line"><span class="keyword">switch</span>.misc.output_pin                      <span class="number">2.4</span>              <span class="comment"># Pin this module controls</span></span><br><span class="line"><span class="keyword">switch</span>.misc.output_type                     digital          <span class="comment"># Digital means this is just an on or off pin</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>.bltouch.enable                    <span class="literal">false</span>         <span class="comment">#</span></span><br><span class="line"><span class="keyword">switch</span>.bltouch.output_pin                <span class="number">2.4</span>          <span class="comment"># sw pwm can use any digital pin</span></span><br><span class="line"><span class="keyword">switch</span>.bltouch.input_on_command          M280         <span class="comment">#</span></span><br><span class="line"><span class="keyword">switch</span>.bltouch.input_off_command         M281         <span class="comment">#</span></span><br><span class="line"><span class="keyword">switch</span>.bltouch.output_type               swpwm        <span class="comment"># sw pwm must be low frequency</span></span><br><span class="line"><span class="keyword">switch</span>.bltouch.pwm_period_ms             <span class="number">20</span>           <span class="comment"># 50Hz</span></span><br><span class="line"><span class="keyword">switch</span>.bltouch.startup_state             <span class="literal">false</span>        <span class="comment"># start up in the stow state</span></span><br><span class="line"><span class="keyword">switch</span>.bltouch.startup_value             <span class="number">7.43</span>         <span class="comment"># On boot it will go into stow mode, also set with the M281</span></span><br><span class="line"><span class="keyword">switch</span>.bltouch.default_on_value          <span class="number">3.3</span>          <span class="comment"># if M280 is issued without S this is the value it will set it to</span></span><br></pre></td></tr></table></figure><p>在config中加入博主的测试段文字方便测试：</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">## Switch modules</span><br><span class="line"># See http:<span class="comment">//smoothieware.org/switch</span></span><br><span class="line"></span><br><span class="line"># Switch <span class="keyword">module</span> <span class="keyword">for</span> fan control</span><br><span class="line"><span class="keyword">switch</span>.fan24.enable                            <span class="literal">true</span>             # Enable <span class="keyword">this</span> <span class="keyword">module</span></span><br><span class="line"><span class="keyword">switch</span>.fan24.input_on_command                  M246             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> on</span><br><span class="line"><span class="keyword">switch</span>.fan24.input_off_command                 M247             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> off</span><br><span class="line"><span class="keyword">switch</span>.fan24.output_pin                        <span class="number">2.4</span>              # Pin <span class="keyword">this</span> <span class="keyword">module</span> controls</span><br><span class="line"><span class="keyword">switch</span>.fan24.output_type                       pwm              # PWM output settable <span class="keyword">with</span> S parameter <span class="keyword">in</span> the input_on_comand</span><br><span class="line">#<span class="keyword">switch</span>.fan24.max_pwm                          <span class="number">255</span>              # Set max pwm <span class="keyword">for</span> the pin <span class="keyword">default</span> <span class="keyword">is</span> <span class="number">255</span></span><br><span class="line"></span><br><span class="line"># Switch <span class="keyword">module</span> <span class="keyword">for</span> fan control</span><br><span class="line"><span class="keyword">switch</span>.fan25.enable                            <span class="literal">true</span>             # Enable <span class="keyword">this</span> <span class="keyword">module</span></span><br><span class="line"><span class="keyword">switch</span>.fan25.input_on_command                  M256             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> on</span><br><span class="line"><span class="keyword">switch</span>.fan25.input_off_command                 M257             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> off</span><br><span class="line"><span class="keyword">switch</span>.fan25.output_pin                        <span class="number">2.5</span>              # Pin <span class="keyword">this</span> <span class="keyword">module</span> controls</span><br><span class="line"><span class="keyword">switch</span>.fan25.output_type                       pwm              # PWM output settable <span class="keyword">with</span> S parameter <span class="keyword">in</span> the input_on_comand</span><br><span class="line">#<span class="keyword">switch</span>.fan25.max_pwm                          <span class="number">255</span>              # Set max pwm <span class="keyword">for</span> the pin <span class="keyword">default</span> <span class="keyword">is</span> <span class="number">255</span></span><br><span class="line"></span><br><span class="line"># Switch <span class="keyword">module</span> <span class="keyword">for</span> fan control</span><br><span class="line"><span class="keyword">switch</span>.fan26.enable                            <span class="literal">true</span>             # Enable <span class="keyword">this</span> <span class="keyword">module</span></span><br><span class="line"><span class="keyword">switch</span>.fan26.input_on_command                  M266             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> on</span><br><span class="line"><span class="keyword">switch</span>.fan26.input_off_command                 M267             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> off</span><br><span class="line"><span class="keyword">switch</span>.fan26.output_pin                        <span class="number">2.6</span>              # Pin <span class="keyword">this</span> <span class="keyword">module</span> controls</span><br><span class="line"><span class="keyword">switch</span>.fan26.output_type                       pwm              # PWM output settable <span class="keyword">with</span> S parameter <span class="keyword">in</span> the input_on_comand</span><br><span class="line">#<span class="keyword">switch</span>.fan26.max_pwm                          <span class="number">255</span>              # Set max pwm <span class="keyword">for</span> the pin <span class="keyword">default</span> <span class="keyword">is</span> <span class="number">255</span></span><br><span class="line"></span><br><span class="line"># Switch <span class="keyword">module</span> <span class="keyword">for</span> fan control</span><br><span class="line"><span class="keyword">switch</span>.fan27.enable                            <span class="literal">true</span>             # Enable <span class="keyword">this</span> <span class="keyword">module</span></span><br><span class="line"><span class="keyword">switch</span>.fan27.input_on_command                  M276             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> on</span><br><span class="line"><span class="keyword">switch</span>.fan27.input_off_command                 M277             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> off</span><br><span class="line"><span class="keyword">switch</span>.fan27.output_pin                        <span class="number">2.7</span>              # Pin <span class="keyword">this</span> <span class="keyword">module</span> controls</span><br><span class="line"><span class="keyword">switch</span>.fan27.output_type                       pwm              # PWM output settable <span class="keyword">with</span> S parameter <span class="keyword">in</span> the input_on_comand</span><br><span class="line">#<span class="keyword">switch</span>.fan27.max_pwm                          <span class="number">255</span>              # Set max pwm <span class="keyword">for</span> the pin <span class="keyword">default</span> <span class="keyword">is</span> <span class="number">255</span></span><br><span class="line"></span><br><span class="line"># Switch <span class="keyword">module</span> <span class="keyword">for</span> fan control</span><br><span class="line"><span class="keyword">switch</span>.fan122.enable                            <span class="literal">true</span>             # Enable <span class="keyword">this</span> <span class="keyword">module</span></span><br><span class="line"><span class="keyword">switch</span>.fan122.input_on_command                  M226             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> on</span><br><span class="line"><span class="keyword">switch</span>.fan122.input_off_command                 M227             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> off</span><br><span class="line"><span class="keyword">switch</span>.fan122.output_pin                        <span class="number">1.22</span>              # Pin <span class="keyword">this</span> <span class="keyword">module</span> controls</span><br><span class="line"><span class="keyword">switch</span>.fan122.output_type                       pwm              # PWM output settable <span class="keyword">with</span> S parameter <span class="keyword">in</span> the input_on_comand</span><br><span class="line">#<span class="keyword">switch</span>.fan122.max_pwm                          <span class="number">255</span>              # Set max pwm <span class="keyword">for</span> the pin <span class="keyword">default</span> <span class="keyword">is</span> <span class="number">255</span></span><br><span class="line"></span><br><span class="line"># Switch <span class="keyword">module</span> <span class="keyword">for</span> fan control</span><br><span class="line"><span class="keyword">switch</span>.fan123.enable                            <span class="literal">true</span>             # Enable <span class="keyword">this</span> <span class="keyword">module</span></span><br><span class="line"><span class="keyword">switch</span>.fan123.input_on_command                  M236             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> on</span><br><span class="line"><span class="keyword">switch</span>.fan123.input_off_command                 M237             # Command that will turn <span class="keyword">this</span> <span class="keyword">switch</span> off</span><br><span class="line"><span class="keyword">switch</span>.fan123.output_pin                        <span class="number">1.23</span>              # Pin <span class="keyword">this</span> <span class="keyword">module</span> controls</span><br><span class="line"><span class="keyword">switch</span>.fan123.output_type                       pwm              # PWM output settable <span class="keyword">with</span> S parameter <span class="keyword">in</span> the input_on_comand</span><br><span class="line">#<span class="keyword">switch</span>.fan123.max_pwm                          <span class="number">255</span>              # Set max pwm <span class="keyword">for</span> the pin <span class="keyword">default</span> <span class="keyword">is</span> <span class="number">255</span></span><br></pre></td></tr></table></figure><p>使用M226 M236 M246 M256 M266 M276M226 S100 M236 S100 M246 S100 M256 S100 M266 S100 M276 S100M227 M237 M247 M257 M267 M277测试六个PWM通道PS：附加S参数可调制脉宽，例如M226 S120</p><p>注意：大部分TO-220 MOSFET 的衬底与D极相通，即<span style="color:red;">TO-220封装的铜底散热片带VBB的电压</span></p><h3 id="大功率mixed-mosfet无法使能"><a class="markdownIt-Anchor" href="#大功率mixed-mosfet无法使能"></a> 大功率Mixed Mosfet无法使能</h3><p>该管由P1_23通过TC4427栅极驱动器控制，但由于TC4427的12VREG电压来自78L12的VOUT，而78L12的VIIN从MOSFET_DRIVE电源取得(大功率MOS管的外接电源)，如果MOSFET_DRIVE无供电，那么大功率Mixed Mosfet就无法使能，使能的方式有两种，一种是通过插拔式连接器取电，另外一种是通过Jumper从VBB取电</p><table><thead><tr><th>SCH</th><th>MOSFET_DRIVE电源轨</th><th>78L12的VOUT</th></tr></thead><tbody><tr><td><img src="/6722c02f/%E5%A4%A7%E5%8A%9F%E7%8E%87MixedMosfet(1).png" alt="20201014120733"></td><td><img src="/6722c02f/%E5%A4%A7%E5%8A%9F%E7%8E%87MixedMosfet(2).png" alt="20201014120949"></td><td><img src="/6722c02f/%E5%A4%A7%E5%8A%9F%E7%8E%87MixedMosfet(3).png" alt="20201014121031"></td></tr></tbody></table><h3 id="10x10冰沙缩小了这么多功率部分铜箔会不会太窄"><a class="markdownIt-Anchor" href="#10x10冰沙缩小了这么多功率部分铜箔会不会太窄"></a> 10x10冰沙缩小了这么多，功率部分铜箔会不会太窄？</h3><p>&quot;Never use the big MOSFETS for more than 12.5A ( and monitor connector and MOSFET temperatures at that current use, too much heating can be a sign of a bad wire connection ), and the small MOSFETS should never be used for more than 3A&quot;<a href="http://smoothieware.org/mosfets" target="_blank" rel="noopener">官方原档：mosfets</a></p><p>使用Kicad自带的PCB Calculator计算，该计算器相比Saturn，计算内层载流明小1/3，外层大1/3，就很离谱，所以我优先用Kicad计算，两种计算器的对比如下：</p><table><thead><tr><th>Kicad</th><th>Saturn</th></tr></thead><tbody><tr><td><img src="/6722c02f/%E8%BD%BD%E6%B5%81%E8%AE%A1%E7%AE%97%E5%99%A8(2).png" alt="载流计算器(2)"></td><td><img src="/6722c02f/%E8%BD%BD%E6%B5%81%E8%AE%A1%E7%AE%97%E5%99%A8.png" alt="载流计算器"></td></tr><tr><td>内层0.5oz 100mil 10温升 1.4A</td><td>内层0.5oz 100mil 10温升 2.1A</td></tr><tr><td><img src="/6722c02f/%E8%BD%BD%E6%B5%81%E8%AE%A1%E7%AE%97%E5%99%A8(3).png" alt="载流计算器(3)"></td><td><img src="/6722c02f/%E8%BD%BD%E6%B5%81%E8%AE%A1%E7%AE%97%E5%99%A8.png" alt="载流计算器"></td></tr><tr><td>外层1oz 100mil 10温升 4.6A</td><td>外层1oz 100mil 10温升 3.3A</td></tr></tbody></table><p>若内层的结果过小的影响实在太离谱（说的就是A5984 VBB的最窄处，我明明走的比原版还宽100mil），就用Saturn再计算一遍😅</p><p>各个流径最窄铜箔宽度（单位：mil）如下表，”X“表示没有，&quot;N/A&quot;表示该段流径不经过连接器，若在某温升下达不到原版冰沙给出的标称值，我会使用<span style="color:red;">红色字体</span>警示取主要路径最窄的走线宽度，电流为各层单独计算载流之和，若某一层流经多条铜箔合并宽度的计算结果偏小，则分条计算，结果如下</p><table><thead><tr><th>铜箔流径</th><th>Top</th><th>L1<br>(0.5oz)</th><th>L2<br>(0.5oz)</th><th>Bottom</th><th>温升10℃载流(A)</th><th>温升20℃载流(A)</th><th>原版冰沙板<br>标称值(A)</th><th>连接器额定电流(A)</th></tr></thead><tbody><tr><td>【VBB】</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>VBB_IN连接器<br>to 电源MOS-P的D极</td><td>137</td><td>X</td><td>X</td><td>137</td><td><span style="color:red;">11.67</span></td><td>15.83</td><td>15</td><td>15</td></tr><tr><td>VBB_IN连接器<br>的GND</td><td>104+64=168</td><td>40+60+110+380</td><td>40+60</td><td>330+140</td><td>26</td><td>（不用算肯定有多的）</td><td>15</td><td></td></tr><tr><td>【小功率MOS】</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>小功率MOS电源IN<br>to小功率MOS连接器</td><td>X</td><td>93</td><td>93+57=150</td><td>57+16=73</td><td>6.91</td><td>9.38</td><td>6</td><td>8</td></tr><tr><td>小功率MOS连接器<br>to 小功率MOS的D极(单路)</td><td>110</td><td>X</td><td>X</td><td>X</td><td>4.97</td><td>6.75</td><td>3</td><td>8</td></tr><tr><td>小功率MOS的S极<br>to小功率MOS电源IN的GND</td><td>110</td><td>144</td><td>X</td><td>X</td><td>6.80</td><td>9.23</td><td>6</td><td>8</td></tr><tr><td>【大功率MOS】</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>大功率MOS电源IN<br>to大功率MOS连接器</td><td>X</td><td>X</td><td>160</td><td>148</td><td><span style="color:red;">8.14</span></td><td><span style="color:red;">11.05</span></td><td>12.5</td><td>15</td></tr><tr><td>大功率MOS连接器<br>to 大功率MOS的D极(单路)</td><td>102(最窄)<br>190(最宽)</td><td>105(最窄)<br>190(最宽)</td><td>X</td><td>X</td><td><span style="color:red;">6.16</span>(最窄)<br>11.97(最宽)<br>10.08(原版最窄)</td><td><span style="color:red;">8.36</span>(最窄)<br>12.72(最宽)<br>14.11(原版最窄)</td><td>12.5</td><td>15</td></tr><tr><td>大功率MOS的S极<br>大功率MOS电源IN的GND</td><td>80</td><td>80</td><td>80</td><td>80</td><td><span style="color:red;">10.29</span></td><td>13.96</td><td>12.5</td><td>15</td></tr><tr><td>【Jumper】</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>VBB连接器<br>to MOS管jumper(x3)</td><td>X</td><td>X</td><td>137</td><td>137</td><td>7.60</td><td>11.67</td><td>2x3=6.0<br>jumper(x3)</td><td>2*3=6.0</td></tr><tr><td>【混合大功率Fet】</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>混合大功率Fet 连接器to 电源MOS-P的S极</td><td>155</td><td>X</td><td>X</td><td>195</td><td><span style="color:red;">13.91</span></td><td>18.87</td><td>12.5</td><td>N/A</td></tr><tr><td>混合大功率Fet D极to 混合大功率Fet 连接器</td><td>108(最窄)<br>295(最宽)</td><td>X</td><td>X</td><td>X</td><td><span style="color:red;">4.91</span>(最窄)<br>10.17(最宽)</td><td><span style="color:red;">6.66</span>(最窄)<br>13.80(最宽)</td><td>12.5</td><td>15</td></tr><tr><td>混合大功率Fet S极to VBB连接器的GND<br><span style="color:blue;">第一种取电方式</span></td><td>X</td><td>60+40+56=156(最窄)</td><td>60+40+56=156(最窄)</td><td>150</td><td><span style="color:red;">10.11</span></td><td>13.71</td><td>12.5</td><td>15</td></tr><tr><td>混合大功率Fet S极to 大功率MOS电源IN的GND<br><span style="color:blue;">第二种取电方式</span></td><td>80</td><td>80</td><td>80</td><td>80</td><td><span style="color:red;">10.29</span></td><td>13.96</td><td>12.5</td><td>15</td></tr><tr><td>【混合小功率Fet】</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>混合小功率Fet to 电源MOS-P的S极</td><td>X</td><td>X</td><td>X</td><td>195</td><td>7.53</td><td>10.22</td><td>3</td><td>N/A</td></tr><tr><td>混合小功率Fet D极to 混合小功率Fet 连接器</td><td>110</td><td>X</td><td>X</td><td>X</td><td>4.97</td><td>6.75</td><td>3</td><td>8</td></tr><tr><td>混合小功率Fet S极to VBB连接器的GND</td><td>X</td><td>60+40+56=156(最窄)</td><td>62+40+56=158(最窄)</td><td>150</td><td>10.12</td><td>13.73</td><td>3</td><td>15</td></tr><tr><td>【A5984】</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>VBB<br>to 5路A5984</td><td>X</td><td>X</td><td>142+23+170+73=408<br>(原版最窄处是150+150=300)</td><td>X</td><td>Kicad计算<br><span style="color:red;">5.48</span><br>Saturn计算：<span style="color:red;">8.42</span></td><td>Kicad计算<br><span style="color:red;">7.43</span><br>Saturn计算：11.42</td><td>0.7x5=3.5<br>1.5x5=7.5<br>2.0x5=10</td><td>4(1pin)</td></tr><tr><td>5路A5984 to VBB连接器GND</td><td>60</td><td>360</td><td>X</td><td>325</td><td>17.67</td><td>（不用算肯定有多的）</td><td>10</td><td>15</td></tr><tr><td>A5984<br>步进电机母座pin</td><td>17.7(最窄)<br>90(最宽)</td><td>X</td><td>X</td><td>X</td><td><span style="color:red;">1.32</span>(最窄)<br>4.30(最宽)</td><td><span style="color:red;">1.79</span>(最窄)<br>5.83(最宽)</td><td>2A(1pin)</td><td>4(1pin)</td></tr></tbody></table><p>由上表，下表是建议使用的电流大小，四舍五入，注意共用同一连接器的多条电源流径的载流不要超过连接器在某温升下的最大使用电流</p><table><thead><tr><th></th><th>温升10℃(A)</th><th>温升20℃(A)</th><th>10温升下是否达到官方标准</th><th>20温升下是否达到官方标准</th></tr></thead><tbody><tr><td>VBB连接器取电</td><td>11.7</td><td>15.0</td><td><span style="color:red;">No</span></td><td><span style="color:green;">Yes</span></td></tr><tr><td>混合大功率FET从VBB取电+VBB连接器GND回流</td><td>10.1</td><td>13.7</td><td><span style="color:red;">No</span></td><td><span style="color:green;">Yes</span></td></tr><tr><td>混合大功率FET从VBB取电+大功率FET连接器的GND回流<span style="color:blue;">(不推荐)</span></td><td>10.3</td><td>14.0</td><td><span style="color:red;">No</span></td><td><span style="color:green;">Yes</span></td></tr><tr><td>2x大功率FET合计从VBB取电++VBB连接器GND回流<br>（MOS管jumperx2）</td><td>4</td><td>6</td><td><span style="color:green;">Yes</span></td><td><span style="color:green;">Yes</span></td></tr><tr><td>2x小功率FET合计从VBB取电++VBB连接器GND回流<br>（MOS管jumperx1）</td><td>2</td><td>3</td><td><span style="color:green;">Yes</span></td><td><span style="color:green;">Yes</span></td></tr><tr><td>2x大功率FET合计从大功率FET连接器取电</td><td>8.1</td><td>11.1</td><td><span style="color:red;">No</span></td><td><span style="color:red;">No</span></td></tr><tr><td>2x小功率FET合计从小功率FET连接器取电</td><td>6.9</td><td>9.4</td><td><span style="color:green;">Yes</span></td><td><span style="color:green;">Yes</span></td></tr><tr><td>A5984单路</td><td>1.3</td><td>1.8</td><td>N/A</td><td>N/A</td></tr><tr><td>A5984x5路总和<span style="color:blue;">（取Saturn计算结果）</span></td><td>8.4</td><td>10</td><td>N/A</td><td>N/A</td></tr><tr><td>A5984x5路时平均单路<span style="color:blue;">（取Saturn计算结果）</span></td><td>1.7</td><td>2</td><td>N/A</td><td>N/A</td></tr></tbody></table><p>插拔式接线端子的取电额定电压是12~24V</p><ul><li>有条件十分建议在A5984表面贴装散热片，并用风扇对整个主板散热</li></ul><h3 id="小功率mos管的选择"><a class="markdownIt-Anchor" href="#小功率mos管的选择"></a> 小功率MOS管的选择</h3><p>冰沙主板三个小功率MOS管是SOT223封装的，此封装的最大导通电压一般分为4.0V和2.0V，例如IR<span style="color:red;">L</span>024NTRPBF的VGS(th)MAX为4.0V，而冰沙板的LPC1769的GPIO的高电平只有3.3V，会无法驱动或驱动不佳，所以我们需要选择例如IR<span style="color:red;">LL</span>024NTRPBF的VGS(th)MAX为2.0V的MOS管</p><table><thead><tr><th>品牌</th><th>型号</th><th>VDS</th><th>VGS(th)MAX</th><th>RDS(on)</th><th>ID/耗散功率</th><th>Rth(j-a)</th><th>Rth(j-sp)</th><th>ΔTj</th></tr></thead><tbody><tr><td>安世</td><td>BUK9832-55A</td><td>55V</td><td>2.0V</td><td>VGS =3.2 V; 35mΩ</td><td>4.78A/0.8W<br>5.34A/1.0W</td><td>70</td><td>15</td><td>56<br>70</td></tr><tr><td>英飞凌</td><td>IRLL024NTRPBF</td><td>55V</td><td>2.0V</td><td>约115mΩ<br>（VGS =4.0V; 100mΩ）</td><td>2.63A/0.8W<br>2.95A/1W</td><td>90~120</td><td>50~60</td><td>84<br>105</td></tr></tbody></table><p>如果你的小功率MOS管愿意使用比如BUK9832-55A，则5A电流可正常工作，其在G极3.2V时RDS<sub>(on)</sub>仅35mΩ，若使用一般的低  VGS(th)例如IRLL024NTRPBF，那么工作电流就不要官方的超过3A了</p><h3 id="增加大功率mosfet过孔的载流值"><a class="markdownIt-Anchor" href="#增加大功率mosfet过孔的载流值"></a> 增加大功率MOSFET过孔的载流值</h3><p>由于大功率MOS的每个pin仅有一个40mil（1.016mm）的过孔，温升10摄氏度在两层板之间的载流能力仅2.5A(过孔壁厚0.7mil)、3.1A（过孔壁厚1mil），因此要达到上文的单管载流6.5A~9A，我们在焊接时需要一些技巧</p><p>根据 <a href="https://www.bilibili.com/video/BV1uz4y1o7Pm" target="_blank" rel="noopener">EEVBlog #543 - PCB过孔载流能力调查</a> 提到的 <a href="https://www.st.com/resource/en/technical_note/dm00238320-mounting-instructions-for-thd-through-hole-device-packages-stmicroelectronics.pdf" target="_blank" rel="noopener">TN1225：THD（通孔设备）封装的安装说明：P20</a></p><table><thead><tr><th>直插焊盘填锡-压降测试</th><th>直插焊盘填锡-剖面</th></tr></thead><tbody><tr><td><img src="/6722c02f/EEV523(2).png" alt="EEV523(2)"></td><td><img src="/6722c02f/EEV523(1).png" alt="EEV523(1)"></td></tr></tbody></table><p>在穿过过孔的铜导线两侧焊盘与孔内加锡，可以显著增加载流能力，因此，在未焊接5.08插拔式接线端子前，可以先在正面的TO-220焊盘做这样处理</p><p>若不这样处理，至少也要保证TO220的倒角与正面焊盘是紧密接触状态，如图2，3</p><table><thead><tr><th>未紧密接触</th><th>紧密接触</th><th>紧密接触-剖面</th></tr></thead><tbody><tr><td><img src="/6722c02f/TO-220-PASTE(1).png" alt="TO-220-PASTE(1)"></td><td><img src="/6722c02f/TO-220-PASTE(3).png" alt="TO-220-PASTE(3)"></td><td><img src="/6722c02f/TO-220-PASTE(2).png" alt="TO-220-PASTE(2)"></td></tr></tbody></table><p><a href="https://www.mr-wu.cn/saturn-pcb-toolkit-install/" target="_blank" rel="noopener">PCB参数计算神器-Saturn PCB Design</a></p><p><a href="https://www.eet-china.com/mp/a9746.html" target="_blank" rel="noopener">破坏性实验：PCB走线与过孔的电流承载能力到底有多强？</a></p><p>使用IRLL024NTRPBF时，建议最大单管电流小于2.5A</p><h3 id="大功率mos管并联二极管"><a class="markdownIt-Anchor" href="#大功率mos管并联二极管"></a> 大功率MOS管并联二极管</h3><p>感性负载下例如电机，需要在电机并联瓷片104电容，或<span style="color:red;">反并联</span>肖特基或开关二极管（1N4148）防止电机的尖峰电压击穿MOS管，小功率MOS管PCB上本身就并联了肖特基二极管，为了保险起见我们可以再<span style="color:red;">反并联</span>一个，大功率MOS管可以<span style="color:red;">反并联</span>两个</p><h3 id="pid温控"><a class="markdownIt-Anchor" href="#pid温控"></a> PID温控</h3><p><a href="http://smoothieware.org/temperaturecontrol" target="_blank" rel="noopener">官方文档：温度控制</a></p><p>待测试，忘带发热芯了</p><h2 id="限位开关"><a class="markdownIt-Anchor" href="#限位开关"></a> 限位开关</h2><p><a href="http://smoothieware.org/endstops" target="_blank" rel="noopener">官方文档：限位开关</a></p><p>使用限位开关时，要将冰沙10x10 PCB背面的SJ2二选一跳线焊盘焊接跳线到5V</p><p>冰沙主板有6通道限位开关，使用<code>M119</code> 返回如下,如触发则为1</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">min_x:<span class="number">0</span> min_y:<span class="number">0</span> min_z:<span class="number">0</span> max_x:<span class="number">0</span> max_y:<span class="number">0</span> max_z:<span class="number">0</span></span><br><span class="line">ok</span><br></pre></td></tr></table></figure><h2 id="屏幕面板"><a class="markdownIt-Anchor" href="#屏幕面板"></a> 屏幕面板</h2><p><a href="http://smoothieware.org/panel" target="_blank" rel="noopener">官方文档：面板</a></p><p>完整的面板至少包括屏幕和编码器，指示灯，蜂鸣器，按钮，sd卡，esp8266(跑esp3D)为可选</p><p><a href="http://smoothieware.org/panel" target="_blank" rel="noopener">官方文档：Using Panel controllers with Smoothieboard</a></p><p><a href="http://smoothieware.org/panel-options" target="_blank" rel="noopener">官方文档：panel-options</a></p><p>Supported SPI chips:- ST7565, ST7920, SSD1306</p><p>博主使用SSD1306+编码器测试：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#对于5驱动程序冰沙板<span class="selector-tag">NOT</span> <span class="selector-tag">Azteeg</span> <span class="selector-tag">X5</span></span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.enable</span> <span class="selector-tag">true</span> #设置为<span class="selector-tag">true</span>以启用面板代码</span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.lcd</span> <span class="selector-tag">ssd1306_oled</span> #设置面板类型</span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.spi_channel</span> 0#设置<span class="selector-tag">spi</span>通道使用<span class="selector-tag">P0_18</span>，<span class="selector-tag">P0_15</span> <span class="selector-tag">MOSI</span>，<span class="selector-tag">SCLK</span></span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.spi_cs_pin</span> 0<span class="selector-class">.16</span>#设置<span class="selector-tag">spi</span>芯片选择</span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.encoder_a_pin</span> 3<span class="selector-class">.25</span>!^#编码器引脚</span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.encoder_b_pin</span> 3<span class="selector-class">.26</span>!^#编码器引脚</span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.click_button_pin</span> 1<span class="selector-class">.30</span>!^#单击按钮</span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.a0_pin</span> 2<span class="selector-class">.11</span><span class="selector-id">#ssd1306</span>需要一个<span class="selector-tag">a0</span></span><br><span class="line"><span class="selector-id">#panel</span><span class="selector-class">.contrast</span> 8#一些面板需要对比度设置，这是针对<span class="selector-tag">viki2</span>的</span><br><span class="line"><span class="selector-id">#panel</span><span class="selector-class">.encoder_resolution</span> 4#移动1个项目的点击次数</span><br><span class="line"><span class="selector-id">#panel</span><span class="selector-class">.buzz_pin</span> 1<span class="selector-class">.31</span>#蜂鸣器的引脚（同时使用红色<span class="selector-tag">LED</span>或蜂鸣器）</span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.red_led_pin</span> 1<span class="selector-class">.31</span>#在<span class="selector-tag">viki2</span>上红色指示灯的引脚</span><br><span class="line"><span class="selector-id">#panel</span><span class="selector-class">.blue_led_pin</span> 1<span class="selector-class">.23</span><span class="selector-id">#viki2</span>上的蓝色<span class="selector-tag">LED</span>引脚（5个驱动程序不能使用）</span><br><span class="line"><span class="selector-id">#panel</span><span class="selector-class">.back_button_pin</span> 1<span class="selector-class">.30</span>!^#（可选）使用红色按钮作为后退按钮（5驱动程序不可用）</span><br><span class="line">#在<span class="selector-tag">viki2</span>上设置外部<span class="selector-tag">SD</span>卡</span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.external_sd</span> <span class="selector-tag">true</span>#如果面板上有外部<span class="selector-tag">sdcard</span>，则设置为<span class="selector-tag">true</span></span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.external_sd</span><span class="selector-class">.spi_channel</span> 0#设置<span class="selector-tag">sdcard</span>所在的<span class="selector-tag">spi</span>通道</span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.external_sd</span><span class="selector-class">.spi_cs_pin</span> 0<span class="selector-class">.27</span>#设置<span class="selector-tag">SD</span>卡的<span class="selector-tag">SPI</span>芯片选择</span><br><span class="line"><span class="selector-tag">panel</span><span class="selector-class">.external_sd</span><span class="selector-class">.sdcd_pin</span> 0<span class="selector-class">.28</span>!^<span class="selector-id">#sd</span>检测信号（如果没有检测到<span class="selector-tag">sdcard</span>则设置为<span class="selector-tag">nc</span>）</span><br></pre></td></tr></table></figure><table><thead><tr><th>welcome</th><th>home page</th><th>menu</th><th>running gcode</th></tr></thead><tbody><tr><td><img src="/6722c02f/panel-1.png" alt="img"></td><td><img src="/6722c02f/panel-2.png" alt="img"></td><td><img src="/6722c02f/panel-3.png" alt="img"></td><td><img src="/6722c02f/panel-4.png" alt="img"></td></tr></tbody></table><h2 id="步进电机"><a class="markdownIt-Anchor" href="#步进电机"></a> 步进电机</h2><p><a href="https://www.jianshu.com/p/a64f98afb965" target="_blank" rel="noopener">小技巧：步进电机如何确定相线?</a></p><h3 id="我需要多少轴"><a class="markdownIt-Anchor" href="#我需要多少轴"></a> 我需要多少轴？</h3><ul><li>4~5个轴用于3D打印(单，双挤出机)，不支持双独立喷头的BC3D Sigma(6轴)</li><li>3个用于Z轴激光切割，2个用于简单激光切割</li><li>3 for CNC milling</li></ul><h3 id="重要文档"><a class="markdownIt-Anchor" href="#重要文档"></a> 重要文档</h3><p>此节的几乎所有内容都从下面第一个文档<strong>机翻整理</strong>：（不要小瞧机翻，Kora!）</p><p><a href="https://duet3d.dozuki.com/Wiki/Choosing_and_connecting_stepper_motors" target="_blank" rel="noopener">Duet3D文档：选择和连接步进电机（十分深入的文章，几乎回答了步进电机选型，参数计算的所有问题）</a></p><p><a href="http://smoothieware.org/motion-control" target="_blank" rel="noopener">Smoothie官方文档：运动控制</a></p><table><thead><tr><th>电路</th><th><a href="http://smoothieware.org/stepper-motors" target="_blank" rel="noopener">官方文档：Stepper_Motors</a>的接线图如下，仅第一种正确：</th></tr></thead><tbody><tr><td><img src="/6722c02f/smoothieboard-10x10-%E6%AD%A5%E8%BF%9B%E9%A9%B1%E5%8A%A8%E5%99%A8.jpg" alt="smoothieboard-10x10-步进驱动器"></td><td><img src="/6722c02f/Step-motor-connect.png" alt="Step-motor-connect"></td></tr></tbody></table><p>注意，A/B相用颜色标出，仅第一种接法正确，后两种错误的接法测试时步进会震动或抖动，且无法锁相</p><h3 id="步进电机怎么选择"><a class="markdownIt-Anchor" href="#步进电机怎么选择"></a> 步进电机怎么选择?</h3><p>对于冰沙主板，由于步进驱动芯片A5984的最大驱动能力为2A/40V，最好使用42步进电机，57步进电机就不建议了，42步进电机指的是步进电机的长宽都是42mm，但是42步进机身会有很多种长度，例如34mm，40mm，48mm，60mm，长度越长，扭矩越大，但相电阻，相电流（额定电流），相电感 似乎与长度没有多大的关系，这个我也不太懂</p><p>于是先请教<a href="https://m.tb.cn/h.4bfKvhd?sm=be5b2c" target="_blank" rel="noopener">乐清步进电机自动化店</a>，看看厂家怎么说：</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><img src="/6722c02f/%E4%B9%90%E6%B8%85%E7%94%B5%E6%9C%BA%E5%8E%82%E5%92%A8%E8%AF%A2(1).png" alt="乐清电机厂咨询(1)"></td><td><img src="/6722c02f/%E4%B9%90%E6%B8%85%E7%94%B5%E6%9C%BA%E5%8E%82%E5%92%A8%E8%AF%A2(2).png" alt="乐清电机厂咨询(2)"></td><td><img src="/6722c02f/%E4%B9%90%E6%B8%85%E7%94%B5%E6%9C%BA%E5%8E%82%E5%92%A8%E8%AF%A2(3).png" alt="乐清电机厂咨询(3)"></td></tr></tbody></table><p>聊天中的42 60mm长电机参数如下：</p><p><img src="/6722c02f/%E4%B9%90%E6%B8%85%E7%94%B5%E6%9C%BA%E5%8E%82%E5%92%A8%E8%AF%A2(4).png" alt="img"></p><p>常见的42 40mm长电机参数如下：</p><p><img src="/6722c02f/%E4%B9%90%E6%B8%85%E7%94%B5%E6%9C%BA%E5%8E%82%E5%92%A8%E8%AF%A2(5).png" alt="img"></p><p>电机的相电阻越小，相电流就越大（例如两相四线，有两相，一个相线的电流就是额定电流，一个相线的电阻就是相电阻），所以大家在选择步进电机的时候，选择额定电流接近2A步进电机的可以最大程度地体现扭矩，例如40mm长的电机就选1.7A的，60mm长的电机就选1.65A的</p><p>通常，电动机越长，在额定电流下的保持转矩就越大。较长的步进电机具有较大的转子惯性</p><p>以上是淘宝厂家的解释，下面看看写Duet3D文档的大牛们怎么说：</p><h3 id="额定电流"><a class="markdownIt-Anchor" href="#额定电流"></a> 额定电流</h3><p>建议使每个步进电机在其额定电流的50％到85％之间运行</p><p>额定电流通常指同时通过两个绕组的最大电流，不是用通过一个绕组的最大电流（这在使用微步进时确实很重要）来定义额定电流，即使该电流会比前者更高一些。那我们用前者定义额定电流会不会太小？不会，因为即使以额定电流驱动一个绕组，电动机也会变得非常热。</p><p>因此，通常的做法是将电动机电流设置为<strong>不超过额定电流的85％</strong>。要在不使电动机过热的情况下获得最大扭矩，建议应选择额定电流**不超过步进驱动器最大电流高25％**的电动机。这给出：</p><ul><li>Duet 0.6和Duet 0.8.5（建议最大电机电流1.5A RMS）=&gt;步进电机额定电流&lt;= 1.9A</li><li>Duet 2 WiFi和Duet 2 Ethernet（最大电机电流2.4A RMS）=&gt;步进电机额定电流&lt;= 3.0A</li><li>Duet 2 Maestro（建议的最大电动机电流1.4A RMS，风扇散热良好）=&gt;步进电动机的额定电流&lt;= 1.7A。但是，如果使用额定电流较低（例如1.0至1.2A）和24V电源的电动机，则驱动器将以较低的温度运行。</li><li>Duet 3主板6HC和扩展板3HC（建议的最大电动机电流4.45A RMS）=&gt;步进电动机的额定电流&lt;= 5.5A</li><li>Duet 3 Tooboard（建议最大电动机电流1.4A RMS）=&gt;步进电动机额定电流&lt;= 1.75A</li></ul><p>可见，如果按Duet3D的文档选电机，为了压榨A5984的性能（各位散热一定要跟上啊），居然可以选电流比驱动器还大25%，也就是2*1.25=2.5A的步进电机，以发挥驱动器最大的性能的同时，又不会让电机过热，还能获得最大扭矩，所以，如果预算充足，对于上表60mm长的42步进电机，可以选择 2.3A驱动电流的，holyshit !</p><h3 id="步进电机的速度与力矩的关系"><a class="markdownIt-Anchor" href="#步进电机的速度与力矩的关系"></a> 步进电机的速度与力矩的关系</h3><p>下方表格测试数据来自<a href="ttps://sitaipu.taobao.com/?spm=2013.1.0.0.541d79e1QijAc5" target="_blank" rel="noopener">东莞市斯泰普机电科技有限公司</a></p><table><thead><tr><th>20步进 机身长40mm</th><th>42步进 机身长40mm</th><th>57步进 机身长76mm</th></tr></thead><tbody><tr><td><img src="/6722c02f/2040%E6%AD%A5%E8%BF%9B%E7%94%B5%E6%9C%BA%E5%8A%9B%E7%9F%A9%E4%B8%8E%E8%BD%AC%E9%80%9F%E6%9B%B2%E7%BA%BF%E5%9B%BE-%E6%96%AF%E6%B3%B0%E6%99%AE%E6%9C%BA%E7%94%B5%E7%A7%91%E6%8A%80(2).png" alt="2040步进电机力矩与转速曲线图-斯泰普机电科技(2)"></td><td><img src="/6722c02f/4240%E6%AD%A5%E8%BF%9B%E7%94%B5%E6%9C%BA%E5%8A%9B%E7%9F%A9%E4%B8%8E%E8%BD%AC%E9%80%9F%E6%9B%B2%E7%BA%BF%E5%9B%BE-%E6%96%AF%E6%B3%B0%E6%99%AE%E6%9C%BA%E7%94%B5%E7%A7%91%E6%8A%80(1).png" alt="4240步进电机力矩与转速曲线图-斯泰普机电科技(1)"></td><td><img src="/6722c02f/5776%E6%AD%A5%E8%BF%9B%E7%94%B5%E6%9C%BA%E5%8A%9B%E7%9F%A9%E4%B8%8E%E8%BD%AC%E9%80%9F%E6%9B%B2%E7%BA%BF%E5%9B%BE-%E6%96%AF%E6%B3%B0%E6%99%AE%E6%9C%BA%E7%94%B5%E7%A7%91%E6%8A%80(3).png" alt="5776步进电机力矩与转速曲线图-斯泰普机电科技(3)"></td></tr></tbody></table><p>步进电机的速度增加，力矩会迅速降低；转速到1000RPM/min已经相当高速，再提速容易堵转；（步进电机适合低速场合，需高速应用，建议上直流伺服电机）</p><h3 id="保持扭矩保持转矩"><a class="markdownIt-Anchor" href="#保持扭矩保持转矩"></a> 保持扭矩（保持转矩）</h3><p>上面的电机参数表中，40mm**长的42步进的扭矩一般为 $$0.45N\cdot m$$，这个参数受什么影响呢？</p><p>这是电动机在开始跳跃步骤之前，两个绕组都以全电流通电时可以提供的最大转矩。在额定电流下通电的一个绕组的保持转矩约为其的1 / sqrt（2）倍。转矩与电流成正比（在极低电流下除外），因此，例如，如果将驱动器设置为电动机额定电流的85％，则最大转矩将为指定保持转矩的85％* 0.707 = 60％。</p><h3 id="转矩如何产生"><a class="markdownIt-Anchor" href="#转矩如何产生"></a> 转矩如何产生?</h3><p>当转子角度与对应于其绕组电流的理想角度不同时，就会产生转矩。当步进电机（转子）做加速运动时，它必须产生转矩（以获得切向加速度）以克服其自身的转子惯性和所驱动负载的质量。为了产生该转矩，转子角必须<strong>滞后</strong>于理想角。反过来，负载将<strong>滞后</strong>于固件命令的位置。</p><h3 id="微步"><a class="markdownIt-Anchor" href="#微步"></a> 微步</h3><p>微步会降低扭矩。这的真正含义是，假定滞后角等于一个微步的角度（因为您希望位置精确到一个微步之内）时，较高的微步距意味着较小的滞后角，因此扭矩较小。随着微步距的增加，单位滞后角的扭矩（这才是真正重要的）不会降低。换句话说，向电动机发送一个1/16微步会产生与发送两个1/32微步或四个1/64微步完全相同的相电流（并因此产生相同的力），依此类推。</p><h3 id="丢步"><a class="markdownIt-Anchor" href="#丢步"></a> <a href="https://blog.csdn.net/mao_hui_fei/article/details/78715530" target="_blank" rel="noopener">丢步</a></h3><p>在启动或加速时如果步进脉冲变化太快，转子由于惯性而跟随不上电信号的变化，会产生堵转或失步，在停止或减速时由于同样原因则可能产生超步。为防止堵转、失步和超步，需要对步进电机进行加速度控制。</p><h3 id="步距角"><a class="markdownIt-Anchor" href="#步距角"></a> 步距角</h3><p>共有两种常见的步进角：每整步0.9度和1.8度，分别对应于每转400和200步。大多数3D打印机使用1.8度/步进电机。</p><p>除了步距角明显不同之外：</p><ul><li>0.9deg电机的<strong>保持转矩</strong>比同一制造商的类似1.8deg电机的保持转矩稍低</li><li>但是，为了产生给定的扭矩，0.9deg电动机所需的滞后角略大于类似1.8deg电动机的滞后角的一半。换句话说，<strong>在较小的滞后角下，对于相同的滞后角，0.9deg电动机的扭矩几乎是1.8deg电动机的两倍。</strong></li><li>在给定的转速下，0.9度的电机产生的感应反电动势是1.8度的电机的两倍。因此，通常需要使用24V电源来实现0.9deg电机的高速运转。</li><li>0.9度电机需要以1.8度电机两倍的速度将步进脉冲传递到驱动器。如果您使用高微步进，那么速度可能会受到电子设备产生步进脉冲的速率的限制。Duet 2 WiFi / Ethernet上TMC2660驱动程序以16倍微步进的<strong>插值模式</strong>可以用来解决此问题。Duet 2 Maestro和Duet 3上的驱动程序可以在任何微步设置下进行插值。</li></ul><h3 id="电感"><a class="markdownIt-Anchor" href="#电感"></a> 电感</h3><p>电机的电感会影响步进电机驱动器在转矩下降之前可以驱动电机的速度。如果由于旋转而暂时忽略<strong>反电动势</strong>（请参阅下文），并且电动机的额定电压远小于驱动器电源电压，那么<strong>转矩下降之前的 最大转速/秒</strong>(r/s)为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>每秒转速</mtext><mo>=</mo><mfrac><mrow><mn>2</mn><mo>⋅</mo><mtext>电源电压</mtext></mrow><mrow><mtext>每转步数</mtext><mo>⋅</mo><mi>π</mi><mo>⋅</mo><mtext>电感</mtext><mo>⋅</mo><mtext>电流</mtext></mrow></mfrac></mrow><annotation encoding="application/x-tex">每秒转速 =\frac{2\cdot电源电压}{每转步数\cdot\pi\cdot电感\cdot电流}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">秒</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">速</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">步</span><span class="mord cjk_fallback">数</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">感</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">流</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">源</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">压</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>如果电动机通过皮带轮驱动GT2皮带，则以mm / sec为单位的最大速度为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>速度</mtext><mo>=</mo><mfrac><mrow><mn>4</mn><mo>⋅</mo><mtext>皮带轮齿</mtext><mo>⋅</mo><mtext>电源电压</mtext></mrow><mrow><mtext>每转步数</mtext><mo>⋅</mo><mi>π</mi><mo>⋅</mo><mtext>电感</mtext><mo>⋅</mo><mtext>电流</mtext></mrow></mfrac></mrow><annotation encoding="application/x-tex">速度=\frac{4\cdot皮带轮齿\cdot电源电压}{每转步数\cdot\pi\cdot电感\cdot电流}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">步</span><span class="mord cjk_fallback">数</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">感</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">流</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord cjk_fallback">皮</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">轮</span><span class="mord cjk_fallback">齿</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">源</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">压</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>示例：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>速度</mtext><mo>=</mo><mfrac><mrow><mn>4</mn><mo>⋅</mo><mn>20</mn><mo stretchy="false">(</mo><mtext>齿</mtext><mo stretchy="false">)</mo><mo>⋅</mo><mn>12</mn><mo stretchy="false">(</mo><mi>V</mi><mo stretchy="false">)</mo></mrow><mrow><mn>200</mn><mo stretchy="false">(</mo><mtext>步</mtext><mo stretchy="false">)</mo><mo>⋅</mo><mi>π</mi><mo>⋅</mo><mn>4</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">)</mo><mo>⋅</mo><mn>1.5</mn><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mn>254.78</mn><mo stretchy="false">(</mo><mi>m</mi><mi>m</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">速度=\frac{4\cdot20(齿)\cdot12(V)}{200(步)\cdot\pi\cdot4\cdot10^{-3}(H)\cdot1.5(A)}=254.78(mm/s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mopen">(</span><span class="mord cjk_fallback">步</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">5</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mopen">(</span><span class="mord cjk_fallback">齿</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">4</span><span class="mord">.</span><span class="mord">7</span><span class="mord">8</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">m</span><span class="mord">/</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span></span></p><p>使用12V电源在1.5A下运行具有4mH电感的1.8deg / step（即200 step / rev）电动机(上表的42HB40A)，并用20齿皮带轮驱动GT2皮带：以约250mm / sec的速度将开始损失扭矩。这是纯粹的一个轴的皮带速度，在CoreXY或增量打印机上与皮带速度不同。</p><p>实际上，由于运动引起的反电动势，并且由于上述原因不允许绕组电阻，因此转矩会比这更快地下降。由于旋转，低电感电动机的反电动势也较低。</p><p>这意味着如果要实现高速，就需要低电感电动机和高电源电压。Duet 2 WiFi /以太网的最大建议电源电压为25V，Duet 2 Maestro的最大建议电源电压为28V，Duet 3的最大建议电源电压为32V。</p><h3 id="使用电桥测量步进电机的电阻和电感并计算"><a class="markdownIt-Anchor" href="#使用电桥测量步进电机的电阻和电感并计算"></a> 使用电桥测量步进电机的电阻和电感并计算</h3><p>测试的电机万用表的相直流电阻为4.9Ω，126Hz下轻轻转动轴使其稳定在一步(1.8°)内的某一处，最低电阻为4.9Ω，电感为9.8mH，与上面的电机参数表40mm长 42步进的参数呈线性关系，使用12V电源在1A下运行此具有9.8mH电感的1.8deg / step（即200 step / rev）电动机，并用20齿皮带轮驱动GT2皮带：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>速度</mtext><mo>=</mo><mfrac><mrow><mn>4</mn><mo>⋅</mo><mn>20</mn><mo stretchy="false">(</mo><mtext>齿</mtext><mo stretchy="false">)</mo><mo>⋅</mo><mn>12</mn><mo stretchy="false">(</mo><mi>V</mi><mo stretchy="false">)</mo></mrow><mrow><mn>200</mn><mo stretchy="false">(</mo><mtext>步</mtext><mo stretchy="false">)</mo><mo>⋅</mo><mi>π</mi><mo>⋅</mo><mn>9.8</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">)</mo><mo>⋅</mo><mn>1.0</mn><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mn>155.9</mn><mo stretchy="false">(</mo><mi>m</mi><mi>m</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">速度=\frac{4\cdot20(齿)\cdot12(V)}{200(步)\cdot\pi\cdot9.8\cdot10^{-3}(H)\cdot 1.0(A)}=155.9(mm/s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mopen">(</span><span class="mord cjk_fallback">步</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">9</span><span class="mord">.</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mopen">(</span><span class="mord cjk_fallback">齿</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord">5</span><span class="mord">.</span><span class="mord">9</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">m</span><span class="mord">/</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span></span></p><p>以约155mm / sec的速度将开始损失扭矩</p><h3 id="旋转产生反电动势"><a class="markdownIt-Anchor" href="#旋转产生反电动势"></a> 旋转产生反电动势</h3><p>步进电机旋转时会产生反电动势。在理想的零滞后角下，这与驱动电压异相90度，并且由于电感与反电动势同相。当电动机产生最大转矩并处于跳过步骤的边缘时，它与电流同相。</p><p>数据表通常没有指定由于旋转而产生的反电动势，但是我们可以根据以下公式进行估算：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>旋转反向电动势</mtext><mo>=</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mtext>（</mtext><mn>2</mn><mtext>）</mtext><mo>⋅</mo><mi>p</mi><mi>i</mi><mo>⋅</mo><mtext>额定保持扭矩</mtext><mo>⋅</mo><mtext>每秒转速</mtext><mi mathvariant="normal">/</mi><mtext>额定电流</mtext></mrow><annotation encoding="application/x-tex">旋转反向电动势 = sqrt（2）\cdot pi \cdot 额定保持扭矩 \cdot 每秒转速 /额定电流</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">旋</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">反</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">动</span><span class="mord cjk_fallback">势</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">（</span><span class="mord">2</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">额</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">保</span><span class="mord cjk_fallback">持</span><span class="mord cjk_fallback">扭</span><span class="mord cjk_fallback">矩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">秒</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">速</span><span class="mord">/</span><span class="mord cjk_fallback">额</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">流</span></span></span></span></span></p><p>该公式假定在两相均以额定电流通电的情况下指定了保持转矩。如果仅指定一相通电，则将sqrt（2）替换为2。</p><p>示例：</p><p>考虑一个200步的电动机，该电动机通过20齿皮带轮和GT2皮带驱动托架，算得每转40mm的运动。要达到200mm / sec的速度，我们需要5转/秒。如果在两相均以1.68A驱动时使用保持转矩为 $$0.55N\cdot m$$ 的电动机，则由于旋转而产生的反电动势峰值为1.414 * 3.142 * 0.55 * 5 / 1.68 = 7.3V</p><p>测试用的200步的电动机，该电动机通过20齿皮带轮和GT2皮带驱动托架，算得每转40mm的运动。要达到155mm / sec的速度，我们需要3.1转/秒。如果在两相均以1.0A驱动时使用保持转矩为 $$0.45N\cdot m$$ 的电动机，则由于旋转而产生的反电动势峰值为1.414 * 3.142 * 0.45 * 3.1/ 1.0 = 6.20V</p><h3 id="如何计算电机所需的电源电压"><a class="markdownIt-Anchor" href="#如何计算电机所需的电源电压"></a> 如何计算电机所需的电源电压</h3><p>如果您有打印机的目标行进速度，则可以估算出至少大约需要给电动机驱动器供电的电压。计算方法如下：</p><ol><li><p>确定您的目标行驶速度。对于此示例，我将使用200mm / sec。</p></li><li><p>根据目标行驶速度，计算出最坏情况下的最大皮带速度：</p><p>对于笛卡尔打印机，最坏的情况是纯X或Y运动，因此最坏情况的皮带速度与行进速度相同。</p><p>对于CoreXY打印机，最坏的情况是对角线运动，相应的皮带速度是sqrt（2）乘以行进速度。</p><p>对于增量打印机，最坏的情况是靠近床边缘的径向移动，最坏的情况是皮带速度是行进速度除以tan（θ），其中θ是对角杆与水平方向的最小角度。</p><p>实际上，由于加速或减速所需的距离，我们无法将目标行进速度用于径向移动直至床身的边缘，因此，当喷嘴距床身边缘约10mm时，将θ作为角度在塔对面。对</p><p>于我的三角洲，这是30度，</p></li><li><p>通过将皮带速度除以皮带齿距（对于GT2皮带为2mm）和皮带轮上的齿数，得出最大皮带速度下的电机转速。我的三角洲使用20齿皮带轮，因此每秒的最大转速为346 /（2 * 20）= 8.7。</p></li><li><p>计算出由于电感引起的峰值反电动势。</p><p>公式：$$反电动势= 每秒转速\cdot \pi \cdot 电流 \cdot 电感 \cdot N / 2$$</p><p>其中N是每转的整步数（对于1.8deg电动机为200，对于0.9deg电动机为400）。我的电机为0.9度，电感为4.1mH，我通常以1A的电流运行。因此由于电感引起的反电动势为8.7 * 3.142 * 1.0 * 4.1e-3 * 400/2 = 22.4V。</p></li><li><p>计算出由于旋转引起的近似反电动势。</p><p>根据前面给出的公式：$$旋转反向电动势 = sqrt（2）\cdot pi \cdot 额定保持扭矩 \cdot 每秒转速 / 额定电流$$ 。我的电机的额定电流为1.68A，保持转矩为0.44Nm，因此结果为1.414 * 3.142 * 0.44 * 8.7 / 1.68 = 10.1V</p></li><li><p><strong>最好，驱动器电源电压应至少为这两个反电动势之和，再加上几个伏特</strong>。如果您有两个串联的电动机，则所需电压将增加一倍。</p></li></ol><p>在我的示例中，这提供了32.5V，高于Duet 2推荐的25V输入电压。但是至少我们知道，对于最坏情况下的增量移动速度为200mm / sec的移动，如果使用24V电源，则大于理论值的2/3，因此该移动可用的扭矩下降的幅度不应超过常规可用扭矩的1/3。另一方面，显然12V电源不足–这解释了为什么在我将打印机升级到24V之前我只能达到150mm / sec。</p><p><a href="https://www.reprapfirmware.org/" target="_blank" rel="noopener">这里</a>有一个在线计算器可以反过来执行此操作（即确定扭矩开始下降的速度）。</p><p><strong>计算例子</strong></p><p>博主测试的步进按保持转矩的最大速度155mm/s，以上述计算依次为155mm/s、3.1r/s、18.83V、6.20V、25V(需要再高几V)，而冰沙的建议VBB为24V，因此我们降低4V后取20V进行逆运算：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>每秒转速</mtext><mo>⋅</mo><mi>π</mi><mo>⋅</mo><mn>1.0</mn><mi>A</mi><mo>⋅</mo><mn>9.</mn><msub><mn>8</mn><mrow><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">)</mo></mrow></msub><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup><mo>⋅</mo><mn>20</mn><msub><mn>0</mn><mrow><mo stretchy="false">(</mo><mtext>步</mtext><mo stretchy="false">)</mo></mrow></msub><mo>+</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>⋅</mo><mi>π</mi><mo>⋅</mo><mn>0.4</mn><msub><mn>5</mn><mrow><mo stretchy="false">(</mo><mi>N</mi><mo>⋅</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></msub><mo>⋅</mo><mtext>每秒转速</mtext><mi mathvariant="normal">/</mi><mn>1.0</mn><mi>A</mi><mo>=</mo><mn>2</mn><msub><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>V</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">每秒转速\cdot \pi \cdot 1.0A \cdot 9.8_{(H)} \cdot 10^{-3}\cdot 200_{(步)}+sqrt(2)\cdot \pi \cdot 0.45_{(N\cdot m)} \cdot 每秒转速/ 1.0A=20_{(V)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">秒</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">速</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9996399999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord">9</span><span class="mord">.</span><span class="mord"><span class="mord">8</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9996399999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">步</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9996399999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">⋅</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">秒</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">速</span><span class="mord">/</span><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9996399999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord">2</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>得出1.0A电流下，笛卡尔打印机结构的每秒转速为为2.45转（最大），目标行驶速度为2.45*（2 * 20）= 98mm/s（最快）</p><p><strong>那如果换2.3A的60mm长 42步进呢？</strong></p><p><img src="/6722c02f/%E4%B9%90%E6%B8%85%E7%94%B5%E6%9C%BA%E5%8E%82%E5%92%A8%E8%AF%A2(4).png" alt="img"></p><p>我们同样取20V，工作电流为最大的2A，进行逆运算：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>每秒转速</mtext><mo>⋅</mo><mi>π</mi><mo>⋅</mo><mn>2.0</mn><mi>A</mi><mo>⋅</mo><mn>4.</mn><msub><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">)</mo></mrow></msub><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup><mo>⋅</mo><mn>20</mn><msub><mn>0</mn><mrow><mo stretchy="false">(</mo><mtext>步</mtext><mo stretchy="false">)</mo></mrow></msub><mo>+</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>⋅</mo><mi>π</mi><mo>⋅</mo><mn>0.8</mn><msub><mn>9</mn><mrow><mo stretchy="false">(</mo><mi>N</mi><mo>⋅</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></msub><mo>⋅</mo><mtext>每秒转速</mtext><mi mathvariant="normal">/</mi><mn>2.0</mn><mi>A</mi><mo>=</mo><mn>2</mn><msub><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>V</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">每秒转速\cdot \pi \cdot 2.0A \cdot 4.0_{(H)} \cdot 10^{-3}\cdot 200_{(步)}+sqrt(2)\cdot \pi \cdot 0.89_{(N\cdot m)} \cdot 每秒转速/2.0A=20_{(V)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">秒</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">速</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">0</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9996399999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord">4</span><span class="mord">.</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9996399999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">步</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9996399999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">8</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">⋅</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">秒</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">速</span><span class="mord">/</span><span class="mord">2</span><span class="mord">.</span><span class="mord">0</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9996399999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord">2</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>得出未损失扭矩并且电源电压合适的情况下，笛卡尔打印机结构的每秒转速为为2.86转（最大），目标行驶速度为2.86*（2 * 20）= 114mm/s（最快）</p><h3 id="理论最高速度计算"><a class="markdownIt-Anchor" href="#理论最高速度计算"></a> 理论最高速度计算</h3><p>下段节选于Smoothieware的主要开发者wolfmanjm的博客：</p><p>基于Makerslide的增量3D打印机，吉姆·莫里斯（JIM MORRIS）（地区：英国牛津）发表 <strong>于2012年12月16日16:47:33 -0800</strong></p><p><a href="http://blog.wolfman.com/articles/2012/12/16/a-makerslide-based-delta-3d-printer" target="_blank" rel="noopener">http://blog.wolfman.com/articles/2012/12/16/a-makerslide-based-delta-3d-printer</a></p><p>每转行进距离和最大速度的计算非常简单，这里是一个总结...</p><p>经过大量试验，似乎大多数步进电机的绝对最大速度（在任何微步设置下）均为<strong>10转/秒</strong>。那似乎<strong>是所有扭矩消失之前的最高峰</strong>。系统中的摩擦力或重量越大，行程越小。</p><p>对于设置为16微步的标准<strong>Nema 17</strong>(42步进)，即每转3,200微步。</p><p>假设Arduino类MCU可以以大约30kHz或更高的速度步进，即16微步每秒9.375转，这几乎接近步进器可以执行的最大速度。</p><p>速度取决于每转可移动多少毫米。对于大多数设置，这似乎在每转25至50mm之间，因此对于两个极端情况，最大速度往往在250mm / sec至500mm / sec之间。（毫米/转 * 10转/秒）。</p><p>对于笛卡尔打印机的同步带和同步轮，可以通过将同步带的节距乘以驱动皮带轮上的齿数来计算每转的毫米数。</p><p>因此，对于2mm * 20齿的GT2皮带（如果您有20齿的驱动轮），每转40mm，则最大理论速度(扭矩完全消失之前)为400mm / sec</p><h3 id="加速度"><a class="markdownIt-Anchor" href="#加速度"></a> 加速度？</h3><p>上面讲了这么多，为啥不谈加速度? 因为我也不知道啊，按照</p><p><a href="http://smoothieware.org/motion-control" target="_blank" rel="noopener">官方文档：运动控制</a></p><p>中的说法，加速度要自己根据负载多次测试调到最优，无法单独由步进的参数计算</p><h2 id="步进驱动器"><a class="markdownIt-Anchor" href="#步进驱动器"></a> 步进驱动器</h2><p><a href="https://blog.csdn.net/qq_20553613/article/details/78868801" target="_blank" rel="noopener">常见几款步进电机驱动IC对比</a></p><h3 id="细分"><a class="markdownIt-Anchor" href="#细分"></a> 细分</h3><p>冰沙主板使用的是Allegro MicroSystems公司的<a href="https://www.allegromicro.com/~/media/files/datasheets/a5984-datasheet.ashx" target="_blank" rel="noopener">A5984步进驱动芯片</a>，支持32细分下2A/40V的驱动能力，<s>就是做A4988的那家公司</s></p><p>根据A5984芯片的datasheet P8的表格，我们将MS1和MS2跳线焊盘焊接跳线，MS3空着，从而设置为最精细的32细分模式</p><p><img src="/6722c02f/A5984%E7%BB%86%E5%88%86%E8%B7%B3%E7%BA%BF.png" alt="A5984细分跳线"></p><p>对于步距角为1.8°的42步进电机，通过32细分，我们可以算出每1.8°细分为32份，但使用时我们需要通过同步轮将轴向运动转换为切向运动，对于步进电机的精度的计算，请观看Alan的<a href="https://www.bilibili.com/video/BV1jZ4y1H79a" target="_blank" rel="noopener">从零开始动手制作双视觉全自动贴片机第二集</a></p><h3 id="通过vsubrefsub引脚计算最大电流"><a class="markdownIt-Anchor" href="#通过vsubrefsub引脚计算最大电流"></a> 通过V<sub>REF</sub>引脚计算最大电流：</h3><p><a href="https://reprap.org/forum/read.php?160,821843" target="_blank" rel="noopener">使用Vref引脚计算电流（a4982，a4988，a5984）</a></p><p>a4982，a4988，a5984等步进驱动器具有相同的公式，可通过V REF引脚计算最大电流：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>I</mi><mrow><mi>t</mi><mi>r</mi><mi>i</mi><msub><mi>p</mi><mrow><mi>M</mi><mi>A</mi><mi>X</mi></mrow></msub></mrow></msub><mo>=</mo><msub><mi>V</mi><mrow><mi>R</mi><mi>E</mi><mi>F</mi></mrow></msub><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>8</mn><mo>×</mo><msub><mi>R</mi><mi>S</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I_{trip_{MAX}} = V_{REF}/(8×R_S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mopen">(</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h3 id="最大电流是一个桥式驱动器的还是俩个的总和"><a class="markdownIt-Anchor" href="#最大电流是一个桥式驱动器的还是俩个的总和"></a> 最大电流是一个桥式驱动器的还是俩个的总和？</h3><p>问题：一个步进驱动器具有2个桥（如下图），每个桥的R<sub>S</sub> = 0.05ohm，因此我认为方程式为0.05或0.1欧姆？步进电机可以处理2A的电流，这意味着我tripMAX不应超过1A（因为有2个电桥）？</p><p>PS：步进驱动器V<sub>REF</sub> 为0.65V</p><p>电流设置和步进额定值分别适用于每个电机线圈。电机可以在每个线圈上传递2A电流，驱动器基于两个独立的并联电阻器调节电流，不必将值减半。根据计算，0.65V表示1.65A，1.65A对于步进电机来说很好，但对于驱动器来说可能偏大了，需要装风扇+散热片</p><p><img src="/6722c02f/A5984%E6%A1%A5%E8%87%82.png" alt="A5984桥臂"></p><h3 id="电流设置"><a class="markdownIt-Anchor" href="#电流设置"></a> 电流设置</h3><p>A5984的输出驱动能力高达40V/±2A(实际要达到此标准需要很好的散热)</p><p>博主测试用的42步进长度是40mm的，两相四线)相线圈电阻4.9R左右，33K电阻配50K机械式电位器和50K数字电位器测试如下</p><table><thead><tr><th>限制电阻(R<sub>limit</sub>)</th><th>50K可调电阻(POT)的值</th><th>PW引脚的电压(V)</th><th>步进电机理论电流(A)<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mrow><mi>t</mi><mi>r</mi><mi>i</mi><msub><mi>p</mi><mrow><mi>M</mi><mi>A</mi><mi>X</mi></mrow></msub></mrow></msub><mo>=</mo><msub><mi>V</mi><mrow><mi>R</mi><mi>E</mi><mi>F</mi></mrow></msub><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>8</mn><mo>×</mo><msub><mi>R</mi><mi>S</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I_{trip_{MAX}} = V_{REF}/(8×R_S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mopen">(</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></th><th>使能状态待机(motor on)<br>驱动器表面温度</th><th>使能状态待机(motor on)<br>步进电机温度</th></tr></thead><tbody><tr><td>33K</td><td>3/40</td><td>0.15</td><td>0.375</td><td>温热 50度</td><td>温热</td></tr><tr><td>33K</td><td>6/40</td><td>0.30</td><td>0.750(推荐)</td><td>发烫 80度</td><td>热</td></tr><tr><td>33K</td><td>9/40</td><td>0.45</td><td>1.125</td><td>不能摸 100度+</td><td>烫</td></tr><tr><td>33K</td><td>12/40</td><td>0.60</td><td>1.500<br>(与config文件相符)</td><td>不能摸 100度+</td><td>滚烫</td></tr><tr><td>33K</td><td>16/40</td><td>0.80</td><td>2.000<br>极限值</td><td>极限值</td><td>极限值</td></tr><tr><td>33K</td><td>40/40</td><td>2.00</td><td>5.000</td><td>灰飞烟灭</td><td>灰飞烟灭</td></tr></tbody></table><p>根据乐清42 40mm长步进的参数：</p><p><img src="/6722c02f/%E4%B9%90%E6%B8%85%E7%94%B5%E6%9C%BA%E5%8E%82%E5%92%A8%E8%AF%A2(5).png" alt="img"></p><p>估计我测试使用的步进电机的额定电流为1.0A，因此冰沙config文件的默认1.5A实在是高得离谱，1.5A下驱动和步进都烫得不行</p><p>Alan使用42步进电机的长度是60mm的，实测跑到2A步进电机也不太热</p><h3 id="20中空步进电机"><a class="markdownIt-Anchor" href="#20中空步进电机"></a> 20中空步进电机</h3><p>相比42步进，这类电机十分昂贵，有些大侠做贴片机会用到，<a href="https://item.taobao.com/item.htm?id=21576359963" target="_blank" rel="noopener">斯泰普机电科技的 20中空步进电机</a>参数如下，<span style="color:red;">额定电流只有0.6A，如果用默认的1.5A过一会儿就烧毁了，一定要注意！</span></p><p><img src="/6722c02f/%E6%96%AF%E6%B3%B0%E6%99%AE%E6%9C%BA%E7%94%B5%E7%A7%91%E6%8A%8020%E4%B8%AD%E7%A9%BA%E6%AD%A5%E8%BF%9B%E5%8F%82%E6%95%B0.png" alt="斯泰普机电科技20中空步进参数"></p><h3 id="默认数字电位器电流设置"><a class="markdownIt-Anchor" href="#默认数字电位器电流设置"></a> 默认数字电位器电流设置：</h3><p><a href="http://smoothieware.org/currentcontrol" target="_blank" rel="noopener">官方文档：数字电流控制</a></p><p>M503查看：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Digipot Motor currents:</span><br><span class="line">M907 X<span class="number">1.50000</span> Y<span class="number">1.50000</span> Z<span class="number">1.50000</span> <span class="keyword">A</span><span class="number">1.50000</span> B<span class="number">1.50000</span></span><br></pre></td></tr></table></figure><p>官方文档的currentcontrol里解释是用数字电位器比机械式调节更精确，MCP4451数字电位器支持256阶，然而物料需要两种数字电位器没有必要(MCP4451-503和103，实测MCP4451-103(10K)配6.65K电阻与MCP4451-503(50K)配33.2K电阻等效，完全没必要多采购一种物料(RS 5个起售了解一下，两种一共买10个100大洋没了，提刀，提刀)</p><p><strong>修改数字电位器电流：</strong></p><p>M1~M5 默认都为1.5A，V<sub>REF</sub>的电压为0.60V左右，电机和驱动都发热严重，我将其都改为0.75，此时V<sub>REF</sub>的电压为0.30V左右</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">alpha_current</span>                                <span class="number">1.5</span>              <span class="comment"># X stepper motor current</span></span><br><span class="line"><span class="string">beta_current</span>                                 <span class="number">1.5</span>              <span class="comment"># Y stepper motor current</span></span><br><span class="line"><span class="string">gamma_current</span>                                <span class="number">1.5</span>              <span class="comment"># Z stepper motor current</span></span><br><span class="line"><span class="string">delta_current</span>                                <span class="number">1.5</span>              <span class="comment"># First extruder stepper motor current</span></span><br><span class="line"><span class="string">epsilon_current</span>                              <span class="number">1.5</span>              <span class="comment"># Second extruder stepper motor current</span></span><br></pre></td></tr></table></figure><p><strong>修改后：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">alpha_current</span>                                <span class="number">0.75</span>              <span class="comment"># X stepper motor current</span></span><br><span class="line"><span class="string">beta_current</span>                                 <span class="number">0.75</span>              <span class="comment"># Y stepper motor current</span></span><br><span class="line"><span class="string">gamma_current</span>                                <span class="number">0.75</span>              <span class="comment"># Z stepper motor current</span></span><br><span class="line"><span class="string">delta_current</span>                                <span class="number">0.75</span>              <span class="comment"># First extruder stepper motor current</span></span><br><span class="line"><span class="string">epsilon_current</span>                              <span class="number">0.75</span>              <span class="comment"># Second extruder stepper motor current</span></span><br></pre></td></tr></table></figure><p>博主的步进电机在该电流下外壳约50度，用过A4988或者TMC2208的大侠可能会有疑问，之前用A4988或TMC2208的电位器调到0.6V~0.7V很合适，为啥A5984只要0.3V？因为冰沙主板的A5984的R<sub>S1</sub>和R<sub>S2</sub>是50mΩ，而市面上常见的A4988，TMC2208驱动模块用的是100mΩ</p><p><img src="/6722c02f/A5984_Rs.png" alt="A5984_Rs"></p><p>对于R<sub>s</sub>，推荐華得電子 STE1206S1W0R050F 1% 50ppm的采样电阻</p><h3 id="限制电阻"><a class="markdownIt-Anchor" href="#限制电阻"></a> 限制电阻</h3><table><thead><tr><th>数字电位器的限制电阻</th><th>机械电位器的限制电阻</th><th>通过MJP1~MJP5跳线焊盘选择使用<br>MCP44X1数字电位器或3X3机械电位器</th></tr></thead><tbody><tr><td><img src="/6722c02f/smoothieboard-10x10-%E9%99%90%E5%88%B6%E7%94%B5%E9%98%BB.jpg" alt="smoothieboard-10x10-限制电阻"></td><td><img src="/6722c02f/smoothieboard-10x10-%E9%99%90%E5%88%B6%E7%94%B5%E9%98%BB(2).jpg" alt="smoothieboard-10x10-限制电阻(2)"></td><td><img src="/6722c02f/smoothieboard-10x10-%E9%99%90%E5%88%B6%E7%94%B5%E9%98%BB(3).jpg" alt="smoothieboard-10x10-限制电阻(3)"></td></tr></tbody></table><table><thead><tr><th>MCP4451的温度系数是50ppm</th><th>各个阶精度大约1%左右</th></tr></thead><tbody><tr><td><img src="/6722c02f/R-limit(2).png" alt="R-limit(2)"></td><td><img src="/6722c02f/R-limit(1).png" alt="R-limit(1)"></td></tr></tbody></table><table><thead><tr><th>对于MCP4451-503 配合33.2K 建议使用1% 25PPM低温漂</th><th>对于MCP4451-103 配合6.65K 建议使用1% 25PPM低温漂</th></tr></thead><tbody><tr><td><img src="/6722c02f/R-limit(1).jpg" alt="R-limit(1)"></td><td><img src="/6722c02f/R-limit(2).jpg" alt="R-limit(2)"></td></tr></tbody></table><h3 id="设置最大电流"><a class="markdownIt-Anchor" href="#设置最大电流"></a> 设置最大电流</h3><p>（我很好奇为啥冰沙的50K数字电位器在A5984最大电流为2A的情况下仅仅使用到10.2K(256阶仅用了52阶，0.03A/阶)，计算了一下，限制电阻从33.2K变为158K时，50K才是满量程，对应的电流也要按2/0.8倍放大）</p><p>冰沙固件通过CHECKSUM宏抓取config文件里的关键字，在Smoothieware/ConfigSamples/Smoothieboard/config里找了一圈并没发现限制最大电流的关键字，于是到git仓库找找，发现位置在CurrenControl.cpp中，在AzteegX5Mini的config使用了该关键字做电流限制，为了保险建议在原版的config文件里加上</p><p><img src="/6722c02f/digipot_max_current.png" alt="20201011091446"></p><h3 id="电位器的阻值与vef是非线性的"><a class="markdownIt-Anchor" href="#电位器的阻值与vef是非线性的"></a> 电位器的阻值与Vef是非线性的</h3><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>驱动电流</mtext><mo>=</mo><mtext>电位器的阻值</mtext><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mtext>电位器电阻</mtext><mo>+</mo><mtext>限制电阻</mtext><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>c</mi><mi>d</mi><mi>o</mi><mi>t</mi><mtext>电源电压</mtext><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mtext>系数</mtext><mi mathvariant="normal">/</mi><mi>c</mi><mi>d</mi><mi>o</mi><mi>t</mi><mtext>采样电阻</mtext><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>y</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>33.2</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>c</mi><mi>d</mi><mi>o</mi><mi>t</mi><mn>3.3</mn><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>8</mn><mi mathvariant="normal">/</mi><mi>c</mi><mi>d</mi><mi>o</mi><mi>t</mi><mn>0.05</mn><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">驱动电流=电位器的阻值/(电位器电阻+限制电阻)/cdot电源电压/(系数/cdot采样电阻)////y(x)=x/(x+33.2)/cdot3.3/(8/cdot0.05R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">驱</span><span class="mord cjk_fallback">动</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">流</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">器</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">阻</span><span class="mord cjk_fallback">值</span><span class="mord">/</span><span class="mopen">(</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">器</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">阻</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">制</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">阻</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">源</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">压</span><span class="mord">/</span><span class="mopen">(</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">数</span><span class="mord">/</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">采</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">阻</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">/</span><span class="mord">/</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">3</span><span class="mord">.</span><span class="mord">2</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord">3</span><span class="mord">.</span><span class="mord">3</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">8</span><span class="mord">/</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">5</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></span></p><table><thead><tr><th>将y(x)放大10倍，电位器阻值与驱动电流的关系</th><th>将y(x)放大10倍，电位器阻值与Ref引脚电压的关系</th></tr></thead><tbody><tr><td><img src="/6722c02f/%E7%94%B5%E4%BD%8D%E5%99%A8%E7%9A%84%E9%98%BB%E5%80%BC%E4%B8%8EVef(2).png" alt="20201011101034"></td><td><img src="/6722c02f/%E7%94%B5%E4%BD%8D%E5%99%A8%E7%9A%84%E9%98%BB%E5%80%BC%E4%B8%8EVef(3).png" alt="20201015162818">=</td></tr><tr><td>个人建议用50K机械式电位器时，Rs1,Rs2用100m欧，R Limit用53.6K欧，这样当电位器最大时，驱动电流刚好为2A，即绿线与紫色直线的交叉点</td><td>原版用50K+33.2K限制电阻时，Ref最大刚好为2V，个人建议用50K机械式电位器时，R Limit用53.6K欧，Ref最大时为1.59V</td></tr></tbody></table><p><a href="http://fooplot.com/?lang=zh_hans" target="_blank" rel="noopener">线上数学函数绘图器: FooPlot</a></p><h3 id="m1~m4如何使能"><a class="markdownIt-Anchor" href="#m1~m4如何使能"></a> M1~M4如何使能</h3><p>打开Pronterface，连接机器后，XYZ分别对应M1~M3，点击圆盘上的位移量即可，默认Extrude按钮就是M4，我们点击它即可测试M4，附加参数可自行修改，Pronterface使用教程有很多，这里就不细说了</p><h3 id="m5如何使能"><a class="markdownIt-Anchor" href="#m5如何使能"></a> M5如何使能</h3><p>M5步进在config文件中定义为extruder 2（2号挤出机），测试需要将此段的#号全部删除</p><p><img src="/6722c02f/config_extruder_2.png" alt="20200827221802"></p><p>打开Pronterface，连接机器，写一段测试用的gcode发出</p><p>G1 F1800 X100.000 Y100.000 E100.00000</p><p>但是M5步进没反应，因为双挤出机系统下，当前挤出机默认为T0（M4），我们通过发送以下gcode更改为T1并测试它：</p><p>G6 T1<span style="color:green;">注：使能T1（M5）为当前挤出机，</span></p><p>G1 F1800 X100.000 Y100.000 E100.00000  <span style="color:green;">注：测试用</span></p><p>或者</p><p>G6 T1 然后点击左边的Extrude按钮测试</p><p><img src="/6722c02f/%E6%AD%A5%E8%BF%9BM5%E6%B5%8B%E8%AF%952.PNG" alt="20200828124319"></p><p>测试时XYZ步进电机只沿着一个方向旋转，E1.E2步进电机正反转正常</p><h2 id="附"><a class="markdownIt-Anchor" href="#附"></a> 附</h2><h2 id="debug"><a class="markdownIt-Anchor" href="#debug"></a> DeBug</h2><p><a href="http://smoothieware.org/troubleshooting" target="_blank" rel="noopener">官方文档：troubleshooting</a></p><p>仅列举出博主遇到的问题</p><h3 id="只有电源led亮-33vled和vbb-led"><a class="markdownIt-Anchor" href="#只有电源led亮-33vled和vbb-led"></a> 只有电源LED亮 (3.3VLED和VBB LED)</h3><h4 id="第一种情况"><a class="markdownIt-Anchor" href="#第一种情况"></a> 第一种情况</h4><p>刚烧录完bootloaderDFU文件，将firmware.bin文件放入FAT32格式的SD卡，reboot后出现此情况</p><p>可能的原因：sd卡槽的盘下式焊盘未有效焊接</p><h4 id="第二种情况"><a class="markdownIt-Anchor" href="#第二种情况"></a> 第二种情况</h4><p>做最小系统测试时，如果未焊接LAN8720及其外围电路，而将sd卡中的config文件的以太网部分的network.enable配置为true，则开机LED1~4均不亮，程序卡在某处死循环</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line"><span class="comment">## Network settings</span></span><br><span class="line"><span class="comment"># See http://smoothieware.org/network</span></span><br><span class="line">network.<span class="builtin-name">enable</span>               <span class="literal">false</span>     # <span class="builtin-name">Enable</span> the<span class="built_in"> ethernet network </span>services  #default: <span class="literal">false</span></span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br></pre></td></tr></table></figure><h3 id="上电后电源led不亮led1~4也不亮"><a class="markdownIt-Anchor" href="#上电后电源led不亮led1~4也不亮"></a> 上电后，电源LED不亮，LED1~4也不亮</h3><p>焊完供电/任何功能部分的元件建议不要立即通电，先用万用表检查3.3V，5V、VBB的对地电阻是否接近0R，（不要用电桥测试，这样会得到电容的内阻）</p><ul><li>万用表测3.3V对地电阻在0.5k以上，因为AMS1117的3.3V与GND的电阻为1KΩ左右，再加上几颗并联的2.2K~10K的上拉电阻，博主将MCP44X1的I2C总线的2颗2.2K上拉电阻换为4.7K了，测得二周目是0.78K，三周目是0.76K，</li><li>万用表红接电源轨，黑接GND,，测5V对地电阻从几K慢慢变为50KΩ以上，30秒内测得稳定读数：二周目是100K，三周目是84K</li><li>万用表红接电源轨，黑接GND,，测VBB对地电阻从60K左右慢慢变大，30秒内测得稳定读数：二周目是130K，三周目是122K</li></ul><p>若焊接了供电电路，未做以上检查就上电，则自恢复保险丝保住了你的1117，检查某处5V与GND、3.3V与GND短路了</p><p>另外，千万不要尝试将VBB与GND短路，或将VBB接入5V，3.3V，和任何耐压低于12V的引脚，😥 黑人抬棺</p><h3 id="仅led3不亮"><a class="markdownIt-Anchor" href="#仅led3不亮"></a> 仅LED3不亮</h3><p>检查SD卡座子盘下引脚的焊接以及LPC1769这边的SD卡SPI的GPIO</p><h3 id="mos管的led指示灯长亮-并没有使能"><a class="markdownIt-Anchor" href="#mos管的led指示灯长亮-并没有使能"></a> MOS管的LED指示灯长亮 (并没有使能)</h3><p>MOS管的D极与GND连锡</p><h3 id="电机仅朝一个方向旋转"><a class="markdownIt-Anchor" href="#电机仅朝一个方向旋转"></a> 电机仅朝一个方向旋转？</h3><p>步进电机只向一个方向旋转且config在DIR引脚后添加&quot;!&quot;旋转方向还是不变，那么百分百是DIR与相邻的引脚连锡了</p><p>博主检查的DIR焊接问题：</p><table><thead><tr><th>A5984的DIR与GND连锡</th><th>DIR1与SD_CS连锡</th><th>DIR3与EN3连锡</th></tr></thead><tbody><tr><td><img src="/6722c02f/%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA%E7%9A%84%E7%84%8A%E6%8E%A5%E9%97%AE%E9%A2%98(1).jpg" alt="奇奇怪怪的焊接问题(1)"></td><td><img src="/6722c02f/%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA%E7%9A%84%E7%84%8A%E6%8E%A5%E9%97%AE%E9%A2%98(3).jpg" alt="奇奇怪怪的焊接问题(3)"></td><td><img src="/6722c02f/%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA%E7%9A%84%E7%84%8A%E6%8E%A5%E9%97%AE%E9%A2%98(2).jpg" alt="奇奇怪怪的焊接问题(2)"></td></tr></tbody></table><p>另外，我i发现DIR1是低电平时，发现上拉电阻不起作用，强行直连了3.3V测试，马上板子掉电了，于是知道DIR与GND短路😅，如果10x10没加自恢复保险丝，1117将会升起一缕青烟😅</p><h3 id="温度异常"><a class="markdownIt-Anchor" href="#温度异常"></a> 温度异常</h3><p>例如pronterface报错：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ERROR: </span>MINTEMP or MAXTEMP triggered on B. Check your temperature sensors!</span><br><span class="line">HALT asserted - reset or M999 required</span><br><span class="line">Print paused at: 21:26:24</span><br></pre></td></tr></table></figure><p>可以长按killbutton待指示灯熄灭即可恢复</p><h3 id="dcdc倒灌"><a class="markdownIt-Anchor" href="#dcdc倒灌"></a> DCDC倒灌?</h3><p>二周目省略了DCDC VIN二极管出现的问题，三周目补回来解决了</p><p><a href="https://www.amobbs.com/thread-5720124-1-1.html" target="_blank" rel="noopener">https://www.amobbs.com/thread-5720124-1-1.html</a></p><p>DCDC供电，同时也有电池供电的设备都有这个电源倒灌的问题，对于一些电压敏感的应用场合，不能简单地串个二极管解决。一般处理是mos管搭理想二极管电路或电源切换电路解决。</p><h2 id="eagle制作交互式bom"><a class="markdownIt-Anchor" href="#eagle制作交互式bom"></a> Eagle制作交互式B.O.M</h2><p><a href="https://github.com/openscopeproject/InteractiveHtmlBom" target="_blank" rel="noopener">InteractiveHtmlBom</a>是kicad的插件，kicad可以导入Eagle工程</p><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><p>下载整个项目压缩包，解压，例如安装路径为D:/Program Files/KiCad，那么将根目录的InteractiveHtmlBom整个文件夹放在D:/Program Files/KiCad/ <span style="color:red;">share</span> /kicad/scripting/plugins，不要放到D:/Program Files/KiCad/ <span style="color:red;">bin</span> /scripting/plugins，</p><h3 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h3><p>Pcbnew打开导入的eagle工程，工程导入后要先保存，再找到下图位置：</p><p><img src="/6722c02f/kicad-InteractiveHtmlBom.png" alt="kicad-InteractiveHtmlBom"></p><p>一键生成html文件，即可浏览器打开，效果如下：</p><p><img src="/6722c02f/kicad-InteractiveHtmlBom-view.png" alt="kicad-InteractiveHtmlBom-view"></p><h3 id="bug"><a class="markdownIt-Anchor" href="#bug"></a> BUG</h3><p>kicad导入Eagle后，offset焊盘丢失了：</p><p><img src="/6722c02f/kicad-offset%E7%84%8A%E7%9B%98%E4%B8%A2%E5%A4%B1.png" alt="20201013153503"></p><h3 id="ad也想整一个"><a class="markdownIt-Anchor" href="#ad也想整一个"></a> AD也想整一个！</h3><p>对于AD，我们按照<a href="https://www.cnblogs.com/zhiqiang_zhang/p/11107818.html" target="_blank" rel="noopener">AD转换为KiCAD的方法</a>将其导出为P-CAD 200x ASCII PCB（*.pcb）文件使用Kicad的Pcbnew导入也行</p><h2 id="eagle输出的gerber文件jlc助手解析超时"><a class="markdownIt-Anchor" href="#eagle输出的gerber文件jlc助手解析超时"></a> Eagle输出的gerber文件JLC助手解析超时</h2><p>将Eagle PCB 4layer CAM处理器输出的gerber及drill文件按AD的风格命名即可，1分钟左右的解析时间，仓库的Eagle目录中有我调好的AD命名方式的Eagle四层板 CAM处理器预设文件，和钢网层CAM处理器预设文件</p><p><a href="https://www.cnblogs.com/mr-bike/p/3524222.html" target="_blank" rel="noopener">Altium Designer怎样输出Gerber文件和钻孔文件</a></p><p><img src="/6722c02f/EaglePCB%E7%9A%84gerber%E6%96%87%E4%BB%B6JLC%E5%8A%A9%E6%89%8B%E8%A7%A3%E6%9E%90.png" alt="20201005123115"></p><h3 id="jlc预览效果"><a class="markdownIt-Anchor" href="#jlc预览效果"></a> JLC预览效果：</h3><p>若报没有外形层叉掉无视即可，GKO层都正常识别了问题不大，可能需要备注USB-C的槽孔做金属化</p><table><thead><tr><th>仿真图</th><th>Gerber自动识别各个层</th></tr></thead><tbody><tr><td><img src="/6722c02f/JLC%E9%A2%84%E8%A7%88%E6%95%88%E6%9E%9C.png" alt="20201020040833"></td><td><img src="/6722c02f/JLC%E9%A2%84%E8%A7%88%E6%95%88%E6%9E%9C2.png" alt="20201020040823"></td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="在10x10冰沙板上添加mark点"><a class="markdownIt-Anchor" href="#在10x10冰沙板上添加mark点"></a> 在10x10冰沙板上添加Mark点</h2><p>待续</p><h2 id="对原版冰沙板回流路径的建议"><a class="markdownIt-Anchor" href="#对原版冰沙板回流路径的建议"></a> 对原版冰沙板回流路径的建议</h2><p>冰沙主板有两个混合MOSFET（一个小功率和一个大功率FET），官方文档中，对于混合大FET，给出了电流小于12.5A的限制，但是没有提及是在什么取电的方式下才能达到12.5A，因为混合式MOS管有两种可能的取电方式：</p><ol><li>从VBB连接器取电并从VBB连接器的GND返回</li><li>从VBB连接器取电从Large Fets IN连接器的的GND返回</li></ol><p>但是，通常情况，我们不会用第二种，因此，对于第一种的取电方式，相应流经的铜箔如下</p><table><thead><tr><th>Mixed Large Fet VBB</th><th>Mixed Large Fet VBB（局部）</th><th>Mixed Large Fet to VBB connector's GND</th><th>Mixed Large Fet to VBB connector's GND（局部）</th></tr></thead><tbody><tr><td><img src="/6722c02f/Mixed-Big-Fet-VBB-2.png" alt="Mixed-Big-Fet-VBB-2"></td><td><img src="/6722c02f/Mixed-Big-Fet-VBB.png" alt="Mixed-Big-Fet-VBB"></td><td><img src="/6722c02f/Mixed-Big-Fet-gnd.png" alt="Mixed-Big-Fet-gnd"></td><td><img src="/6722c02f/Mixed-Big-Fet-gnd-2.png" alt="Mixed-Big-Fet-gnd-2"></td></tr><tr><td></td><td>0.5oz 137mil = 1oz 68.5mil<br>载流2.9A (10温升)</td><td></td><td>0.5oz 18mil = 1oz 9mil<br>载流1A （10温升）</td></tr></tbody></table><p>所以，对于原版冰沙主板大功率混合FET，要想达到12.5A，建议采用第2种取电方式，用第1种小心烧板子哈</p><p>对于10x10，第一种方式取电回流10A是完全没问题的</p><h2 id="开源硬件oshw"><a class="markdownIt-Anchor" href="#开源硬件oshw"></a> 开源硬件(OSHW)</h2><p>原版冰沙主板v1.1 和 修改的冰沙主板10x10 都是<a href="http://www.oshwa.org/definition/" target="_blank" rel="noopener">开源硬件</a></p><table>     <tr><td><img width="100px" height="100px" src="/6722c02f/Oshw-logo.png"></td></tr> </table>## Acknowledgments<ul><li><p>The Smoothieboard creators and the <a href="http://smoothieware.org/" target="_blank" rel="noopener">Smoothieware</a> team.</p></li><li><p><a href="https://space.bilibili.com/479375532?from=search&amp;seid=14974028502933777239" target="_blank" rel="noopener">JP小可爱小路路</a></p></li></ul><h2 id="进度一览"><a class="markdownIt-Anchor" href="#进度一览"></a> 进度一览</h2><table><thead><tr><th>日期</th><th>活动</th></tr></thead><tbody><tr><td>一周目</td><td></td></tr><tr><td>20200820</td><td>提交JP打样</td></tr><tr><td>20200824</td><td>收到板子及物料，开始撰写此文</td></tr><tr><td>20200826</td><td>最小系统，以太网，限位，Mosfet，步进驱动测试正常，测试时烧坏了P1.22，P1.23</td></tr><tr><td>20200827</td><td>发现致命线路错误，play信号线短接了y限位和3.3V，遂弃坑</td></tr><tr><td>二周目</td><td></td></tr><tr><td>20200911</td><td>开始尝试修改冰沙原版为10x10</td></tr><tr><td>20200922</td><td>测试版修改完毕</td></tr><tr><td>20200923</td><td>提交JP打样</td></tr><tr><td>20200927</td><td>收到板子及物料，连接器间距有亿点点问题</td></tr><tr><td>20200930</td><td>完成焊接和基本测试，未发现致命问题</td></tr><tr><td>20201001</td><td>完成5个步进电机驱动器的测试 ，连锡实属坑爹</td></tr><tr><td>20201002</td><td>替换了14包邮的LPC1769，测试一切正常</td></tr><tr><td>三周目</td><td></td></tr><tr><td>20201005</td><td>板子定稿，打样PCB，和钢网</td></tr><tr><td>20201011</td><td>收到板子及物料</td></tr><tr><td>20201013</td><td>完成焊接和基本测试，未发现问题</td></tr><tr><td>20201014</td><td>完成所有测试，0 error 1 warning</td></tr><tr><td>后续</td><td></td></tr><tr><td>20201015</td><td>写笔记</td></tr><tr><td>20201016</td><td>给<em>Arthur Wolf</em>发邮件🍰（石沉大海）</td></tr><tr><td>20201018</td><td>重新计算功率部分铜箔载流，并给出推荐负载电流的表格</td></tr><tr><td>20201019</td><td>继续完善步进部分</td></tr><tr><td>20201020</td><td>【添加2020-10-13版本】，开源到本<a href="https://github.com/oldgerman/Smoothieboard-10x10-5driver" target="_blank" rel="noopener">仓库</a></td></tr><tr><td>20201021</td><td>给<a href="https://space.bilibili.com/429600313?from=search&amp;seid=3338546101582822227" target="_blank" rel="noopener">Alan</a>寄了块板子测试</td></tr><tr><td>20201022</td><td>【添加2020-10-21版本】，加宽步进驱器走线</td></tr><tr><td>20201212</td><td>【添加2020-12-10版本】，优化dcdc电感走线（我回家啦，终于可以到博客发这篇了wwww）</td></tr><tr><td>20201227</td><td>焊接测试完2020-12-10版本</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> PCB设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> type-c </tag>
            
            <tag> 贴片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32CubeIDE踩坑记录</title>
      <link href="/4fafac1b/"/>
      <url>/4fafac1b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="eclipse实用技巧"><a class="markdownIt-Anchor" href="#eclipse实用技巧"></a> eclipse实用技巧</h2><h3 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h3><p>STM32CubeIDE是基于eclipse开发的，网上关于eclipse的很多高级使用技巧对于STM32CubeIDE同样适用</p><p>Eclipse最初是由IBM公司开发的替代商业软件Visual Age for Java的下一代IDE开发环境2001年11月贡献给开源社区，它由非营利软件供应商联盟Eclipse基金会（Eclipse Foundation）管理，后来的发展就是各种版本发布和维护了</p><a id="more"></a><p>Eclipse 是一个开放源代码的、基于Java的可扩展开发平台，它本身只是一个框架，通过插件组件构建开发环境，Eclipse 附带标准的插件集，包括Java开发工具（Java Development Kit，JDK）等</p><h3 id="实用的快捷键"><a class="markdownIt-Anchor" href="#实用的快捷键"></a> 实用的快捷键</h3><p>网上的太多，我半年使用下来认为这些比较实用</p><h4 id="页面跳转"><a class="markdownIt-Anchor" href="#页面跳转"></a> 页面跳转</h4><ul><li>Alt+← 前一个编辑的页面</li><li>Alt+→ 下一个编辑的页面(当然是针对上面那条来说了)</li><li>Ctrl + Q 定位到最后编辑的地方</li></ul><h4 id="代码编辑"><a class="markdownIt-Anchor" href="#代码编辑"></a> 代码编辑</h4><ul><li><p>Crtl+Z Ctrl+Y 后退/前进</p></li><li><p>Ctrl+/ 以//注释当前行，再按取消注释</p></li><li><p>Ctrl + D 删除当前行</p></li><li><p>Alt+↓ 当前行和下面一行交互位置（可复选多行）</p></li><li><p>Alt+↑ 当前行和上面一行交互位置（可复选多行）</p></li><li><p>Ctrl + Alt + ↓或↑ 复制当前行到上或下一行</p></li><li><p>Ctrl + Shift + F 自动格式化对齐 （需要先选中一段文本）</p></li><li><p>Ctrl + I 缩进代码的选定部分（或全部）</p><blockquote><p><a href="https://stackoverflow.com/questions/13936569/auto-align-in-assignments" target="_blank" rel="noopener">Auto-align &quot;=&quot; in assignments</a> 推荐的 <a href="http://columns4eclipse.sourceforge.net/" target="_blank" rel="noopener">columns4eclipse插件：指定符号对齐</a> 不错，STM32CubeIDE 可以直接安装</p><p><img src="/4fafac1b/columns4eclipse%E4%BB%BB%E6%84%8F%E7%AC%A6%E5%8F%B7%E5%AF%B9%E9%BD%90%E6%8F%92%E4%BB%B6.png" alt></p></blockquote></li></ul><h4 id="代码查找"><a class="markdownIt-Anchor" href="#代码查找"></a> 代码查找</h4><ul><li><p>Ctr+F 当前源代码文件查找。可以查找并批量替换</p><blockquote><p>替换指定代码片段的特定字符：shift选中片段后按Ctrl+F，唤出下图右上角替换栏，注意替换查找方式有3种可选配置</p><p><img src="/4fafac1b/%E6%9B%BF%E6%8D%A2%E6%8C%87%E5%AE%9A%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%E7%9A%84%E7%89%B9%E5%AE%9A%E5%AD%97%E7%AC%A6.png" alt="替换指定代码片段的特定字符"></p></blockquote></li><li><p>Ctr+H 全局查找，分文本匹配查找和<code>C/C++</code>查找，前者更好用</p></li><li><p>Ctrl+K 快速查找（需要先选中一段文本）</p></li></ul><h3 id="代码折叠"><a class="markdownIt-Anchor" href="#代码折叠"></a> 代码折叠</h3><p>默认是不开启的，在<code>C/C++</code> --&gt; Editor --&gt;Folding 页面设置代码折叠功能</p><h4 id="图形窗口"><a class="markdownIt-Anchor" href="#图形窗口"></a> 图形窗口</h4><p>工具栏Windows-Prespective-Reset Prespective 可以还原工作界面到默认布局</p><p>Ctrl+M 最大化当前的Edit或View (再按则反之)</p><h3 id="热键冲突"><a class="markdownIt-Anchor" href="#热键冲突"></a> 热键冲突</h3><p>win10用户若为微软拼音输入法的简体中文模式，那么代码自动对齐的Ctrl + Shift + F会将中文输入法会变为繁体模式（快捷键冲突），再对齐后再Ctrl + Shift + F一次就能切回简体中文</p><h3 id="设置代理"><a class="markdownIt-Anchor" href="#设置代理"></a> <a href="https://blog.csdn.net/QQ635785620/article/details/8191799" target="_blank" rel="noopener">设置代理</a></h3><h3 id="关闭拼写检查"><a class="markdownIt-Anchor" href="#关闭拼写检查"></a> 关闭拼写检查</h3><p>Window<strong>→</strong>Preferences<strong>→</strong>General<strong>→</strong>Editors<strong>→</strong>Text Editors<strong>→</strong>Spelling<strong>→</strong>勾掉“Enable spell checking“</p><h3 id="amaterasuml类图插件仅支持java没卵用"><a class="markdownIt-Anchor" href="#amaterasuml类图插件仅支持java没卵用"></a> <a href="https://www.cnblogs.com/yelao/p/10522303.html" target="_blank" rel="noopener">AmaterasUML类图插件（仅支持Java没卵用）</a></h3><h2 id="stm32cubeide实用技巧"><a class="markdownIt-Anchor" href="#stm32cubeide实用技巧"></a> STM32CubeIDE实用技巧</h2><h3 id="简介-2"><a class="markdownIt-Anchor" href="#简介-2"></a> 简介</h3><p>STM32CubeIDE是基于eclipse开发的，ST的亲儿子，猛推HAL库的战略级IDE，免费使用，内置的CubeMX，HAL库开发方式，但不支持导出MDK工程模板，带高级调试功能，ST-LINK、dapLink，编译和MDK5一样，巨快，首次编译时间较长，后来继续编译只要代码二进制级别的复用做得好，几乎瞬间编译完成，对比arduino环境每次编译都要从头造一个内核，哎，不比较了</p><h3 id="快速上手"><a class="markdownIt-Anchor" href="#快速上手"></a> 快速上手</h3><p><a href="https://blog.csdn.net/qq_42038029/article/details/99735688?utm_medium=distribute.pc_relevant.none-task-blog-title-2&amp;spm=1001.2101.3001.4242" target="_blank" rel="noopener">修改主题、点亮一个LED灯</a>（通过一个配合CubeMX的实际工程快速上手）</p><h3 id="生成hex"><a class="markdownIt-Anchor" href="#生成hex"></a> 生成hex</h3><p>在<code>C/C++</code> Build下面的Settings中，找到Tool Settings栏，选择MCU Post build outputs，然后右侧就可以勾选hex</p><p><img src="/4fafac1b/cubeide%E7%94%9F%E6%88%90hex.jpg" alt="img"></p><h3 id="代码补全"><a class="markdownIt-Anchor" href="#代码补全"></a> 代码补全</h3><h4 id="手动弹出补全"><a class="markdownIt-Anchor" href="#手动弹出补全"></a> 手动弹出补全</h4><p>默认<code>C/C++</code>的代码提示只在.和-&gt;下触发，输入除前者任意字符时，可以手动<code>Alt+/</code>弹出</p><p><img src="/4fafac1b/%E6%89%8B%E5%8A%A8%E5%BC%B9%E5%87%BA%E8%A1%A5%E5%85%A8%E5%BB%BA%E8%AE%AE.png" alt="手动弹出补全建议"></p><p>可以在keys设置里修改其他按键触发，我把Alt+/改为了Crtl+Space：</p><p><img src="/4fafac1b/%E6%89%8B%E5%8A%A8%E5%BC%B9%E5%87%BA%E8%A1%A5%E5%85%A8%E5%BB%BA%E8%AE%AE%E4%BF%AE%E6%94%B9%E6%8C%89%E9%94%AE.png" alt="手动弹出补全建议修改按键"></p><h4 id="自动弹出补全"><a class="markdownIt-Anchor" href="#自动弹出补全"></a> 自动弹出补全</h4><p>安装完cubeide后，在D:\ST\STM32CubeIDE_1.4.0\STM32CubeIDE\plugins下本身就有一个org.eclipse.cdt.ui_xxx.jar，我们重命名其为org.eclipse.cdt.ui_xxxbak.jar，然后我们到<a href="https://blog.csdn.net/nopear6" target="_blank" rel="noopener">nopear6</a>博主的git仓库下载：<a href="https://github.com/nopear1/cubeIDE_Autocomplete" target="_blank" rel="noopener">https://github.com/nopear1/cubeIDE_Autocomplete</a> 后解压，将解压的文件夹里的org.eclipse.cdt.ui_xxx.jar复制到D:\ST\STM32CubeIDE_1.4.0\STM32CubeIDE\plugins下，没错，你的这个plugins目录有两个差不多的文件，有bak和没有加bak的，这两个任何一个都不能没有不然你就无法正常看代码了，之后打开ide，自动补全功能就有了</p><p><img src="/4fafac1b/org.eclipse.cdt.ui_xxx.png" alt="20201115235219"></p><p>若对制作git仓库的org.eclipse.cdt.ui_xxx.jar文件感兴趣，<a href="https://blog.csdn.net/nopear6/article/details/106255311" target="_blank" rel="noopener">请阅读</a></p><h3 id="编译报错问题"><a class="markdownIt-Anchor" href="#编译报错问题"></a> 编译报错问题</h3><h4 id="硬是找不到h文件"><a class="markdownIt-Anchor" href="#硬是找不到h文件"></a> 硬是找不到.h文件？</h4><p>因为<code>C++</code>和<code>C</code>编译器的PATH是分开的，所以两个都要检查下，可能<code>C</code>包含了，而<code>C++</code>没有啊啊啊<img src="/4fafac1b/%E6%AD%BB%E6%B4%BB%E4%B9%9F%E6%89%BE%E4%B8%8D%E5%88%B0.h%E6%96%87%E4%BB%B6%EF%BC%9F.png" alt="死活也找不到.h文件？"></p><h4 id="undefined-reference-to-class-xxx不一定是class"><a class="markdownIt-Anchor" href="#undefined-reference-to-class-xxx不一定是class"></a> undefined reference to class &quot;XXX&quot;（不一定是class）</h4><p>出现这个情况，但文本编辑器可以正常解析class+索引跳转到class定义，一定是工程的<code>C/C++</code>的Source Location没有包含class的源代码的目录，我们添加其所在的根目录或上级目录就行</p><h3 id="cdt不用请忽略"><a class="markdownIt-Anchor" href="#cdt不用请忽略"></a> CDT（不用，请忽略）</h3><h4 id="安装cdt插件"><a class="markdownIt-Anchor" href="#安装cdt插件"></a> <a href="http://www.cxyzjd.com/article/qq_37318438/54409809" target="_blank" rel="noopener">安装CDT插件</a></h4><h4 id="查看cdt版本号"><a class="markdownIt-Anchor" href="#查看cdt版本号"></a> 查看CDT版本号</h4><p>stm32cubeide 1.70使用cdt 10.2：</p><p><img src="/4fafac1b/%E6%9F%A5%E7%9C%8BCDT%E7%89%88%E6%9C%AC%E5%8F%B7.png" alt="查看CDT版本号"></p><h3 id="修改字体"><a class="markdownIt-Anchor" href="#修改字体"></a> 修改字体</h3><p><a href="https://blog.csdn.net/wschou/article/details/106484789" target="_blank" rel="noopener">STM32CubeIDE中文大小不一乱码情况</a></p><p>推荐使用几年了感觉很舒适的一款混合字体：<a href="https://github.com/crvdgc/Consolas-with-Yahei" target="_blank" rel="noopener">Consolas-with-Yahei</a></p><h3 id="切换编码"><a class="markdownIt-Anchor" href="#切换编码"></a> 切换编码</h3><p>Window-Preference-General-Workspace：Text file encoding里设置</p><p><img src="/4fafac1b/eclipse%E4%BF%AE%E6%94%B9%E7%BC%96%E7%A0%81.png" alt="20210111205518"></p><h3 id="cc混合编程注意点"><a class="markdownIt-Anchor" href="#cc混合编程注意点"></a> <code>C/C++</code>混合编程注意点</h3><h4 id="内置的cubemx绑定自动生成的c文件"><a class="markdownIt-Anchor" href="#内置的cubemx绑定自动生成的c文件"></a> 内置的CubeMX绑定自动生成的.c文件</h4><p>STM32CubeIDE内置的CubeMX生成的main.c、main.h只能是C文件，在Keil中可直接将main.c修改为main.cpp，但是，CubeMX不能，就算你修改了一周目为main.cpp和main.hpp，二周目自动生成时还会新建一个main.c和main.h，与你修改过的main.cpp、main.hpp同在</p><p>所以想不定期用CubeMX的自动生成功能推进开发的话，最好不要将一切被CubeMX绑定自动生成的.c文件极其头文件中使用<code>C++</code>，而是将<code>C++</code>逻辑写在.cpp文件中，在其同名的.h或.hpp文件里暴露出变量或纯C函数给绑定自动生成的.c文件们调用</p><p>在STM32CubeIDE内，右键某一个工程，Convert to <code>C++</code>，同理，可以转换回来：Convert to <code>C</code>，但不会将内置的CubeMX生成的main变成main.cpp和main.hpp</p><p>直接在一套同名的.c文件和.h文件中来几句class XXX，百分百报错 “Unknown type name class”这个是常识就不说了</p><h4 id="在cubemx自动生成的代码中通过包装函数使用c"><a class="markdownIt-Anchor" href="#在cubemx自动生成的代码中通过包装函数使用c"></a> 在CubeMX自动生成的代码中，通过包装函数使用<code>C++</code></h4><p>STM32CubeIDE 内置的 CubeMX 可以灵活<span style="color:rgb(255, 150, 200);">续命</span>工程，随处可见  /* USER CODE BEGIN XXX*/ 和 /* USER CODE END XXX */ 这对好兄弟，区分机器生成的代码和的码农的业务代码，这个工具很有用，但是目前还不能生成<code>C++</code>代码，但是可以在其头文件中包含有包装了<code>C++</code>代码的纯C函数的头文件，来间接使用 <code>C++ </code>代码</p><p>所有.cpp文件对应的头文件被编译器处理时，都会自动加一句<code>#define __cplusplus</code>，<code>__cplusplus</code> 宏，是用来识别编译器的，当前代码被编译会作为 <code>C++</code> 进行编译，利用这个宏可以在.h文件中定义式声明C++class等，但<code>C++</code>编译器在编译时<span style="color:rgb(255, 150, 200);">会破坏函数名称</span>，导致在c文件中引用<code>C++</code>.h文件中暴露出的兼容C语法的函数，会报错undefined reference to XXX function，那么就轮到extern &quot;C&quot;就出场了，它能使 <code>C++</code> 中的函数名称具有C链接（编译器不会破坏名称），以便客户端<strong>C</strong>代码可以使用仅包含函数声明的<strong>C</strong>兼容头文件链接到（使用）您的函数，通过这两点配合，就能做到<code>C/C++</code>的混合编程了!</p><p>关于<code>__cplusplus</code>还要注意的：</p><p>例如你在STM32CubeIDE里创建了 test.h 和 test.cpp 两个空文件，若在test.h里写</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="comment">/*你的代码*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>则由于IDE动态显示你的活动预处理和非活动预处理块，<code>/*你的代码*/</code>会亮灰色显示，表示非活动预处理块，预处理器会跳过你这段代码，那么，如何让动态显示的预处理块是活动预处理块呢？很简单，在test.cpp里写<code>#include &quot;test.h&quot;</code>就行，你再回头看看，<code>/*你的代码*/</code>正常显示了，注意#define __cplusplus是对用户隐藏的操作</p><p>剩下的就是手把手教了：</p><p><a href="https://qiita.com/FlechaMaker/items/de9c663d1b394e5a2862" target="_blank" rel="noopener">使用 CubeMX 和 C++ 开发 STM32（日文）</a></p><p>更深入请参考：</p><p><a href="https://zhuanlan.zhihu.com/p/115068898" target="_blank" rel="noopener">浅谈C/C++混合编程</a></p><p><a href="https://www.cnblogs.com/eyeszjwang/articles/2303686.html" target="_blank" rel="noopener">C++ 编译器的函数名修饰规则</a></p><h3 id="串口打印浮点数"><a class="markdownIt-Anchor" href="#串口打印浮点数"></a> 串口打印浮点数</h3><p>使用LIS3DH，使用USB VCP输出加速度计三轴数数据，默认配置编译后报错如下，后一句的意思是*添加“ -u _printf_float”作为链接器选项</p><p><img src="/4fafac1b/float%E4%B8%8D%E6%94%AF%E6%8C%81.png" alt="float不支持"></p><p>上传代码运行输出如下，两行乱码后都是乱码：</p><p><img src="/4fafac1b/float-%E6%89%93%E5%8D%B0%E6%8A%A5%E4%B9%B1%E7%A0%81.png" alt="20210114232124"></p><p>下面的方法OK：</p><p><a href="https://yukblog.net/stm32cubeide-printf-float/" target="_blank" rel="noopener">STM32CubeIDE解决float无法被printf格式化（日文）</a></p><h4 id="stm32cubeide版本102或更高版本"><a class="markdownIt-Anchor" href="#stm32cubeide版本102或更高版本"></a> STM32CubeIDE版本1.0.2或更高版本</h4><p>如果是Ver.1.0.2或更高版本，则只需进行以下设置即可使用它。</p><ul><li>右键单击项目→属性</li><li>C / C ++构建→设置→MCU设置</li><li>选中newlib-nano中的printf使用float（-u _printf_float），下面一行的scanf()是否勾选看你需求</li></ul><p><img src="/4fafac1b/stm32cubeide%E5%90%AF%E7%94%A8printf_float-1024x800-%E6%96%B9%E6%B3%951.png" alt="stm32cubeide启用printf_float-1024x800-方法1"></p><h4 id="低于stm32cubeide版本102的版本"><a class="markdownIt-Anchor" href="#低于stm32cubeide版本102的版本"></a> 低于STM32CubeIDE版本1.0.2的版本</h4><p>过气了，此处省略~</p><h4 id="实测ok"><a class="markdownIt-Anchor" href="#实测ok"></a> 实测OK</h4><p>按照STM32CubeIDE版本1.0.2或更高版本的方法勾选后，sprintf用%f警告消失。</p><p>实测USB VCP以浮点数打印加速度计三轴数据OK</p><p><img src="/4fafac1b/float_usb_printf()%E6%AD%A3%E5%B8%B8.png" alt="float_usb_printf()正常"></p><h3 id="release-和-debug"><a class="markdownIt-Anchor" href="#release-和-debug"></a> release 和 debug</h3><p>stm32cubeide build的release中，GCC和G++默认是Os优化，参数 -<em>Os</em> 是在 -O2 的基础上优化大小，实际测试中O1与O2大小差别几乎不计，Os也是Arduino IDE的默认优化等级，难怪之前在arduino ide里用STM32duino的包编译后代码小那么多。。。实测如下，单位是KB：</p><table><thead><tr><th></th><th>O0</th><th>O1/O2</th><th>Os</th><th></th></tr></thead><tbody><tr><td>u8g+u8g绘图（release）</td><td>65</td><td>39</td><td>35</td><td>35K是可以正常运行<br>oled和VCP的</td></tr><tr><td>u8g+u8g绘图（debug）</td><td>75</td><td>48</td><td>44</td><td></td></tr><tr><td></td><td>+10</td><td>+9</td><td>+9</td><td></td></tr><tr><td>u8g+u8g绘图+LIS3DH、INA226、USB-demo)（release）</td><td>98</td><td>61</td><td>53</td><td></td></tr><tr><td>u8g+u8g绘图+LIS3DH、INA226、USB-demo)（debug）</td><td>106</td><td>69</td><td>61</td><td></td></tr><tr><td></td><td>+8</td><td>+8</td><td>+8</td><td>release的O1相比debug的O0代码减少45K，妙啊</td></tr></tbody></table><h3 id="stlink-gdb调式"><a class="markdownIt-Anchor" href="#stlink-gdb调式"></a> STLINK GDB调式</h3><h4 id="点击debug后报错xxx-command-failed"><a class="markdownIt-Anchor" href="#点击debug后报错xxx-command-failed"></a> 点击debug后报错XXX Command Failed</h4><p>在工程选项中将编译器的优化等级设置为Og模式，默认是O0有时会出现无法debug的bug</p><p><img src="/4fafac1b/%E4%BF%AE%E6%94%B9%E4%BC%98%E5%8C%96%E7%AD%89%E7%BA%A7%E4%B8%BAog.png" alt="修改优化等级为og"></p><h4 id="带bootloader情况的debug"><a class="markdownIt-Anchor" href="#带bootloader情况的debug"></a> 带bootloader情况的debug</h4><p>需要在debug设置中修改PC指针为APP程序的开始地址（第二个中断向量表的起始地址），不过建议对APP debug时将起始地址设置为0x08000000调试</p><h3 id="cubemx外设初始化代码生成在单独的源代码文件"><a class="markdownIt-Anchor" href="#cubemx外设初始化代码生成在单独的源代码文件"></a> Cubemx外设初始化代码生成在单独的源代码文件</h3><p>下载<a href="https://github.com/Paulo-Pecegueiro/LVGL_DEMOS_STM32" target="_blank" rel="noopener">这个</a>使用stm32cubeide生成的工程，发现外设的相关初始化代码分离在Core文件夹的每个.c.h文件里了（tm32cubeide默认生成在main.c里的），在看<a href="https://blog.csdn.net/qq_36347513/article/details/115132457" target="_blank" rel="noopener">这篇文章</a>时找到了设置方法：</p><p>每个外设生成独立的 <code>’.c/.h’</code> 文件不勾：所有初始化代码都生成在 main.c勾选：初始化代码生成在对应的外设文件。 如 GPIO 初始化代码生成在 gpio.c 中</p><p><img src="/4fafac1b/Cubemx%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%9C%A8%E5%AF%B9%E5%BA%94%E7%9A%84%E5%A4%96%E8%AE%BE%E6%96%87%E4%BB%B6.png" alt="Cubemx初始化代码生成在对应的外设文件"></p><p>参考：</p><p><a href="https://www.cnblogs.com/svchao/p/13954508.html" target="_blank" rel="noopener">STM32CUBEIDE中 Debug 和 Release 的作用/区别/使用场景</a></p><p><a href="https://blog.csdn.net/LU_ZHAO/article/details/104516291" target="_blank" rel="noopener">GCC 优化选项 -O -O0 -O1 -O2 -O3 -Os 简单介绍</a></p><h3 id="更改ld文件默认编辑器"><a class="markdownIt-Anchor" href="#更改ld文件默认编辑器"></a> 更改&quot;.ld&quot;文件默认编辑器</h3><p>默认打开&quot;.ld&quot;文件使用 Linker Script Editor，但注释部分字体颜色在暗黑主题的黑色背景下太暗了眼睛实在难受</p><p>找了一圈也没找到设置linker Script Editor注释字体颜色的指南，<a href="https://www.openstm32.org/forumthread2877" target="_blank" rel="noopener">有个讨论贴最接近的回答是：</a></p><blockquote><p>目前，没有设置来更改编辑器字符颜色。对我来说，唯一的解决方案是通过右键单击 ld 文件 &gt; 打开方式 &gt; 其他，使用另一个 Eclipse 编辑器或外部编辑器（例如 Windows 上的 NotePad++ 或 Linux 上的 Vim）打开文件</p></blockquote><p>好吧，我们右键随便一个&quot;.ld&quot;文件，打开方式里点击，Other...</p><p><img src="/4fafac1b/%E6%9B%B4%E6%94%B9ld%E6%96%87%E4%BB%B6%E9%BB%98%E8%AE%A4%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F-1.png" alt="更改ld文件默认打开方式-1"></p><p>然后，更改其他编辑器，试了几个，还是C/C++编辑器预览效果最好，勾选后应用到所有&quot;.ld&quot;文件，应用即可</p><p><img src="/4fafac1b/%E6%9B%B4%E6%94%B9ld%E6%96%87%E4%BB%B6%E9%BB%98%E8%AE%A4%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F-2.png" alt="更改ld文件默认打开方式-2"></p><p>预览效果，是不是好多了？</p><p><img src="/4fafac1b/%E6%9B%B4%E6%94%B9ld%E6%96%87%E4%BB%B6%E9%BB%98%E8%AE%A4%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F-3.png" alt="更改ld文件默认打开方式-3"></p><h3 id="如何更改-cubeide-中的内存区域"><a class="markdownIt-Anchor" href="#如何更改-cubeide-中的内存区域"></a> <a href="https://community.st.com/s/question/0D50X0000AnuMCOSQ2/how-to-change-memory-areas-in-cubeide" target="_blank" rel="noopener">如何更改 CubeIDE 中的内存区域？</a></h3><blockquote><p>更改项目中的内存区域，例如对于只读内存需要从 0x8080000 开始，0x40000 大小，该如何在 CubeIDE 中设置？</p></blockquote><p>Keil 有一个基于 GUI 的界面可以设置内存区域，但CubeIDE 中没有，目前唯一办法是修改 “.ld文件”（GCC的那一套）</p><p>例如H750VB的默认FLASH.ld的 MEMORY 划分：</p><p><img src="/4fafac1b/CUBEMX_H7_%E9%BB%98%E8%AE%A4%E5%86%85%E5%AD%98%E5%8C%BA%E5%88%92%E5%88%86.png" alt="CUBEMX_H7_默认内存区划分"></p><p>不论FLASH还是RAM划分，只要地址（注意对齐）和划区的大小在硬件支持的范围，那么具体哪个内存区域叫什么，起始其地址划多少，大小多少，可以自定义，比如你可以将RAM_D1 512K划分为 128K+384K两个区，再自定义个划区名字</p><p>我参考的安富莱V7教程说到，为了发挥H7最佳性能，鉴于DTCM是 400MHz 的，而其它的 RAM都是 200MHz，教程配套的例子主 RAM空间采用 TCM，而其它需要大 RAM或者DMA的场合，使用剩余 RAM空间</p><p>那么对于STM32CubeIDE默认是使用RAM_D1的，需要将 .data、 .bss、 heap、 stack全部换到DTCMRAM，（CubeIDE默认ld文件中，DTCMRAM起始地址0x20000000就是安富莱在Keil中自定义的IRAM1的起始地址，而RAM_D1起始地址0x24000000是安富莱Keil中的IRAM2）</p><p>先换一下 .data 段试试：（对象所在的内存区可以在Buid Analyzer查看）</p><table><thead><tr><th>.data段默认使用RAM_D1</th><th>修改为DTCMRAM，再次编译，发现已经移动到里面</th></tr></thead><tbody><tr><td><img src="/4fafac1b/CUBEMX_H7_%E4%BF%AE%E6%94%B9.data%E6%AE%B5%E4%BD%BF%E7%94%A8%E7%9A%84%E5%86%85%E5%AD%98%E5%8C%BA_%E9%BB%98%E8%AE%A4%E4%BD%BF%E7%94%A8RAM_D1.png" alt="CUBEMX_H7_修改.data段使用的内存区_默认使用RAM_D1"></td><td><img src="/4fafac1b/CUBEMX_H7_%E4%BF%AE%E6%94%B9.data%E6%AE%B5%E4%BD%BF%E7%94%A8%E7%9A%84%E5%86%85%E5%AD%98%E5%8C%BA_%E4%BF%AE%E6%94%B9%E4%B8%BADTCMRAM.png" alt="CUBEMX_H7_修改.data段使用的内存区_修改为DTCMRAM"></td></tr></tbody></table><p>但.bss和.user_heap_stack还在RAM_D1，也修改到DCTMRAM：</p><table><thead><tr><th>注意.user_heap_stack除了SECTION里，还有这两个参数要改</th><th>将SECTION中.bss和.user_heap_stack从RAM_D1修改为DTCMRAM，再次编译，发现已经移动到里面，至此完成将RAM_D1数据都搬到DCTMRAM</th></tr></thead><tbody><tr><td><img src="/4fafac1b/CUBEMX_H7_%E4%BF%AE%E6%94%B9_estack%E4%BD%BF%E7%94%A8%E7%9A%84%E5%86%85%E5%AD%98%E5%8C%BA_%E9%BB%98%E8%AE%A4%E4%BD%BF%E7%94%A8RAM_D1.png" alt="CUBEMX_H7_修改_estack使用的内存区_默认使用RAM_D1"></td><td><img src="/4fafac1b/CUBEMX_H7_%E4%BF%AE%E6%94%B9_estack%E4%BD%BF%E7%94%A8%E7%9A%84%E5%86%85%E5%AD%98%E5%8C%BA_%E4%BF%AE%E6%94%B9%E4%B8%BA%E4%BD%BF%E7%94%A8DTCMRAM.png" alt="CUBEMX_H7_修改_estack使用的内存区_修改为使用DTCMRAM"></td></tr></tbody></table><p>对于Flash，如果想自行划分套路差不多</p><p>更多&quot;.ld&quot;文件使用方法请参考：<a href="http://mcu.eetrend.com/files/2021-04/wen_zhang_/100100590-195836-lat0816stm32cubeideshiyongjiqiaozhildlianjiewenjianv10.pdf" target="_blank" rel="noopener">LAT0816：STM32CubeIDE 实用技巧之 ld 链接文件</a></p><h2 id="更新日期"><a class="markdownIt-Anchor" href="#更新日期"></a> 更新日期</h2><table><thead><tr><th>Date</th><th></th></tr></thead><tbody><tr><td>2021/01/13</td><td>C/C++混合编程注意点</td></tr><tr><td>2021/01/14</td><td>串口打印浮点数</td></tr><tr><td>2021/02/05</td><td>release 和 debug</td></tr><tr><td>2021/08/08</td><td>代理、UML、手动补全、CDT</td></tr><tr><td>2022/03/29</td><td>修复文章++号解析错误</td></tr><tr><td>2022/05/13</td><td>添加外设独立生成.c或.h文件</td></tr><tr><td>2022/08/17</td><td>更改&quot;.ld&quot;文件默认编辑器 + 如何更改 CubeIDE 中的内存区域？</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM32CubeIDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>老毛子拓展ext4分区大小</title>
      <link href="/2b131f00/"/>
      <url>/2b131f00/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="老毛子拓展ext4分区大小"><a class="markdownIt-Anchor" href="#老毛子拓展ext4分区大小"></a> 老毛子拓展ext4分区大小</h1><h2 id="起因"><a class="markdownIt-Anchor" href="#起因"></a> 起因</h2><p>分区的时候分了一个1TB的机械硬盘，如下:</p><table><thead><tr><th>文件名</th><th>起始柱面</th><th>结束柱面</th><th>大小</th><th>格式</th></tr></thead><tbody><tr><td>/dev/sda1</td><td>2048</td><td>1048580095</td><td>500G</td><td>ext4</td></tr><tr><td>/dev/sda2</td><td>1048580096</td><td>1953525167</td><td>461G</td><td>NTFS</td></tr></tbody></table><p>现在我想把/dev/sda2删除了，并将整个盘剩余空间分给/dev/sda1</p><a id="more"></a><h2 id="结果"><a class="markdownIt-Anchor" href="#结果"></a> 结果</h2><p>扩容成功，扩容前的内容没有丢失🐶</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ul><li><p><a href="https://www.geek-share.com/detail/2675570955.html" target="_blank" rel="noopener">使用resize2fs调整ext4分区大小</a></p></li><li><p><a href="https://blog.51cto.com/sandshell/2119523" target="_blank" rel="noopener">Linux下使用fdisk扩大分区容量（不丢失数据）</a></p></li><li><p><a href="https://www.jianshu.com/p/ba7090b1ef38" target="_blank" rel="noopener">Linux系统扩展硬盘空间</a></p></li><li><p><a href="https://my.oschina.net/falcon10086/blog/4308022" target="_blank" rel="noopener">openwrt 安装ipk软件包</a></p></li></ul><h2 id="相关命令"><a class="markdownIt-Anchor" href="#相关命令"></a> 相关命令</h2><ul><li><a href="https://www.linuxcool.com/fdisk" target="_blank" rel="noopener">fdisk命令 – 磁盘分区</a></li><li><a href="https://www.linuxcool.com/e2fsck" target="_blank" rel="noopener">e2fsck命令 – 检查使用 Linux ext2档案系统的partition是否正常工作</a></li><li><a href="https://www.linuxcool.com/resize2fs" target="_blank" rel="noopener">resize2fs命令 – 调整文件系统大小</a></li></ul><h2 id="fdisk"><a class="markdownIt-Anchor" href="#fdisk"></a> fdisk</h2><p>fdisk工具删除/dev/sda1，/dev/sda2分区，然后创建新分区，注意开始的磁柱号要和原来的一致（是保证数据不丢失的关键步骤），我/dev/sda1是2048，所以分区号还是1，终止柱面号默认回车使用剩余磁盘的全部柱面。（我的1TB机械默认的2048扇区头和1953525167扇区尾）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br></pre></td><td class="code"><pre><span class="line">Using username <span class="string">"oldgerman"</span>.</span><br><span class="line">oldgerman@192.168.233.1<span class="string">'s password:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">BusyBox v1.29.3 (2020-10-28 16:48:12 CST) built-in shell (ash)</span></span><br><span class="line"><span class="string">Enter '</span><span class="built_in">help</span><span class="string">' for a list of built-in commands.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[XY-C1 3.4.3.9-099_20-10-2]# 2020-10-30 15:51:57</span></span><br><span class="line"><span class="string">[EK-C1 /home/root]# fdisk -l</span></span><br><span class="line"><span class="string">Disk /dev/mtdblock0: 0 MB, 196608 bytes, 384 sectors</span></span><br><span class="line"><span class="string">0 cylinders, 255 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/mtdblock0 doesn'</span>t contain a valid partition table</span><br><span class="line">Disk /dev/mtdblock1: 0 MB, 65536 bytes, 128 sectors</span><br><span class="line">0 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mtdblock1 doesn<span class="string">'t contain a valid partition table</span></span><br><span class="line"><span class="string">Disk /dev/mtdblock2: 0 MB, 65536 bytes, 128 sectors</span></span><br><span class="line"><span class="string">0 cylinders, 255 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/mtdblock2 doesn'</span>t contain a valid partition table</span><br><span class="line">Disk /dev/mtdblock3: 1 MB, 1484288 bytes, 2899 sectors</span><br><span class="line">0 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mtdblock3 doesn<span class="string">'t contain a valid partition table</span></span><br><span class="line"><span class="string">Disk /dev/mtdblock4: 14 MB, 15292416 bytes, 29868 sectors</span></span><br><span class="line"><span class="string">1 cylinders, 255 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/mtdblock4 doesn'</span>t contain a valid partition table</span><br><span class="line">Disk /dev/mtdblock5: 15 MB, 16449536 bytes, 32128 sectors</span><br><span class="line">1 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mtdblock5 doesn<span class="string">'t contain a valid partition table</span></span><br><span class="line"><span class="string">Disk /dev/mtdblock6: 16 MB, 16777216 bytes, 32768 sectors</span></span><br><span class="line"><span class="string">2 cylinders, 255 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/mtdblock6 doesn'</span>t contain a valid partition table</span><br><span class="line">Disk /dev/sda: 932 GB, 1000204886016 bytes, 1953525168 sectors</span><br><span class="line">121601 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Device  Boot StartCHS    EndCHS        StartLBA     EndLBA    Sectors  Size Id Type</span><br><span class="line">/dev/sda1 *  0,32,33     1023,254,63       2048 1048580095 1048578048  500G 83 Linux</span><br><span class="line">[EK-C1 /home/root]<span class="comment"># fdisk /dev/sda</span></span><br><span class="line"></span><br><span class="line">The number of cylinders <span class="keyword">for</span> this disk is <span class="built_in">set</span> to 121601.</span><br><span class="line">There is nothing wrong with that, but this is larger than 1024,</span><br><span class="line">and could <span class="keyword">in</span> certain setups cause problems with:</span><br><span class="line">1) software that runs at boot time (e.g., old versions of LILO)</span><br><span class="line">2) booting and partitioning software from other OSs</span><br><span class="line">   (e.g., DOS FDISK, OS/2 FDISK)</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line">Disk /dev/sda: 932 GB, 1000204886016 bytes, 1953525168 sectors</span><br><span class="line">121601 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Device  Boot StartCHS    EndCHS        StartLBA     EndLBA    Sectors  Size Id Type</span><br><span class="line">/dev/sda1 *  0,32,33     1023,254,63       2048 1048580095 1048578048  500G 83 Linux</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): d</span><br><span class="line">Selected partition 1</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line">Disk /dev/sda: 932 GB, 1000204886016 bytes, 1953525168 sectors</span><br><span class="line">121601 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Device  Boot StartCHS    EndCHS        StartLBA     EndLBA    Sectors  Size Id Type</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span></span><br><span class="line">   p   primary partition (1-4)</span><br><span class="line">   e   extended</span><br><span class="line">p</span><br><span class="line">Partition number (1-4):</span><br><span class="line">Value is out of range</span><br><span class="line">Partition number (1-4):</span><br><span class="line">Value is out of range</span><br><span class="line">Partition number (1-4): 1</span><br><span class="line">First sector (2048-1953525167, default 2048):</span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector or +size&#123;,K,M,G,T&#125; (2048-1953525167, default 1953525167):</span><br><span class="line">Using default value 1953525167</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Calling ioctl() to re-read partition table</span><br><span class="line">[EK-C1 /home/root]<span class="comment"># e2fsck -f /dev/sda</span></span><br><span class="line">e2fsck 1.45.4 (23-Sep-2019)</span><br><span class="line">ext2fs_open2: Bad magic number <span class="keyword">in</span> super-block</span><br><span class="line">e2fsck: Superblock invalid, trying backup blocks...</span><br><span class="line">e2fsck: Bad magic number <span class="keyword">in</span> super-block <span class="keyword">while</span> trying to open /dev/sda</span><br><span class="line"></span><br><span class="line">The superblock could not be <span class="built_in">read</span> or does not describe a valid ext2/ext3/ext4</span><br><span class="line">filesystem.  If the device is valid and it really contains an ext2/ext3/ext4</span><br><span class="line">filesystem (and not swap or ufs or something <span class="keyword">else</span>), <span class="keyword">then</span> the superblock</span><br><span class="line">is corrupt, and you might try running e2fsck with an alternate superblock:</span><br><span class="line">    e2fsck -b 8193 &lt;device&gt;</span><br><span class="line"> or</span><br><span class="line">    e2fsck -b 32768 &lt;device&gt;</span><br><span class="line"></span><br><span class="line">[EK-C1 /home/root]<span class="comment"># e2fsck -f /dev/sda1</span></span><br><span class="line">e2fsck 1.45.4 (23-Sep-2019)</span><br><span class="line">e2fsck: No such file or directory <span class="keyword">while</span> trying to open /dev/sda1</span><br><span class="line">Possibly non-existent device?</span><br><span class="line">[EK-C1 /home/root]<span class="comment"># e2fsck -f /dev/sda1</span></span><br><span class="line">e2fsck 1.45.4 (23-Sep-2019)</span><br><span class="line">e2fsck: No such file or directory <span class="keyword">while</span> trying to open /dev/sda1</span><br><span class="line">Possibly non-existent device?</span><br><span class="line">[EK-C1 /home/root]<span class="comment"># df -h</span></span><br><span class="line">Filesystem                Size      Used Available Use% Mounted on</span><br><span class="line">rootfs                   12.4M     12.4M         0 100% /</span><br><span class="line">/dev/root                12.4M     12.4M         0 100% /</span><br><span class="line">tmpfs                     8.0K         0      8.0K   0% /dev</span><br><span class="line">tmpfs                    20.0M      2.1M     17.9M  10% /etc</span><br><span class="line">tmpfs                     1.0M      4.0K   1020.0K   0% /home</span><br><span class="line">tmpfs                     8.0K         0      8.0K   0% /media</span><br><span class="line">tmpfs                     8.0K         0      8.0K   0% /mnt</span><br><span class="line">tmpfs                    40.0M      1.5M     38.5M   4% /tmp</span><br><span class="line">tmpfs                     4.0M    104.0K      3.9M   3% /var</span><br><span class="line">tmpfs                    40.0M      1.5M     38.5M   4% /opt</span><br><span class="line">[EK-C1 /home/root]<span class="comment"># fdisk -l</span></span><br><span class="line">Disk /dev/mtdblock0: 0 MB, 196608 bytes, 384 sectors</span><br><span class="line">0 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mtdblock0 doesn<span class="string">'t contain a valid partition table</span></span><br><span class="line"><span class="string">Disk /dev/mtdblock1: 0 MB, 65536 bytes, 128 sectors</span></span><br><span class="line"><span class="string">0 cylinders, 255 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/mtdblock1 doesn'</span>t contain a valid partition table</span><br><span class="line">Disk /dev/mtdblock2: 0 MB, 65536 bytes, 128 sectors</span><br><span class="line">0 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mtdblock2 doesn<span class="string">'t contain a valid partition table</span></span><br><span class="line"><span class="string">Disk /dev/mtdblock3: 1 MB, 1484288 bytes, 2899 sectors</span></span><br><span class="line"><span class="string">0 cylinders, 255 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/mtdblock3 doesn'</span>t contain a valid partition table</span><br><span class="line">Disk /dev/mtdblock4: 14 MB, 15292416 bytes, 29868 sectors</span><br><span class="line">1 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mtdblock4 doesn<span class="string">'t contain a valid partition table</span></span><br><span class="line"><span class="string">Disk /dev/mtdblock5: 15 MB, 16449536 bytes, 32128 sectors</span></span><br><span class="line"><span class="string">1 cylinders, 255 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/mtdblock5 doesn'</span>t contain a valid partition table</span><br><span class="line">Disk /dev/mtdblock6: 16 MB, 16777216 bytes, 32768 sectors</span><br><span class="line">2 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mtdblock6 doesn<span class="string">'t contain a valid partition table</span></span><br><span class="line"><span class="string">Disk /dev/sda: 932 GB, 1000204886016 bytes, 1953525168 sectors</span></span><br><span class="line"><span class="string">382818 cylinders, 81 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Device  Boot StartCHS    EndCHS        StartLBA     EndLBA    Sectors  Size Id Type</span></span><br><span class="line"><span class="string">/dev/sda1    0,32,33     769,80,63         2048 1953525167 1953523120  931G 83 Linux</span></span><br><span class="line"><span class="string">[EK-C1 /home/root]# e2fsck -f /dev/sda1</span></span><br><span class="line"><span class="string">e2fsck 1.45.4 (23-Sep-2019)</span></span><br><span class="line"><span class="string">e2fsck: No such file or directory while trying to open /dev/sda1</span></span><br><span class="line"><span class="string">Possibly non-existent device?</span></span><br><span class="line"><span class="string">[EK-C1 /home/root]# e2fsck -f /dev/sda</span></span><br><span class="line"><span class="string">e2fsck 1.45.4 (23-Sep-2019)</span></span><br><span class="line"><span class="string">ext2fs_open2: Bad magic number in super-block</span></span><br><span class="line"><span class="string">e2fsck: Superblock invalid, trying backup blocks...</span></span><br><span class="line"><span class="string">e2fsck: Bad magic number in super-block while trying to open /dev/sda</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The superblock could not be read or does not describe a valid ext2/ext3/ext4</span></span><br><span class="line"><span class="string">filesystem.  If the device is valid and it really contains an ext2/ext3/ext4</span></span><br><span class="line"><span class="string">filesystem (and not swap or ufs or something else), then the superblock</span></span><br><span class="line"><span class="string">is corrupt, and you might try running e2fsck with an alternate superblock:</span></span><br><span class="line"><span class="string">    e2fsck -b 8193 &lt;device&gt;</span></span><br><span class="line"><span class="string"> or</span></span><br><span class="line"><span class="string">    e2fsck -b 32768 &lt;device&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[EK-C1 /home/root]# resize2fs /dev/sda1</span></span><br><span class="line"><span class="string">-sh: resize2fs: not found</span></span><br><span class="line"><span class="string">[EK-C1 /home/root]# e2fsck</span></span><br><span class="line"><span class="string">Usage: e2fsck [-panyrcdfktvDFV] [-b superblock] [-B blocksize]</span></span><br><span class="line"><span class="string">                [-l|-L bad_blocks_file] [-C fd] [-j external_journal]</span></span><br><span class="line"><span class="string">                [-E extended-options] [-z undo_file] device</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Emergency help:</span></span><br><span class="line"><span class="string"> -p                   Automatic repair (no questions)</span></span><br><span class="line"><span class="string"> -n                   Make no changes to the filesystem</span></span><br><span class="line"><span class="string"> -y                   Assume "yes" to all questions</span></span><br><span class="line"><span class="string"> -c                   Check for bad blocks and add them to the badblock list</span></span><br><span class="line"><span class="string"> -f                   Force checking even if filesystem is marked clean</span></span><br><span class="line"><span class="string"> -v                   Be verbose</span></span><br><span class="line"><span class="string"> -b superblock        Use alternative superblock</span></span><br><span class="line"><span class="string"> -B blocksize         Force blocksize when looking for superblock</span></span><br><span class="line"><span class="string"> -j external_journal  Set location of the external journal</span></span><br><span class="line"><span class="string"> -l bad_blocks_file   Add to badblocks list</span></span><br><span class="line"><span class="string"> -L bad_blocks_file   Set badblocks list</span></span><br><span class="line"><span class="string"> -z undo_file         Create an undo file</span></span><br><span class="line"><span class="string">[EK-C1 /home/root]# e2fsck -f /dev/sda1</span></span><br><span class="line"><span class="string">e2fsck 1.45.4 (23-Sep-2019)</span></span><br><span class="line"><span class="string">e2fsck: No such file or directory while trying to open /dev/sda1</span></span><br><span class="line"><span class="string">Possibly non-existent device?</span></span><br><span class="line"><span class="string">[EK-C1 /home/root]# fdisk -l</span></span><br><span class="line"><span class="string">Disk /dev/mtdblock0: 0 MB, 196608 bytes, 384 sectors</span></span><br><span class="line"><span class="string">0 cylinders, 255 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/mtdblock0 doesn'</span>t contain a valid partition table</span><br><span class="line">Disk /dev/mtdblock1: 0 MB, 65536 bytes, 128 sectors</span><br><span class="line">0 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mtdblock1 doesn<span class="string">'t contain a valid partition table</span></span><br><span class="line"><span class="string">Disk /dev/mtdblock2: 0 MB, 65536 bytes, 128 sectors</span></span><br><span class="line"><span class="string">0 cylinders, 255 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/mtdblock2 doesn'</span>t contain a valid partition table</span><br><span class="line">Disk /dev/mtdblock3: 1 MB, 1484288 bytes, 2899 sectors</span><br><span class="line">0 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mtdblock3 doesn<span class="string">'t contain a valid partition table</span></span><br><span class="line"><span class="string">Disk /dev/mtdblock4: 14 MB, 15292416 bytes, 29868 sectors</span></span><br><span class="line"><span class="string">1 cylinders, 255 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/mtdblock4 doesn'</span>t contain a valid partition table</span><br><span class="line">Disk /dev/mtdblock5: 15 MB, 16449536 bytes, 32128 sectors</span><br><span class="line">1 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mtdblock5 doesn<span class="string">'t contain a valid partition table</span></span><br><span class="line"><span class="string">Disk /dev/mtdblock6: 16 MB, 16777216 bytes, 32768 sectors</span></span><br><span class="line"><span class="string">2 cylinders, 255 heads, 63 sectors/track</span></span><br><span class="line"><span class="string">Units: sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/mtdblock6 doesn'</span>t contain a valid partition table</span><br><span class="line">Disk /dev/sda: 932 GB, 1000204886016 bytes, 1953525168 sectors</span><br><span class="line">382818 cylinders, 81 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Device  Boot StartCHS    EndCHS        StartLBA     EndLBA    Sectors  Size Id Type</span><br><span class="line">/dev/sda1    0,32,33     769,80,63         2048 1953525167 1953523120  931G 83 Linux</span><br><span class="line">[EK-C1 /home/root]<span class="comment"># mount</span></span><br><span class="line">rootfs on / <span class="built_in">type</span> rootfs (rw)</span><br><span class="line">/dev/root on / <span class="built_in">type</span> squashfs (ro,relatime)</span><br><span class="line">proc on /proc <span class="built_in">type</span> proc (rw,relatime)</span><br><span class="line">sysfs on /sys <span class="built_in">type</span> sysfs (rw,relatime)</span><br><span class="line">usbfs on /proc/bus/usb <span class="built_in">type</span> usbfs (rw,relatime)</span><br><span class="line">tmpfs on /dev <span class="built_in">type</span> tmpfs (rw,relatime,size=8k)</span><br><span class="line">tmpfs on /etc <span class="built_in">type</span> tmpfs (rw,noatime,size=20480k)</span><br><span class="line">tmpfs on /home <span class="built_in">type</span> tmpfs (rw,relatime,size=1024k)</span><br><span class="line">tmpfs on /media <span class="built_in">type</span> tmpfs (rw,relatime,size=8k)</span><br><span class="line">tmpfs on /mnt <span class="built_in">type</span> tmpfs (rw,relatime,size=8k)</span><br><span class="line">tmpfs on /tmp <span class="built_in">type</span> tmpfs (rw,relatime,size=40960k)</span><br><span class="line">tmpfs on /var <span class="built_in">type</span> tmpfs (rw,relatime,size=4096k)</span><br><span class="line">devpts on /dev/pts <span class="built_in">type</span> devpts (rw,relatime,mode=600)</span><br><span class="line">tmpfs on /opt <span class="built_in">type</span> tmpfs (rw,relatime,size=40960k)</span><br><span class="line">[EK-C1 /home/root]<span class="comment"># e2fsck -f /dev/sdb1</span></span><br><span class="line">e2fsck 1.45.4 (23-Sep-2019)</span><br><span class="line">e2fsck: No such file or directory <span class="keyword">while</span> trying to open /dev/sdb1</span><br><span class="line">Possibly non-existent device?</span><br><span class="line">[EK-C1 /home/root]<span class="comment"># cd /dev</span></span><br><span class="line">[EK-C1 /dev]<span class="comment"># ls</span></span><br><span class="line">bus                 mtd1                network_latency</span><br><span class="line">console             mtd1ro              network_throughput</span><br><span class="line">cpu_dma_latency     mtd2                null</span><br><span class="line">full                mtd2ro              nvram</span><br><span class="line">gpio                mtd3                port</span><br><span class="line">hwnat0              mtd3ro              ppp</span><br><span class="line">i2cM0               mtd4                ptmx</span><br><span class="line">kmsg                mtd4ro              pts</span><br><span class="line"><span class="built_in">log</span>                 mtd5                random</span><br><span class="line">loop-control        mtd5ro              rdm0</span><br><span class="line">loop0               mtd6                root</span><br><span class="line">loop1               mtd6ro              sda</span><br><span class="line">loop2               mtdblock0           sg0</span><br><span class="line">loop3               mtdblock1           spiS0</span><br><span class="line">loop4               mtdblock2           tty</span><br><span class="line">loop5               mtdblock3           ttyS0</span><br><span class="line">loop6               mtdblock4           urandom</span><br><span class="line">loop7               mtdblock5           usbdev1.1</span><br><span class="line">mem                 mtdblock6           usbdev2.1</span><br><span class="line">mtd0                mtk_esw             zero</span><br><span class="line">mtd0ro              net</span><br><span class="line">[EK-C1 /dev]<span class="comment"># e2fsck -f /dev/sda</span></span><br><span class="line">e2fsck 1.45.4 (23-Sep-2019)</span><br><span class="line">ext2fs_open2: Bad magic number <span class="keyword">in</span> super-block</span><br><span class="line">e2fsck: Superblock invalid, trying backup blocks...</span><br><span class="line">e2fsck: Bad magic number <span class="keyword">in</span> super-block <span class="keyword">while</span> trying to open /dev/sda</span><br><span class="line"></span><br><span class="line">The superblock could not be <span class="built_in">read</span> or does not describe a valid ext2/ext3/ext4</span><br><span class="line">filesystem.  If the device is valid and it really contains an ext2/ext3/ext4</span><br><span class="line">filesystem (and not swap or ufs or something <span class="keyword">else</span>), <span class="keyword">then</span> the superblock</span><br><span class="line">is corrupt, and you might try running e2fsck with an alternate superblock:</span><br><span class="line">    e2fsck -b 8193 &lt;device&gt;</span><br><span class="line"> or</span><br><span class="line">    e2fsck -b 32768 &lt;device&gt;</span><br><span class="line"></span><br><span class="line">[EK-C1 /dev]<span class="comment"># fsck -f /dev/sda</span></span><br><span class="line">-sh: fsck: not found</span><br><span class="line">[EK-C1 /dev]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="e2fsck"><a class="markdownIt-Anchor" href="#e2fsck"></a> e2fsck</h2><p>重启老毛子，在磁盘页取消挂载后用putty进入ssh，对fdisk扩容后的/dev/sda1分区使用e2fsck 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Using username <span class="string">"oldgerman"</span>.</span><br><span class="line">oldgerman@192.168.233.1<span class="string">'s password:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">BusyBox v1.29.3 (2020-10-28 16:48:12 CST) built-in shell (ash)</span></span><br><span class="line"><span class="string">Enter '</span><span class="built_in">help</span><span class="string">' for a list of built-in commands.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[XY-C1 3.4.3.9-099_20-10-2]# 2020-10-30 16:07:09</span></span><br><span class="line"><span class="string">[EK-C1 /home/root]# e2fsck  -f    /dev/sda</span></span><br><span class="line"><span class="string">e2fsck 1.45.4 (23-Sep-2019)</span></span><br><span class="line"><span class="string">ext2fs_open2: Bad magic number in super-block</span></span><br><span class="line"><span class="string">e2fsck: Superblock invalid, trying backup blocks...</span></span><br><span class="line"><span class="string">e2fsck: Bad magic number in super-block while trying to open /dev/sda</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The superblock could not be read or does not describe a valid ext2/ext3/ext4</span></span><br><span class="line"><span class="string">filesystem.  If the device is valid and it really contains an ext2/ext3/ext4</span></span><br><span class="line"><span class="string">filesystem (and not swap or ufs or something else), then the superblock</span></span><br><span class="line"><span class="string">is corrupt, and you might try running e2fsck with an alternate superblock:</span></span><br><span class="line"><span class="string">    e2fsck -b 8193 &lt;device&gt;</span></span><br><span class="line"><span class="string"> or</span></span><br><span class="line"><span class="string">    e2fsck -b 32768 &lt;device&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[EK-C1 /home/root]# e2fsck  -f    /dev/sda1</span></span><br><span class="line"><span class="string">e2fsck 1.45.4 (23-Sep-2019)</span></span><br><span class="line"><span class="string">Pass 1: Checking inodes, blocks, and sizes</span></span><br><span class="line"><span class="string">Pass 2: Checking directory structure</span></span><br><span class="line"><span class="string">Pass 3: Checking directory connectivity</span></span><br><span class="line"><span class="string">Pass 4: Checking reference counts</span></span><br><span class="line"><span class="string">Pass 5: Checking group summary information</span></span><br><span class="line"><span class="string">/dev/sda1: 73680/61054976 files (1.1% non-contiguous), 81815376/244190390 blocks</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[EK-C1 /home/root]#</span></span><br></pre></td></tr></table></figure><h2 id="重启resize2fs检查"><a class="markdownIt-Anchor" href="#重启resize2fs检查"></a> 重启，resize2fs检查</h2><p>老毛子默认是没有resize2fs命令的，我用电脑科学上网到<a href="http://bin.entware.net/mipselsf-k3.4/resize2fs_1.45.6-1_mipsel-3.4.ipk%E4%B8%8B%E8%BD%BD%E5%90%8E%E4%BC%A0%E5%88%B0/tmp%E6%96%87%E4%BB%B6%E5%A4%B9%E7%94%A8" target="_blank" rel="noopener">http://bin.entware.net/mipselsf-k3.4/resize2fs_1.45.6-1_mipsel-3.4.ipk下载后传到/tmp文件夹用</a> opkg install 安装的，安装完自动配置环境变量，而且tmp下的安装包也不见了就很神奇</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Using username <span class="string">"oldgerman"</span>.</span><br><span class="line">oldgerman@192.168.233.1<span class="string">'s password:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">BusyBox v1.29.3 (2020-10-28 16:48:12 CST) built-in shell (ash)</span></span><br><span class="line"><span class="string">Enter '</span><span class="built_in">help</span><span class="string">' for a list of built-in commands.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[XY-C1 3.4.3.9-099_20-10-2]# 2020-10-30 16:13:38</span></span><br><span class="line"><span class="string">[EK-C1 /opt/home/admin]# resize2fs /dev/sda1</span></span><br><span class="line"><span class="string">resize2fs 1.45.6 (20-Mar-2020)</span></span><br><span class="line"><span class="string">The filesystem is already 244190390 (4k) blocks long.  Nothing to do!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[EK-C1 /opt/home/admin]#</span></span><br></pre></td></tr></table></figure><h2 id="检查"><a class="markdownIt-Anchor" href="#检查"></a> 检查</h2><p>opt挂载正常，可道云正常</p><p><img src="/2b131f00/%E6%A3%80%E6%9F%A5%E6%8B%93%E5%B1%95%E5%90%8E%E7%9A%84%E7%A3%81%E7%9B%98.png" alt="20201030164355"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 老毛子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>老毛子KodExplorer从上级路由访问</title>
      <link href="/7cbfbaea/"/>
      <url>/7cbfbaea/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="老毛子kodexplorer从上级路由访问"><a class="markdownIt-Anchor" href="#老毛子kodexplorer从上级路由访问"></a> 老毛子KodExplorer从上级路由访问</h1><h2 id="起因"><a class="markdownIt-Anchor" href="#起因"></a> 起因</h2><p>因为宿舍里用蹭室友的上级路由的网，于是小娱就接到TP-LINK下级了，我的电脑再接小娱，上级的TP-LINK因为开了Wifi服务，我的手机想连TP-LINK的wifif看小娱硬盘里的片，直接肯定是访问不了小娱的内网的可道云的，所以我们需要使用老毛子的<span style="color:rgb(255, 150, 200);">端口映射</span>功能</p><a id="more"></a><h2 id="开始吧"><a class="markdownIt-Anchor" href="#开始吧"></a> 开始吧！</h2><h3 id="检查可道云设置"><a class="markdownIt-Anchor" href="#检查可道云设置"></a> 检查可道云设置</h3><p>在什么地方：搭建web环境</p><p>如何安装网上有很多，这里不教~</p><p>设置为我下面的即可，服务端口默认是88，你也可以根据喜好改成其他的数字，我就用默认的</p><p><img src="/7cbfbaea/10.1%E5%8F%AF%E9%81%93%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%90%AF%E7%94%A8.png" alt="10.1可道云服务启用"></p><p><img src="/7cbfbaea/10.2%E5%8F%AF%E9%81%93%E4%BA%91%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8F%A3.png" alt="10.2可道云服务端口"></p><h3 id="修改为静态ip地址"><a class="markdownIt-Anchor" href="#修改为静态ip地址"></a> 修改为静态IP地址</h3><p>在什么地方：外部网络 - 外网设置</p><p>TP-LINK打开的DNS服务随机分配IP给小娱是跑不了了，所以首先我们把小娱的外网连接类型默认的动态IP，改为静态IP地址：</p><table><thead><tr><th>检查连接类型</th><th>改为静态IP</th></tr></thead><tbody><tr><td><img src="/7cbfbaea/1.%E6%A3%80%E6%9F%A5%E8%BF%9E%E6%8E%A5%E7%B1%BB%E5%9E%8B.png" alt="1.检查连接类型"></td><td><img src="/7cbfbaea/1.1.%E6%94%B9%E4%B8%BA%E9%9D%99%E6%80%81IP.png" alt="1.1.改为静态IP"></td></tr></tbody></table><p>由于上级的TP-LINK网关地址为192.168.1.1，所以我就将小于的静态IP地址改为192.168.1.233了，可以在上级路由器看到：</p><p><img src="/7cbfbaea/1.1.TP-LINK%E7%9C%8B%E5%B0%8F%E5%A8%B1%E7%9A%84%E9%9D%99%E6%80%81IP.png" alt="1.1.TP-LINK看小娱的静态IP"></p><h3 id="手动端口映射"><a class="markdownIt-Anchor" href="#手动端口映射"></a> 手动端口映射</h3><p>在什么地方：外部网络 - 端口转发(UPnP)</p><p>只用填</p><ol><li>端口范围（可道云默认是88端口，我就填88）</li><li>内网IP（是你的小娱的内网小娱的IP地址... 嘿，小娱在这儿当网关呢！我的是192.168.233.1）,</li><li>协议（就是TCP了）</li></ol><p><img src="/7cbfbaea/3.%E6%89%8B%E5%8A%A8%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84.png" alt="3.手动端口映射"></p><h3 id="防火墙允许端口转发"><a class="markdownIt-Anchor" href="#防火墙允许端口转发"></a> 防火墙允许端口转发</h3><p>在什么地方：防火墙 - 通用设置</p><p>打开即可：</p><p>![2.允许外网访问 Transmission](老毛子KodExplorer从上级路由访问/2.允许外网访问 Transmission.png)</p><h2 id="享受"><a class="markdownIt-Anchor" href="#享受"></a> 享受！</h2><p>TP-LINK和小娱都无需重启，打开手机连上TP-LINK的wifi，浏览器输入192.168.1.233:88，即可访问内网小娱的可道云</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 老毛子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DarkPill使用非8MHz晶振</title>
      <link href="/201e530f/"/>
      <url>/201e530f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/201e530f/title.png" alt="title"></p><p><a href="https://github.com/oldgerman/DarkPill" target="_blank" rel="noopener">DarkPill开发板github项目地址</a></p><h2 id="预备知识"><a class="markdownIt-Anchor" href="#预备知识"></a> 预备知识</h2><p><a href="https://www.stmcu.org.cn/document/detail/index/id-200272" target="_blank" rel="noopener">RM0008 - STM32F10x参考手册-中文</a></p><h3 id="stm32的启动模式"><a class="markdownIt-Anchor" href="#stm32的启动模式"></a> STM32的启动模式</h3><p>RM0008：P33</p><p><img src="/201e530f/boot-mode.png" alt="boot-mode"></p><h4 id="darkpill的boot0boot1reset"><a class="markdownIt-Anchor" href="#darkpill的boot0boot1reset"></a> DarkPill的BOOT0，BOOT1，Reset</h4><p>DarkPill的BOOT0默认下拉，按下开关为高电平，BOOT1为串100K悬空(悬空是低电平)，Reset默认上拉，按下开关复位</p><a id="more"></a><h3 id="stm32的刷机方式"><a class="markdownIt-Anchor" href="#stm32的刷机方式"></a> STM32的刷机方式</h3><p>三种最常用的：</p><h4 id="串口芯片刷机"><a class="markdownIt-Anchor" href="#串口芯片刷机"></a> 串口芯片刷机</h4><p>RM0008： P60</p><p>“The values on the BOOT pins are lated on the 4th rising edge of SYSCLK after a reset（复位后，BOOT0引脚和nBOOT1位上的值在SYSCLK的第4个上升沿被锁存）”</p><p><a href="https://blog.csdn.net/qq_29545231/article/details/77915544" target="_blank" rel="noopener">STM32用CH340下载程序的方法</a></p><h4 id="swd刷机"><a class="markdownIt-Anchor" href="#swd刷机"></a> SWD刷机</h4><p>SWD接口直接连接Cortex-M3内核，无需复位操作，直接接上ST-LINK烧录</p><h4 id="dfu刷机"><a class="markdownIt-Anchor" href="#dfu刷机"></a> DFU刷机</h4><p><a href="#DFU%E7%9A%84%E4%B8%A4%E7%A7%8D%E7%BC%96%E7%A8%8B%E6%A8%A1%E5%BC%8F">DFU的两种编程模式</a></p><h3 id="外部高速晶振hse与usb总线时钟"><a class="markdownIt-Anchor" href="#外部高速晶振hse与usb总线时钟"></a> 外部高速晶振(HSE)与USB总线时钟</h3><p>P1:</p><p><img src="/201e530f/f103_datasheet_page1.jpg" alt="f103_datasheet_page1"></p><p>P12:</p><p><img src="/201e530f/HSE_PLL_USBCLK.png" alt="HSE_PLL_USBCLK"></p><p>stm32f103支持晶振频率的范围为4-16Mhz的任意整数，要使USBCLK正常工作在48MHz，必须要使能HSE(外部高速时钟)和PLL，根据时钟树的顺序，可以得出下表，可见只要主频SYSCLK一样USB时钟频率就一样，72MHz主频下使用不同晶振只需修改PLL倍数(PLLMUL)</p><table><thead><tr><th>HSE频率(MHz)</th><th>PLLMUL</th><th>SYCLK(MHz)</th><th>2xPLLCLK</th><th>USB预分频器</th><th>USB时钟频率(MHz)</th></tr></thead><tbody><tr><td>8</td><td>x9</td><td>72</td><td>144</td><td>/3</td><td>48</td></tr><tr><td>12</td><td>x6</td><td>72</td><td>144</td><td>/3</td><td>48</td></tr><tr><td>16</td><td>x4</td><td>72</td><td>144</td><td>/3</td><td>48</td></tr></tbody></table><p><a href="https://d1.amobbs.com/bbs_upload782111/files_46/ourdev_687013TGMATN.pdf" target="_blank" rel="noopener">STM32的时钟树.pdf</a></p><p><a href="https://zhuanlan.zhihu.com/p/23805341" target="_blank" rel="noopener">RCC时钟配置实践</a></p><h3 id="dfu的两种编程模式"><a class="markdownIt-Anchor" href="#dfu的两种编程模式"></a> DFU的两种编程模式</h3><p><strong>关键词：</strong> ISP模式，IAP模式，自举驱动程序</p><p>“对于STM32F1系列，只有互联型子系列STM32 F105/STM32F107支持通过DFU方式实现ISP编程， 所谓ISP模式就是指MCU芯片出厂时内部已集成了DFU相关自举驱动代码，利用它并借助USB接口即可将用户应用程序下载进芯片。而其它STM32F1芯片即使带USB模块，若想利用DFU方式编程就只能自行编写DFU自举驱动，即通过IAP模式实现用户程序的下载或升级...” 👉 <a href="https://blog.csdn.net/zhjmyx/article/details/53056351" target="_blank" rel="noopener">原文轻戳</a></p><h2 id="在aduino-ide下使用"><a class="markdownIt-Anchor" href="#在aduino-ide下使用"></a> 在Aduino IDE下使用</h2><h3 id="arduino_stm32"><a class="markdownIt-Anchor" href="#arduino_stm32"></a> Arduino_STM32</h3><p><a href="https://github.com/rogerclarkmelbourne/Arduino_STM32" target="_blank" rel="noopener">github地址</a></p><p>按照<a href="https://github.com/rogerclarkmelbourne/Arduino_STM32/wiki" target="_blank" rel="noopener">wiki</a>里的<a href="https://github.com/rogerclarkmelbourne/Arduino_STM32/wiki/Installation" target="_blank" rel="noopener">Installation</a>步骤（下载安装开发板包，安装Due开发板以间接安装g++工具链）</p><p>arduino环境支持的三种常见的烧录方式已经在DarkPill的README.md中演示</p><p>我们来说说使用stm32duino-bootloader实现USB-C烧录F103：</p><h3 id="stm32duino-bootloader"><a class="markdownIt-Anchor" href="#stm32duino-bootloader"></a> STM32duino-bootloader</h3><p><a href="https://github.com/rogerclarkmelbourne/STM32duino-bootloader" target="_blank" rel="noopener">github地址</a></p><p>作者是<span style="color:BlueViolet;">罗杰·克拉克</span>(澳洲)，他将<a href="https://github.com/leaflabs/maple-bootloader" target="_blank" rel="noopener">maple-bootloader</a>改良，让更多的F103开发板能以IAP模式实现DFU烧录程序，这么好的东西DarkPill是不是可以直接用呢？但经过测试发现，他老人家仓库里编译的二进制文件仅适用于板载8MHz晶振的F103，而我的目前DarkPill板载是3225 12Mhz晶振（大真空3225 8Mhz晶振刚下单，逃）</p><h4 id="烧录stm32duino-bootloader"><a class="markdownIt-Anchor" href="#烧录stm32duino-bootloader"></a> 烧录stm32duino-bootloader</h4><h5 id="连接"><a class="markdownIt-Anchor" href="#连接"></a> 连接</h5><table><thead><tr><th>ch340/FT232</th><th>stm32f103</th></tr></thead><tbody><tr><td>RX</td><td>PA9</td></tr><tr><td>TX</td><td>PA10</td></tr><tr><td>GND</td><td>GND</td></tr></tbody></table><h5 id="烧录"><a class="markdownIt-Anchor" href="#烧录"></a> 烧录</h5><p>烧录的STM32duino-bootloader与3225晶振频率的对应表：</p><table><thead><tr><th>HSE</th><th>bin</th></tr></thead><tbody><tr><td>8MHz</td><td>generic_boot20_pc13.bin<b>or generic_boot20_pc13_8MHz.bin</b></td></tr><tr><td>12MHz</td><td>generic_boot20_pc13_12MHz.bin</td></tr><tr><td>16MHz</td><td>generic_boot20_pc13_16MHz.bin</td></tr></tbody></table><p>以上bootloader文件在DarkPill github仓库的“STM32duino-bootloader for DarkPill”文件夹里，如何编译请看<a href="#%E8%A7%A3%E5%86%B3stm32duino-bootloader%E6%99%B6%E6%8C%AF%E9%A2%91%E7%8E%87%E4%B8%8D%E5%8C%B9%E9%85%8D">解决stm32duino-bootloader晶振频率不匹配</a></p><p>将正确的bootloader复制到<strong>arduino-1.8.10\hardware\Arduino_STM32\tools\win</strong>的目录下，在这个目录有<strong>stm32flash.exe</strong>烧写工具，我们接下来要使用它</p><p>在目录栏直接输入<code>cmd</code> 回车唤出黑白命令框</p><p><img src="/201e530f/cmd.jpg" alt="20200814010947"></p><p>执行<code>stm32flash.exe -w generic_boot20_pc13.bin -v -g 0x0 COM23</code></p><p>注：上方命令最后的COM后的数字取决于你串口烧录器的端口号</p><p>使用CH340正常烧录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">D:\arduino-1.8.10\hardware\Arduino_STM32\tools\win&gt;stm32flash.exe -w generic_boot20_pc13.bin -v -g 0x0 COM23</span><br><span class="line">stm32flash 0.4</span><br><span class="line"></span><br><span class="line">http://stm32flash.googlecode.com/</span><br><span class="line"></span><br><span class="line">Using Parser : Raw BINARY</span><br><span class="line">Interface serial_w32: 57600 8E1</span><br><span class="line">Version      : 0x22</span><br><span class="line">Option 1     : 0x00</span><br><span class="line">Option 2     : 0x00</span><br><span class="line">Device ID    : 0x0410 (Medium-density)</span><br><span class="line">- RAM        : 20KiB  (512b reserved by bootloader)</span><br><span class="line">- Flash      : 128KiB (sector size: 4x1024)</span><br><span class="line">- Option RAM : 16b</span><br><span class="line">- System RAM : 2KiB</span><br><span class="line">Write to memory</span><br><span class="line">Erasing memory</span><br><span class="line">Wrote and verified address 0x080056fc (100.00%) Done.</span><br><span class="line"></span><br><span class="line">Starting execution at address 0x08000000... <span class="keyword">done</span>.</span><br></pre></td></tr></table></figure><p>烧录后，需要按一次reset，会执行stm32duino-bootloader自带的例程：PC13的LED飞速闪烁几下</p><p>打开设备和管理器，可以看到Maple DFU:</p><p><img src="/201e530f/Maple-DFU.png" alt="20200814010947"></p><p>但它还没有被win10识别为COM端口，所以还要安装驱动程序，到<strong>arduino-1.8.10\hardware\Arduino_STM32\drivers\win</strong>目录下，以管理员身份先后运行install_drivers.bat和install_STM_COM_drivers.bat批处理程序，等待驱动安装，提示如下：</p><table><thead><tr><th>install_drivers.bat</th><th>install_STM_COM_drivers.bat</th></tr></thead><tbody><tr><td><img src="/201e530f/install_drivers.bat.png" alt="install_drivers.bat"></td><td><img src="/201e530f/install_STM_COM_drivers.bat.png" alt="install_STM_COM_drivers.bat"></td></tr></tbody></table><p>之后，你发现安装完成后STM32F103还是没有被识别为COM号，所以请继续：</p><p>打开arduino ide，选择一个基础例程程序，在COM为灰色的情况下上传，ide会自动识别Maple DFU</p><p><img src="/201e530f/Maple-NON-COM.png" alt="20200814230533"></p><p>然后下次就能正常识别为COM了</p><p><img src="/201e530f/Maple-COM.png" alt="20200814011155"></p><h3 id="若晶振频率不匹配"><a class="markdownIt-Anchor" href="#若晶振频率不匹配"></a> 若晶振频率不匹配</h3><p>Arduino IDE默认的Generic STM32FC series的Crystal默认是8Mhz，如果Darkpill的HSE为12MHz或16MHz，那么Blink程序闪烁速度会比8Mhz快，串口波特率也同理(会收不到信息或者乱码)，所以，需要修改开发包里的HSE或者PLL的值</p><p><span style="color:#FF0000;">那么，我们开始找吧！</span></p><p>在Arduino_STM32\STM32F1\core\maple下的boards.h文件里有以下两行代码：</p><p><img src="/201e530f/20200810210153.png" alt="20200810210153"></p><p>即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CLOCK_SPEED_MHZCYCLES_PER_MICROSECOND</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CLOCK_SPEED_HZ(CLOCK_SPEED_MHZ * 1000000UL)</span></span><br></pre></td></tr></table></figure><p>那么我们在boards.h文件文件包含的头文件里找找CYCLES_PER_MICROSECOND这个宏</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;libmaple/libmaple_types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wirish_types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;board/board.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>找了一圈，锁定了board.h文件(注意与boards.h不同)，board.h文件有很多个，找到在开发板管理器里选用的gerneric_stmf103c的board.h打开：</p><p><img src="/201e530f/board.h__generic_stm32f103c.png" alt="board.h__generic_stm32f103c"></p><p>打开后，文件里有以下一行代码：</p><p><img src="/201e530f/20200810210123.png" alt="20200810210123"></p><p>可见CYCLES_PER_MICROSECOND由F_CPU定义，我们再去找F_CPU，然鹅，board.h没有包含头文件，我们到其根目录去找找：</p><p>在Arduino_STM32、STM32F1\variants\generic_stm32f103c\wirish的boards_setup.cpp里找到了处理F_CPU的宏，可见50到64行代码是根据预设的F_CPU的值来定义PLL倍频值，与常见的先定义倍频再定义主频相反😳</p><p><img src="/201e530f/boards_setup.cpp.png" alt="boards_setup.cpp"></p><p>那么在到他包含的头文件里找。。。。</p><p>算了看看这个issue：<a href="https://github.com/stm32duino/Arduino_Core_STM32/issues/612" target="_blank" rel="noopener">F_CPU在什么时候定义？</a>，这个issue也不是，它是<a href="https://github.com/stm32duino/Arduino_Core_STM32" target="_blank" rel="noopener">Arduino_Core_STM32</a>的F_CPU</p><p>我们直接到STM32duino的仓库找吧，下面是F1和F4的，在一个txt文件里定义，估计是脚本程序运行的，知识的盲区😳</p><p><img src="/201e530f/buildf_cpu(1).png" alt="buildf_cpu(1)"></p><p><img src="/201e530f/buildf_cpu(2).png" alt="buildf_cpu(2)"></p><p>既然这样，直接把72MHz PLL的倍频改为12MHz下的倍数不就行了😢</p><p>还是打开STM32F1\variants\generic_stm32f103c\wirish的boards_setup.cpp文件，修改为6即可：</p><p><img src="/201e530f/boards.h_change_PLL.png" alt="boards.h_change_PLL"></p><p>测试5秒的Blink程序修改前后对比，修改后正常了，串口也正常了</p><table>    <tr>    <td width="33%"><img src="/201e530f/BLINK_TEST(1).png"></td>    <td width="33%"><img src="/201e530f/BLINK_TEST(3).png"></td>    <td width="33%"><img src="/201e530f/BLINK_TEST(2).png"></td>    </tr></table><h2 id="在keil-mdk环境下使用"><a class="markdownIt-Anchor" href="#在keil-mdk环境下使用"></a> 在Keil MDK环境下使用</h2><p>下载最新版的MDK5.31</p><p>下载对应stm32系列的<a href="https://www.keil.com/dd2/pack/#/eula-container" target="_blank" rel="noopener">MDK5 Software Packs</a>包</p><p><a href="https://www.cnblogs.com/armfly/p/12564643.html" target="_blank" rel="noopener">MDK5.29，5.30，5.31和各种软件包镜像下载（2020-07-03）</a></p><h3 id="配置mdk工程模板"><a class="markdownIt-Anchor" href="#配置mdk工程模板"></a> 配置MDK工程模板</h3><p><a href="https://www.bilibili.com/video/BV1kx411k7JT?p=8" target="_blank" rel="noopener">教程：正点原子手把手教你学STM32：第10集</a></p><h3 id="配置过程中与视频中正点原子战舰的区别"><a class="markdownIt-Anchor" href="#配置过程中与视频中正点原子战舰的区别"></a> 配置过程中与视频中正点原子战舰的区别</h3><p><a href="https://blog.csdn.net/hitxiaya/article/details/7440496" target="_blank" rel="noopener">STM32：LD、MD、HD 的区别</a></p><p>DarlPill使用F103C8T6，战舰使用F103ZET6，工程模板仅仅芯片闪存MD与HD的区别，有以下两处：</p><h4 id="启动文件"><a class="markdownIt-Anchor" href="#启动文件"></a> 启动文件</h4><p>F103C8T6使用<code>startup_stm32f10x_md.s</code>F103ZET6使用<code>startup_stm32f10x_hd.s</code></p><h4 id="全局宏定义"><a class="markdownIt-Anchor" href="#全局宏定义"></a> 全局宏定义</h4><p>Option for target的C/C++栏里的preprocesor symbols的define：</p><p>F103C8T6使用<code>STM32F10X_MD,USE_STDPERIPH_DRIVER</code>F103ZET6使用<code>STM32F10X_HD,USE_STDPERIPH_DRIVER</code></p><h3 id="首次编译问题"><a class="markdownIt-Anchor" href="#首次编译问题"></a> 首次编译问题</h3><p>按照原子哥的教程配置好工程模板后，编译，最前面前几句报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">../CORE/core_cm3.c(445): error: non-ASM statement <span class="keyword">in</span> naked <span class="keyword">function</span> is not supported</span><br><span class="line">  uint32_t result=0;</span><br><span class="line">  。。。。。。(后面还有一长串错误不用看了)</span><br></pre></td></tr></table></figure><p>问题解决：</p><p><img src="/201e530f/non-ASM.png" alt="20200811222427"></p><p>修改后，再次编译没问题了：&quot;..\OBJ\Temp.axf&quot; - 0 Error(s), 0 Warning(s).✅</p><p>编译视频最后的原子哥的闪烁程序，用FlyMCU上传，第0~5部步骤如下：</p><p><img src="/201e530f/20200811231112.png" alt="20200811231112"></p><p>上图第5步后，FLyMCU会显示开始连接，这时，按住boot0不放，按一次Reset，FlyMCU会上传，测试OK（我用D1 mini的CH340上传的）</p><p><img src="/201e530f/PB5_Blink_gif_320x181_3s.gif" alt></p><p>如果没有在OBJ目录找到编译生成的hex文件，看看视频里勾选生成hex那步是不是忘了</p><h3 id="晶振及倍频修改"><a class="markdownIt-Anchor" href="#晶振及倍频修改"></a> 晶振及倍频修改</h3><h4 id="stm32系列修改外部晶振以及代码的修改"><a class="markdownIt-Anchor" href="#stm32系列修改外部晶振以及代码的修改"></a> <a href="https://blog.csdn.net/qq_26039331/article/details/78751047?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-9.channel_param&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-9.channel_param" target="_blank" rel="noopener">STM32系列修改外部晶振以及代码的修改</a></h4><h2 id="解决stm32duino-bootloader晶振频率不匹配"><a class="markdownIt-Anchor" href="#解决stm32duino-bootloader晶振频率不匹配"></a> 解决stm32duino-bootloader晶振频率不匹配</h2><p>折腾了好久，发现烧录了maple mini bootloader的stm32win10就是不识别设备，估计是外部晶振的频率是12Mhz造成的，几经辗转，看到了STM32duino的社区里帖子<a href="http://stm32duinoforum.com/forum/viewtopic_f_2_t_4190.html" target="_blank" rel="noopener">STM32F103上将时钟设置为72Mhz</a>，这位使用F103的老外用16Mhz的晶振代替8MHz的晶振，然后使用maple mini的bootloader USB就是发现不了F103， <strong>伯恩特</strong>» 2018年10月5日星期五上午11:39的回答截取了maple mini 定义USB总线时钟频率的一段代码，可以知道由PLL倍频器的值定义：</p><p><img src="/201e530f/20200813153820.png" alt="20200813153820"></p><p>那么他的USB不识别肯定由于16MHz晶振导致USB的时钟不在协议频率范围里了，巧了，在该帖的最下面发现了<a href="https://github.com/rogerclarkmelbourne/STM32duino-bootloader" target="_blank" rel="noopener">STM32duino-bootloader</a>的作者<span style="color:BlueViolet;">罗杰·克拉克</span>的回答，看来USB频率不对实锤了：</p><p><img src="/201e530f/20200813151751.png" alt="20200813151751"></p><p>那么，现在我们有用的信息是，maple mini bootloader的代码中定义了USB的驱动，根据PLL的值与外部晶振的频率定义了USB的时钟，我用12MHz的晶振导致USB时钟的速度比8MHz快1.5倍，我们可以列出下表：</p><table><thead><tr><th>开发板</th><th>CPU频率(MHz)</th><th>晶振频率(MHz)</th><th>USB时钟频率(MHz)</th><th>PLL倍频</th><th>USB时钟频率为晶振的多少倍?</th></tr></thead><tbody><tr><td>BluePill<b>（正确）</b></td><td>72</td><td>8</td><td>48</td><td>9</td><td>6</td></tr><tr><td>DarkPill<b>（错误）</b></td><td><span style="color:RED;">108</span></td><td>12</td><td><span style="color:RED;">72</span></td><td>9</td><td>6</td></tr><tr><td>DarkPill<b>（正确）</b></td><td>72</td><td>12</td><td>48</td><td>6</td><td>4</td></tr></tbody></table><p>拓展阅读：<a href="https://www.cnblogs.com/cherishui/p/4204280.html" target="_blank" rel="noopener">USB时钟为什么是48MHz？</a></p><h3 id="重新编译stm32duino-bootloader"><a class="markdownIt-Anchor" href="#重新编译stm32duino-bootloader"></a> 重新编译stm32duino-bootloader</h3><p>先把<a href="https://github.com/rogerclarkmelbourne/STM32duino-bootloader" target="_blank" rel="noopener">STM32duino-bootloader</a>的整个git仓库下载下来，解压</p><p>你会发现这个stm32工程使用Makfile管理编译，别怕，我们先<a href="https://www.cnblogs.com/RegressionWorldLine/p/11876643.html" target="_blank" rel="noopener">Win10下搭建STM32开发环境</a>，将make和gnu_arm嵌入式工具链装好，能在PowerShell中唤出版本信息即可：</p><p><img src="/201e530f/make_and_arm_tool_chain.png" alt="20200813225042"></p><p>然后请粗略了解一下<a href="https://www.cnblogs.com/hazir/p/linux_make_examples.html" target="_blank" rel="noopener">Linux 下 Make 命令如何工作的？</a>中的“规则“概念</p><p>在PowerShell里进入解压的STM32duino-bootloader的目录，先来个make命令，看看报什么错<img src="/201e530f/error.png" alt="20200813230029"></p><p>看来是抛出了config.h里的#error</p><p>在config.h里加一句黄色框内的</p><p><img src="/201e530f/config.png" alt="config"></p><p>，再次编译，执行</p><ul><li>make clean</li><li>make</li></ul><p>OK不报错了，但是build文件夹里bin文件是0KB咋回事？</p><p><img src="/201e530f/0kb.png" alt="20200813230232"></p><p>打开Makefile看看，因为make后不带参数默认执行make all，然而我们发现Makefile里的all规则默认啥也不执行：</p><p><img src="/201e530f/make-all.png" alt="20200814234901"></p><p>所以我们要执行</p><ul><li>make clean</li><li>make generic-pc13</li></ul><p>实例如下：</p><p><img src="/201e530f/make-generic-pc13.png" alt="20200814005959"></p><p>Ok，build文件夹里的maple_boot.bin大小正常了：</p><p><img src="/201e530f/8kb.png" alt="20200814010030"></p><p>那么，接下来，修改USBCLK的频率，在github里搜索整个仓库，发现上文<strong>伯恩特</strong>提到的setuoCLK()在hardware.c里定义：</p><p><img src="/201e530f/setupCLK.png" alt="20200814233519"></p><p>打开harware.c，发现作者还很贴心：</p><p><img src="/201e530f/USBCLK.png" alt="20200813235456"></p><p>若HSE为12MHz，我们直接在 #elif defined TARGET_GENERIC_F103_PC13下加一句#define XTAL12M即可，若为16MHz，则加#define XTAL16M</p><p><img src="/201e530f/config_add.png" alt="config_add"></p><p>最后执行</p><ul><li>make clean</li><li>make generic-pc13</li></ul><p>完工！</p><h3 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考：</h3><p><a href="https://www.paincker.com/stm32-project-in-linux" target="_blank" rel="noopener">在LINUX下如何开始一个STM32工程</a></p><p><a href="%5Bhttps://hoolev.github.io/%E7%89%A9%E8%81%94%E7%BD%91/2015/12/21/stm32-cmake/%5D(https://hoolev.github.io/%E7%89%A9%E8%81%94%E7%BD%91/2015/12/21/stm32-cmake/)">使用CMake构建STM32工程</a></p><p><a href="https://www.jianshu.com/p/7f77a5486a26" target="_blank" rel="noopener">探索Keil基于makefile的STM32编译方法</a></p><h1 id="stm32f103c8t6-使用dfu"><a class="markdownIt-Anchor" href="#stm32f103c8t6-使用dfu"></a> <a href="https://www.codenong.com/cs107104993/" target="_blank" rel="noopener">STM32F103C8T6 使用DFU</a></h1>]]></content>
      
      
      <categories>
          
          <category> PCB设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
            <tag> type-c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uRLC复刻笔记</title>
      <link href="/845419ff/"/>
      <url>/845419ff/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.radiokot.ru/" target="_blank" rel="noopener"><img src="https://www.radiokot.ru/files/button.gif" width="88" height="31" border="0" hspace="0" vspace="0" alt="РадиоКОТ - популярно об электронике. Авторские схемы, новые разработки. Обучение по электронике, микроконтроллерам, ПЛИС. Форум"></a></p><p><img src="/845419ff/titlep.png" alt="title2"></p><h2 id="news"><a class="markdownIt-Anchor" href="#news"></a> News</h2><ul><li>uRLC的下一代作品nRLC已上线，现已不推荐制作uRLC，请各位朋友移步<a href="https://oldgerman.github.io/1eb159fd/">nRLC制作指南</a></li><li>若制作成本太高，推荐制作票总开发的QPLCR镊子，地址LCEDA开源广场热榜</li><li>感谢B站<a href="https://b23.tv/a3fFT7o" target="_blank" rel="noopener">唐老师讲电赛</a>对uRLC和其他LCR表的讲解</li></ul><h2 id="网友自驾成品"><a class="markdownIt-Anchor" href="#网友自驾成品"></a> 网友自驾成品</h2><table><thead><tr><th>昵称</th><th>电路板</th><th>成品</th></tr></thead><tbody><tr><td>2.5维</td><td><img src="/845419ff/%E4%BD%9C%E5%93%81-2.5%E7%BB%B4(1).png" alt="作品-2.5维(1)"></td><td><img src="/845419ff/%E4%BD%9C%E5%93%81-2.5%E7%BB%B4(2).png" alt="作品-2.5维(2)"></td></tr><tr><td>怕瓦落地</td><td><img src="/845419ff/%E4%BD%9C%E5%93%81-%E5%B8%95%E7%93%A6%E8%90%BD%E5%9C%B0(2).jpg" alt="作品-帕瓦落地(2)"></td><td><img src="/845419ff/%E4%BD%9C%E5%93%81-%E5%B8%95%E7%93%A6%E8%90%BD%E5%9C%B0(3).jpg" alt="作品-帕瓦落地(3)"></td></tr><tr><td>垃圾佬</td><td><img src="/845419ff/%E4%BD%9C%E5%93%81-%E5%9E%83%E5%9C%BE%E4%BD%AC(5).jpg" alt="作品-垃圾佬(5)"></td><td><img src="/845419ff/%E4%BD%9C%E5%93%81-%E5%9E%83%E5%9C%BE%E4%BD%AC(3).jpg" alt="作品-垃圾佬(3)"></td></tr></tbody></table><a id="more"></a><h2 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h2><p>点击可快速跳转</p><ul><li><a href="#News">News</a></li><li><a href="#%E7%BD%91%E5%8F%8B%E8%87%AA%E9%A9%BE%E6%88%90%E5%93%81">网友自驾成品</a></li><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#uRLC%E8%A7%84%E6%A0%BC">uRLC规格</a></li><li><a href="#%E8%B5%84%E6%96%99">资料</a></li><li><a href="#%E6%8B%A8%E8%BD%AE%E5%BC%80%E5%85%B3%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95">拨轮开关使用方法</a></li><li><a href="#PCB">PCB</a></li><li><a href="#%E6%9C%80%E5%B0%8F%E5%BC%80%E9%94%80%E5%9B%BA%E4%BB%B6%E6%B5%8B%E8%AF%95">最小开销固件测试</a></li><li><a href="#USB%E5%88%B7%E5%9B%BA%E4%BB%B6">USB刷固件</a></li><li><a href="#%E5%A4%9A%E7%BA%A7%E8%8F%9C%E5%8D%95%E7%BF%BB%E8%AF%91">多级菜单翻译</a></li><li><a href="#%E9%87%87%E8%B4%AD">采购</a></li><li><a href="#%E7%84%8A%E6%8E%A5">焊接</a></li><li><a href="#%E5%9B%BA%E4%BB%B6%E7%89%88%E6%9C%AC%E5%8F%98%E5%8A%A8">固件版本变动</a></li><li><a href="#%E5%85%83%E4%BB%B6%E6%B5%8B%E9%87%8F">元件测量</a></li><li><a href="#%E5%9B%BA%E4%BB%B6%E7%89%88%E6%9C%AC%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E5%8F%98%E5%8A%A8%E4%BA%86%EF%BC%81">固件版本又双叒叕变动了！</a></li><li><a href="#%E7%94%B5%E7%A3%81%E5%B1%8F%E8%94%BD">电磁屏蔽</a></li><li><a href="#3D%E6%89%93%E5%8D%B0%E5%A4%96%E5%A3%B3">3D打印外壳</a></li><li><a href="#%E6%B5%8B%E9%87%8F%E6%8A%80%E5%B7%A7">测量技巧</a></li><li><a href="#%E6%A0%A1%E5%87%86">校准</a></li><li><a href="#BUG%E6%B1%87%E6%80%BB">BUG汇总</a></li><li><a href="#%E7%BB%AD%E8%88%AA%E6%B5%8B%E8%AF%95">续航测试</a></li><li><a href="#%E6%96%B0%E5%9B%BA%E4%BB%B618-39">新固件18-39</a></li><li><a href="#%E8%BF%9B%E5%BA%A6%E4%B8%80%E8%A7%88">进度一览</a></li><li><a href="#%E8%BF%94%E5%B7%A5">返工</a></li><li><a href="#%E5%90%8E%E8%AF%9D">后话</a></li></ul><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><h3 id="固件版本-作者信息"><a class="markdownIt-Anchor" href="#固件版本-作者信息"></a> 固件版本 | 作者信息</h3><table>    <tr>        <td><img src="/845419ff/info(1).png"></td>        <td><img src="/845419ff/info(2).png"></td>    </tr></table><table><thead><tr><th></th><th>俄语</th><th>翻译</th></tr></thead><tbody><tr><td>图1</td><td><span style="color:red;">Не дЛя КоммеРцескоГо<br>использования !</span></td><td><span style="color:red;">不许被商人<br>使用！</span></td></tr><tr><td>图2</td><td>Авторы:<br>Александр Лебедь <br>Павел Сметанников<br><br>Благодарность:<br>Дмитрий Вalmеr<br><span style="color:Blue;">Никите Nіkіtоѕ</span><br>Oлегч Галывин</td><td>作者：<br>亚历山大·莱伯德<br>帕维尔·斯梅坦尼科夫<br><br>谢谢：<br>德米特里·布尔先生<br><span style="color:Blue;">尼基塔·尼基塔</span><br>奥列格·加利文</td></tr></tbody></table><p><strong>注：</strong><span style="color:Blue;">尼基塔</span>(radiokot论坛昵称：Neekeetos)，是初代<a href="https://radiokot.ru/circuit/digital/measure/108/" target="_blank" rel="noopener">RLC mini电桥</a>的作者，开放了源码，这个版本的电桥国内已经有很多人diy了，相信关注diy电桥的大侠们并不陌生！</p><h2 id="urlc规格"><a class="markdownIt-Anchor" href="#urlc规格"></a> uRLC规格</h2><p>以下参数应该是经校准后的理论极限</p><ul><li>主控：stm32f303cbt6 (老毛子明确回复用stm32f303cct6代替也行)</li><li>屏幕：0.96/1.3寸oled，分辨率128x64，主控SD1306/SH1106/SD1315，均可在菜单切换对应驱动，作者GFX又发布了屏幕主控为ILI9341 分辨率320x240 的固件，博主未做测试</li><li>R测量从0.1mOhm-10MOhm，</li><li>L测量从0.1nH-10Gn，</li><li>C测量从0.001pF到22,000uF，</li><li>测试信号的频率为100Hz，1kHz，10kHz，93kHz，187kHz，幅度为1V或0.3V</li><li>带探头的尺寸158x28x12mm，重量29g(应该是带了外壳和电池的，我裸称焊好的PCB只有14g)</li><li>锂离子电源3.7V 250mA * h，消耗电流约75mA (实际测试时250mAh压降较大，掉电较快，考虑到最佳尺寸，建议使用500/600mAh的502248或602248锂电)</li></ul><h2 id="资料"><a class="markdownIt-Anchor" href="#资料"></a> 资料</h2><h3 id="radiokot论坛"><a class="markdownIt-Anchor" href="#radiokot论坛"></a> radiokot论坛</h3><p><a href="https://radiokot.ru/artfiles/6435/" target="_blank" rel="noopener">uRLC原文链接，在此文最后有分享的初版文件</a></p><p><a href="http://www.radiokot.ru/forum/viewtopic.php?t=157765" target="_blank" rel="noopener">uRLC讨论区链接</a></p><p><a href="https://yadi.sk/d/xp3Mn80l3Zsc3q" target="_blank" rel="noopener">uRLC作者网盘公开的hex文件，pcb及原理图等文件</a></p><p><a href="https://www.youtube.com/user/Lithium00001" target="_blank" rel="noopener">uRLC作者的油管</a></p><p><a href="http://repository.kpi.kharkov.ua/bitstream/KhPI-Press/13517/3/Gorkunov_Izmerenie_parametrov_2014.pdf" target="_blank" rel="noopener">uRLC测量原理，四臂交流电桥等效转换：对应PDF第1~62页，俄语</a></p><h3 id="软件资源"><a class="markdownIt-Anchor" href="#软件资源"></a> 软件资源</h3><p>老毛子分享的原理图是.spl7文件，用splan7绘制；PCB文件是.lay6文件，用layout6绘制，splan7与layout6不是像EDA软件那种正向编译反向编译的关系(指原理图，PCB任何一方的更改都会使另一方同步更新)，而是两个独立的软件，即老毛子画PCB时所有的元件之间是没有与原理图同步的绑定线的，他们直接拿着封装画PCB😳</p><p>注：资源如下，如何安装如何使用如何导出gerber文件我就不教了</p><p><a href="http://bbs.hifidiy.net/thread-1340827-1-1.html" target="_blank" rel="noopener">Splan7.0 小白也能用的专业级电路图绘制软件！汉化版</a></p><p><a href="http://www.crystalradio.cn/thread-1637548-1-1.html" target="_blank" rel="noopener">Sprint-Layout 6.0 矿坛专用免安装汉化版</a>，这版它导出的钻孔数据LC助手无法预览，用下面打包资料里的正常</p><p><a href="http://www.crystalradio.cn/thread-763928-1-1.html" target="_blank" rel="noopener">Sprint Layout 6.0 的使用教程与经验-第一讲</a></p><h3 id="已整理的资料"><a class="markdownIt-Anchor" href="#已整理的资料"></a> 已整理的资料</h3><ol><li>uRLC公开的所有固件版本</li><li>uRLC多级菜单翻译</li><li>zwei13重绘了原理图，老毛子的spl7原理图看不惯建议看此原理图</li><li>PCB直接打样文件 (含lay6工程)，两个版本</li><li>uRLC网盘版本3D打印外壳</li><li>uRLC_BOM表注释版</li><li>”Описание 1.2.1“ - uRLC文档原帖+谷歌翻译 (建议各位diy玩家必看)</li><li>电阻校准演示视频</li><li>Splan7和lay6软件</li><li>uRLC精度测试(仅做开短路校准)——由<span style="color:Blue;">帕瓦落地</span>大侠测试</li></ol><p><a href="https://pan.baidu.com/s/1d0WufLb_sFFrfqbaGZvnPA" target="_blank" rel="noopener">以上资料打包链接，提取码：s9ym</a></p><p>再就是此篇博文~</p><h2 id="拨轮开关使用方法"><a class="markdownIt-Anchor" href="#拨轮开关使用方法"></a> 拨轮开关使用方法</h2><ul><li><strong>开/关机</strong>：长按中键</li><li><strong>主/副页面</strong>：左/右短按切换频率，默认频率为最后一次使用的频率，长按左进入第二块屏幕(详细参数页)，再次长按左返回主页</li><li><strong>测量电压切换</strong>：主/副页长按右，切换0.3V，再次长按右切回1.0V，默认1.0V，作者说0.3V档位是为了防止PN结打开，但低压交流的准确度较低</li><li><strong>菜单页</strong>：左短按向下切换菜单栏，右短按反之，中建短按进入下级菜单，每一级菜单页最上放都有一个&quot;..&quot;栏，选中它中建短按返回上级菜单，任意子菜单页都可以长按左键(拨轮向左)直接返回主页(因为有时向上级菜单一级一级返回太慢了)</li></ul><h2 id="pcb"><a class="markdownIt-Anchor" href="#pcb"></a> PCB</h2><h3 id="pcb版本"><a class="markdownIt-Anchor" href="#pcb版本"></a> PCB版本</h3><p>根据搜集的资料，老毛子公开的PCB为下表前3个，第4个是叁條的主子和博主优化的</p><p>都为双层板10x10cm以内，下方表格链接里后缀为.lay6的文件就是，所有的制版文件都只有最外一圈边框层(机械层)，建议自行绘制更细的外型层以便分板，前两个版本除两片主板外，还包含4片PCB镊子(但只能做一个PCB镊子，博文稍后介绍)，PCB固定片2个(兼屏蔽板，屏蔽了输入电路)，鳄鱼夹片8个:</p><table><thead><tr><th>uRLC<br>PCB版本(点击即可下载)</th><th>描述</th><th>正面</th><th>背面</th></tr></thead><tbody><tr><td><a href="https://radiokot.ru/artfiles/6435/01.rar" target="_blank" rel="noopener">uRLC原文版本</a></td><td>有1.3寸和0.96寸缩小版</td><td><img src="/845419ff/uRLC-PCB_V1(1).png" alt="uRLC-PCB_V1(1)"></td><td><img src="/845419ff/uRLC-PCB_V1(2).png" alt="uRLC-PCB_V1(2)"></td></tr><tr><td><a href="https://yadi.sk/d/xp3Mn80l3Zsc3q" target="_blank" rel="noopener">uRLC作者网盘版本</a></td><td>包含两套1.3寸uRLC</td><td><img src="/845419ff/uRLC-PCB_V2(1).png" alt="uRLC-PCB_V2(1)"></td><td><img src="/845419ff/uRLC-PCB_V2(2).png" alt="uRLC-PCB_V2(2)"></td></tr><tr><td><a href="https://radiokot.ru/forum/download/file.php?id=324974" target="_blank" rel="noopener">ZuuM优化版本</a></td><td>含外型层，但只有主板，无其他零件，但优化了焊盘，见下文描述</td><td><img src="/845419ff/uRLC-PCB_V1.z(1).png" alt="uRLC-PCB_V1.z(1)"></td><td><img src="/845419ff/uRLC-PCB_V1.z(2).png" alt="uRLC-PCB_V1.z(2)"></td></tr><tr><td>叁條的主子和博主优化版本(在打包资料里下载)</td><td>仅保留了镊子版本uRLC的一套PCB(具体改了哪些地方见下文对比描述)</td><td><img src="/845419ff/%E4%BC%98%E5%8C%96PCB(6).png" alt="优化PCB(6)"></td><td><img src="/845419ff/%E4%BC%98%E5%8C%96PCB(7).png" alt="优化PCB(7)"></td></tr><tr><td>ZuuM版本，博主优化版</td><td>增加了镊子，与网盘版本PCB优化的地方一样</td><td><img src="/845419ff/%E4%BC%98%E5%8C%96PCB(8).png" alt="20200812121745"></td><td><img src="/845419ff/%E4%BC%98%E5%8C%96PCB(9).png" alt="20200812120939"></td></tr></tbody></table><p>我使用的是网盘版本，这个版本和uRLC原文版本的C30，C38电容的焊盘都是0603的，但PCB固定孔只有两个，其他2个版本都有4个孔，在uRLC的BOM表中，作者建议该两个100nF的电容使用NPO介质(要求不高也可用X7R介质代替)，但是在uRLC讨论帖中，坛友指出100nF的NPO电容最小封装为1206：</p><p><img src="/845419ff/1206_NPO.png" alt="1206_NPO"></p><p>于是，坛友的ZuuM发布了再版PCB，将C30，C38以及C28, C35(10nF NPO,有0603)都改为了同时兼容1206/0603封装的焊盘，对比如下：</p><table>    <tr>        <td width="50%"><img src="/845419ff/PCB_V(1).png"></td>        <td width="50%"><img src="/845419ff/PCB_V(2).png"></td>    </tr></table><p>👉另外，ZuuM改版的PCB还引出了stm32的串口下载口，在BOOT0引脚增加了下拉电阻，重新优化了作者的覆铜环，难焊接的地方改为了热焊盘，对美观要求较高的话，建议选此版</p><p>注：ZuuM改进版的图纸里面没有PCB镊子，可能得自己画(layout6从其他导入镊子我不会)😂</p><p>注：NPO电容器，英文negative-positive 0 ppm/°C的缩写，温度不敏感电容，一种常见的温度补偿陶瓷电容，地位与低温漂电阻一样，NPO的其他叫法有COG/C0G/NP0，材料其实一样，可混用</p><h3 id="layout60绘制更精确的外型层仅供参考"><a class="markdownIt-Anchor" href="#layout60绘制更精确的外型层仅供参考"></a> layout60绘制更精确的外型层(仅供参考)</h3><p>在编辑模式下，先切换到splan软件的U层：</p><table>    <tr>        <td><img src="/845419ff/Splan6-Edit.png"></td>        <td><img src="/845419ff/Splan6-U.png"></td>    </tr></table><p>接着删除原来最外一圈边界层，适当调整布局重新绘制，图1为博主打样的布板，白色线的为重绘制的边界层，为了方便看清我将线宽改为了0.5mm，实际不会这么宽出CAM文件(宽度建议小于0.05)，边界层与所有的铜箔建议距离10mil以上防止加工时伤到线路，👉PCB镊子建议像图2(由zwei13绘制) 那样绘制边界层，这样拿到电路板就不用费尽心思拿锉刀小心打磨出形镊子的尖头状了，注意图2中的灰色矩形是挖空部分</p><table>    <tr>        <td width="50%"><img src="/845419ff/uRLC-outline.jpg"></td>        <td width="50%"><img src="/845419ff/zwei13-uRLC.PNG"></td>    </tr></table><p>注：优化后的打板文件已经分享出来了</p><h3 id="网盘版本pcb优化的地方"><a class="markdownIt-Anchor" href="#网盘版本pcb优化的地方"></a> 网盘版本PCB优化的地方</h3><p>叁條的主子和博主优化版本，与uRLC作者网盘版本对比如下</p><table><thead><tr><th></th><th>uRLC作者网盘版本</th><th>优化后</th></tr></thead><tbody><tr><td>红色尖头指示的黑线就是外形层；原版只有大外型层，很难处理，我们将难处理的轮廓(镊子和镊子开槽)置于外型层，板子到手直接简单分板处理毛边即可</td><td><img src="/845419ff/%E4%BC%98%E5%8C%96%E5%89%8D%E9%95%8A%E5%AD%90.png" alt="优化前镊子"></td><td><img src="/845419ff/%E4%BC%98%E5%8C%96%E5%90%8E%E9%95%8A%E5%AD%90.png" alt="优化后镊子"></td></tr><tr><td>引出了蜂鸣器限流电阻的焊盘，避免直接从STM32引脚上飞线</td><td><img src="/845419ff/%E4%BC%98%E5%8C%96PCB(3).png" alt="优化PCB(3)"></td><td><img src="/845419ff/%E4%BC%98%E5%8C%96PCB(2).png" alt="优化PCB(2)"></td></tr><tr><td>Micro-usb的D+导线做了局部加粗+开窗处理，方便飞D+的0603上拉电阻 (见下文DFU部分描述)</td><td><img src="/845419ff/%E4%BC%98%E5%8C%96PCB(5).png" alt="优化PCB(5)"></td><td><img src="/845419ff/%E4%BC%98%E5%8C%96PCB(4).png" alt="优化PCB(4)"></td></tr></tbody></table><p><strong>注：</strong></p><ul><li>3位大侠已经用此版本diy成功🐮🍺</li><li>ZuuM版本博主优化版，优化的地方与此版本一样</li></ul><h3 id="pcb打样"><a class="markdownIt-Anchor" href="#pcb打样"></a> PCB打样</h3><p>上图两种方式均在JLC打样，不算拼版(还不快给审核员点个赞)，5元包邮</p><p>由于之前对资料研究不深，我稀里糊涂选了老毛子网盘分享的版本 😂</p><p>根据群友的反馈，大多是在捷配和JLC打样，现列举出下列：</p><div align="center"><span style="color:white;background:black;font-size:20px;">&#12288告示&#12288</span></div>1. PCB为双层板，厚度选0.8，不要选1.6，只有0.8mm的PCB可以在1.6mm卡口处正常安装两片PCB镊子<ol start="2"><li><p>JLC的绿油和雅黑阻焊 0.8是 5元，JLC网页版没有5元优惠，要下JLC小助手下单才有</p></li><li><p>捷配0.8很贵，正常价最薄可以打1.0板厚，但要锉刀处理或者自行修改lay6文件的镊子开槽至2.0mm</p></li><li><p>绿油桥是否保留：</p></li></ol><ul><li>JLC：绿油桥小于3mil不保留，绿油桥大于3mil保留，对所有油墨都适用</li><li>捷配：默认0.1mm(4mil)阻焊桥：“若有阻焊桥要求，必须备注！阻焊桥 价格会根据工艺要求上浮。若阻焊颜色为绿色、红色、蓝色时，焊盘间距必须≥8mil；其他颜色焊盘间距需≥10mil“</li></ul><p><span style="color:Blue;">原作者是在JLC打板的(俄罗斯)，而且JLC有板厚0.8+绿油桥3mil的5元优惠价，建议uRLC的PCB在JLC打板</span></p><h2 id="制作大纲"><a class="markdownIt-Anchor" href="#制作大纲"></a> 制作大纲</h2><p>小烧是不可避免的，制作测量仪器更是如此，uRLC是我目前试制物料种类最多的LCR，面对50+种物料，加上国内又没有发现制作成功的先例，为了失败时损失最小，首先建议最小开销的固件初测，测OK了再采购的模拟部分的物料(氪金)，全部焊接完毕就进行功能验证，因为老毛不开源，所以短期内固件就无法个性化了...对了，别忘了蓝翔手艺，以及钳工技术。</p><p>此试制过程用了三块PCB，分别叫一周目，二周目，三周目好了：</p><table><thead><tr><th>PCB</th><th>状态</th></tr></thead><tbody><tr><td>一周目</td><td>完成无模拟部分固件刷入测试</td></tr><tr><td>二周目</td><td>练习PCB镊子的焊接，因为连锡处理不当焊盘和基材受损</td></tr><tr><td>三周目</td><td>焊接完所有元件，完成所有测量测试，制作成功</td></tr></tbody></table><h2 id="最小开销固件测试"><a class="markdownIt-Anchor" href="#最小开销固件测试"></a> 最小开销固件测试</h2><h3 id="焊接必要的测试电路"><a class="markdownIt-Anchor" href="#焊接必要的测试电路"></a> 焊接必要的测试电路</h3><p>原理图有两张，测试电路需要完全焊接第一张的所有元件(如图1)，紫色圈外是oled电路，手头暂时没有磁珠就都用0R电阻代替，老毛子空出的三个小开关焊盘是2x4的smd开关，感觉这开关按下及回弹清脆舒适，测试时就没用拨轮</p><table>    <tr>        <td width="45%"><img src="/845419ff/f3-test-elements(2).png"></td>        <td><img src="/845419ff/f3-test-elements(2).JPG"></td>        <td><img src="/845419ff/f3-test-elements(3).JPG"></td>    </tr></table><h4 id="新技能立焊0603代替0603_x4排阻"><a class="markdownIt-Anchor" href="#新技能立焊0603代替0603_x4排阻"></a> 新技能：立焊0603代替0603_x4排阻</h4><p>排阻一共3个，两种型号，测试阶段若买200个花8元觉得太浪费可以临时这样处理，图2是之后换上的</p><table>    <tr>        <td width="53%"><img src="/845419ff/soldering-xxx(1).JPG"></td>        <td width="50%"><img src="/845419ff/soldering-xxx(3).png"></td>    </tr></table><h3 id="usb刷固件"><a class="markdownIt-Anchor" href="#usb刷固件"></a> USB刷固件</h3><p>本次使用的固件为uRLC_1_18_38.hex，在老毛子分享的Старые文件夹中</p><h4 id="micro-usb复用"><a class="markdownIt-Anchor" href="#micro-usb复用"></a> Micro USB复用</h4><p>uRLC的micro-usb的D+，D-在原理图中定义如图1，可见这里复用了DFU下载口(USB_DM+USB_DP)和SWD调试口(SWDIO+SWCLK)，分别对应SMT32的PA11，PA12 和 PA13，PA14。所以uRLC支持两种刷机方式</p><p>图2是市面上常见的STM32F103开发板(bluepill)的pinmap，紫色框框内就是SWD调试口，讨论区里老毛子解释是用<span style="color:Blue;">ST-LINK</span>上传固件(STM8和STM32的ST-LINK/V2在线调试器/编程器)，老毛子将仿真器SWD接口的引脚引出，加了一个micro-usb公头直接插在uRLC上调试/下载，这就是老毛子提到的免开壳下载/调试固件，之前没看明白😅</p><table>    <tr>        <td width="53%"><img src="/845419ff/f3_miro-usb(2).png"></td>        <td width="50%"><img src="/845419ff/bluepill-SWD.png"></td>    </tr></table><h4 id="swd接口刷固件"><a class="markdownIt-Anchor" href="#swd接口刷固件"></a> SWD接口刷固件</h4><p>SWD接口刷固件需要买一个仿真器，博主之前没接触过STM32，没有用过仿真器，相信会用这种方式烧录固件的大侠们可以自己解决，这里就不教了</p><p>算了还是简要说明：找个micro公头，按教程里引出四线SWD，接到ST-LINK，打开ST-LINK Uitilty软件，全程按住拨轮中键下载</p><h4 id="dfu模式刷固件"><a class="markdownIt-Anchor" href="#dfu模式刷固件"></a> DFU模式刷固件</h4><p>这种方法要硬改一下，但省了买仿真器的开销，博主使用这种方法</p><p>老毛子的uRLC的Micro-USB口的D+,D-与stm32f303的PA12， PA11相连，根据STMF30X的手册，只有Boot为DFU模式下才使用USB刷固件：</p><p><img src="/845419ff/DFU(1).png" alt="20200706191354"></p><p>建议先看一遍<a href="https://www.youtube.com/watch?v=Kx7yWVi8kbU" target="_blank" rel="noopener">ST官方教程：Getting started with STM32 built-in USB DFU Bootloader</a></p><h4 id="安装dfuse程序和dfu驱动win10"><a class="markdownIt-Anchor" href="#安装dfuse程序和dfu驱动win10"></a> 安装DfuSe程序和DFU驱动(WIN10)</h4><p><a href="https://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-programmers/stsw-stm32080.html" target="_blank" rel="noopener">DfuSe下载</a>，这个软件安装过程中会安装DFU驱动</p><h4 id="进入dfu模式"><a class="markdownIt-Anchor" href="#进入dfu模式"></a> 进入DFU模式</h4><p>将BOOT0用10K上拉到VDD(+3.3V)，我用一个10K色环电阻将BOOT0与pin48(VDD)相连，将电池焊接在焊盘上，不然无电池状态下，MP73831的pin3只有2.61V，导致为系统供电的两个LDO电压不足，如图1再插入Micro-usb，按下中间的开关使P沟道打开使系统上电，对应电路如图2图3：</p><table>    <tr>        <td><img src="/845419ff/DFU(1).jpg"></td>        <td width="34%"><img src="/845419ff/DFU(2).png"></td>        <td width="34%"><img src="/845419ff/DFU(3).png"></td>    </tr></table><p>这样的操作是没有问题，但是WIN10会显示：</p><p><img src="/845419ff/DFU(4).png" alt="20200706135500"></p><p>检查电路，重新装驱动，折腾了半天无果，</p><p>找来ST-LINK/V2和STM32F3 Discovery原理图，可见D+有一个1.5K的上拉电阻到+3V3：</p><table>    <tr>        <td width="34%"><img src="/845419ff/f3_miro-usb(103).png"></td>        <td width="34%"><img src="/845419ff/f3_miro-usb(303).png"></td>    </tr></table><p>于是飞了一个2.2K的0603电阻到LDO的3V3,如图1(不小心把D+的铜箔扯弄坏补了半天)，再次进行上述操作，正常识别：</p><table>    <tr>        <td width="32%"><img src="/845419ff/DFU(5).png"></td>        <td width="34%"><img src="/845419ff/DFU(6).png"></td>    </tr></table><p>接着把老毛的hex文件用DFU file manager转成dfu文件，详细步骤见;<a href="https://www.cnblogs.com/wanglouxiaozi/p/12793334.html" target="_blank" rel="noopener">STM32 DFU windows烧录工具的使用</a></p><p>上传成功如下：</p><table>    <tr>        <td><img src="/845419ff/uplaod-dfu(1).png"></td>        <td><img src="/845419ff/uplaod-dfu(2).png"></td>    </tr></table><p><a href="https://www.jarvisw.com/?p=701" target="_blank" rel="noopener">为什么D+需要1.5K上拉电阻？</a></p><h3 id="oled测试"><a class="markdownIt-Anchor" href="#oled测试"></a> Oled测试</h3><p><img src="/845419ff/oled.jpg" alt="oled"></p><p>固件刷好了，将飞的那个10K色环电阻卸下，焊接OLED得外围电路后，短按中间开关开机，进入主界面，如图1</p><p>开机状态短按进入菜单，长按关机，如图2图3</p><table>    <tr>        <td width="32%"><img src="/845419ff/oled(3).JPG"></td>        <td width="34%"><img src="/845419ff/oled(2).png"></td>        <td width="34%"><img src="/845419ff/oled(2).jpg"></td>    </tr></table><p>可见oled显示有错位，原因是老毛子1.3寸oled用的SH1106驱动，缓冲区比SD1306多2像素所致，老毛子提到菜单里有更改驱动选项，等我有空翻译俄文菜单再找找，测试为了成本使用了0.96寸的SD1306，1.3寸可要贵7元，若测试失败损失较小</p><h4 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意</h4><p>实测：必须接电池按中间的开关才能开机，老毛子没有设计充电分流电路可能是故意禁止usb供电</p><h2 id="多级菜单翻译"><a class="markdownIt-Anchor" href="#多级菜单翻译"></a> 多级菜单翻译</h2><p>用文字转图片软件整理好 (所有子菜单已全部翻译)：</p><p><img src="/845419ff/uRLC%E8%8F%9C%E5%8D%95.jpg" alt="uRLC菜单"></p><h3 id="屏幕驱动更改"><a class="markdownIt-Anchor" href="#屏幕驱动更改"></a> 屏幕驱动更改</h3><p>请对照上面的菜单找到屏幕驱动页点击对应的驱动即可</p><p>默认是SH1306，我改为SSD1306正常</p><table>    <tr>        <td width="32%"><img src="/845419ff/driver(2).jpg"></td>        <td width="34%"><img src="/845419ff/driver(1).jpg"></td>    </tr></table><h4 id="ssd1306和sh1106有什么区别"><a class="markdownIt-Anchor" href="#ssd1306和sh1106有什么区别"></a> <a href="https://forum.arduino.cc/index.php?topic=256374.0" target="_blank" rel="noopener">SSD1306和SH1106有什么区别？</a></h4><p>SSD1306和SH1106之间有一个小差异：SH1106控制器具有132x64像素的内部RAM。SSD1306仅具有128x64像素，SH1106的程序需要将显示移动2像素才能在SSD1306上显示正常</p><p>另外，最近中景园有新款的SSD1315，与SSD1306完全兼容，边框更窄，三周目使用的1.3寸SS1315与SSD1306完全兼容，正常显示</p><h2 id="采购"><a class="markdownIt-Anchor" href="#采购"></a> 采购</h2><h3 id="bom配单进度"><a class="markdownIt-Anchor" href="#bom配单进度"></a> B.O.M配单进度</h3><p>在老毛子网盘里的Word文档“Перечень элементов”是原版B.OM表，下方是编辑后的word文档(截图可能不够清晰，打包链接里有)，抬头附有推荐购买店铺(这广告必须打，我也很绝望啊，毕竟50+物料，若买得太分散了邮费真吃不消，帮你们指个路)</p><p><img src="/845419ff/bom.png" alt="bom"></p><h3 id="nponp0cogc0g电容"><a class="markdownIt-Anchor" href="#nponp0cogc0g电容"></a> NPO/NP0/COG/C0G电容</h3><p>老毛子所说的NPO电容，某宝几乎没有哪家能配齐的，LC商城可以配齐，用关键字NPO/NP0/COG/C0G逐一搜索(这几种叫法材料是一样的)，但是1%的NPO 10nF和100nF的只能买到5%的，另外，上文提到过，100nF的NPO最小只有1206封装，我做的是网盘版本，它对应的焊盘给的0603的，只有ZuuM版本留有1206焊盘，以后再画块板改改</p><h3 id="01电阻"><a class="markdownIt-Anchor" href="#01电阻"></a> 0.1%电阻</h3><p>同上，某宝配不齐，建议LC商城配齐</p><h3 id="pga113aidgst-ina826aidgk"><a class="markdownIt-Anchor" href="#pga113aidgst-ina826aidgk"></a> PGA113AIDGST, INA826AIDGK</h3><p>物料表中，两片PGA113程控放大器，和两片INA826AIDGK仪表放大器是最贵的，若某宝小店铺下单不放心，建议从德州仪器官网订货，正好Ti最近有全中国包邮活动(2020年7月31号截止)，注意Ti从疫区新加坡发顺丰国际，收到件请务必里里外外酒精消毒</p><p><a href="https://www.ti.com.cn/store/ti/zh" target="_blank" rel="noopener">德州仪器官网商店中文版</a></p><p><a href="https://www.ti.com.cn/store/ti/zh" target="_blank" rel="noopener">德州仪器官网商店在线下单教程</a></p><p><strong>注：</strong></p><p>PGA113两片价格30RMB左右(含税，不算运费)，它有两种出货方式，一种是PGA113AIDGST，另一种是PGA113AIDGSR，T结尾是250pcs一卷的，买2个比R结尾的2500pcs一卷的要贵4元左右，老毛子物料表用的是T，也可以买R替代T，便宜几块钱</p><h3 id="adi的几种运放"><a class="markdownIt-Anchor" href="#adi的几种运放"></a> ADI的几种运放</h3><p>某宝找到一家“京东电子商城”可以配齐如上图的粉红色部分，元件比正常价格便宜很多还包邮，博主先试水，另外，他家还可以相当便宜买到 LP5907MFX- 3.3线性稳压器</p><p>注：“京东电子商城”的2元一片的AD8542缺货，我后来在&quot;优信电子&quot;买的(价格贵一倍)，三周目的精准测量说明“京东电子商城”的元件是原装正品，可放心褥羊毛</p><h3 id="拨轮开关"><a class="markdownIt-Anchor" href="#拨轮开关"></a> 拨轮开关</h3><p>我是从10几年前的收音机上拆的，以为这玩意儿大家都见过，结果一群友问我，好吧，找了找，”现密斯旗舰店“2元包邮可以买到两个，型号：贴片3脚 😳</p><p>附：<a href="https://datasheet.lcsc.com/szlcsc/Dial-the-triangular-big-head_C3690.pdf" target="_blank" rel="noopener">拨轮开关产品手册</a></p><h3 id="0603磁珠"><a class="markdownIt-Anchor" href="#0603磁珠"></a> 0603磁珠</h3><p>😭博主0603磁珠型号买错成150Ω，DCR 0.2Ω，1A了，稳定性可能会有影响，正确的规格是1K，DCR 0.5Ω，450mA</p><h3 id="micro-usb母座"><a class="markdownIt-Anchor" href="#micro-usb母座"></a> Micro-usb母座</h3><p>关键词：全贴有柱</p><h3 id="1ω低温漂电阻可选"><a class="markdownIt-Anchor" href="#1ω低温漂电阻可选"></a> 1Ω低温漂电阻(可选)</h3><p>因为uRLC校准挡有1Ω，若追求完美，建议备料的时候就买些1Ω的低温漂电阻校准</p><h2 id="焊接"><a class="markdownIt-Anchor" href="#焊接"></a> 焊接</h2><h3 id="pcb镊子"><a class="markdownIt-Anchor" href="#pcb镊子"></a> PCB镊子</h3><h4 id="铜镀金探针"><a class="markdownIt-Anchor" href="#铜镀金探针"></a> 铜镀金探针</h4><p>电桥测试镊子，开尔文夹都是铜镀金接触片，想找可替换镊子头代替，无奈都是绝缘材质，考虑过卖铜板回来自己做，但被常温镀金液及配套镀镍液的价格劝退，想到做定制线还剩余一些黄铜镀金的主板2510风扇母端子，遂用镊子展开+锤子简单处理(如图1)，对比下0805和0603贴片电阻大小(如图2)，剪掉多余部分，PCB镊子头留有焊盘，放上去如图3(未焊接)。PCB镊子上的测量线使用开尔文接法，此方案的在镊子短路时电阻约10<sub>100mΩ(夹得较紧为10</sub>30mΩ)</p><table>    <tr>        <td><img src="/845419ff/0713(14).png"></td>        <td><img src="/845419ff/0713(12).png"></td>        <td><img src="/845419ff/0713(13).png"></td>    </tr></table><h4 id="pcb镊子两半固定"><a class="markdownIt-Anchor" href="#pcb镊子两半固定"></a> PCB镊子两半固定</h4><p>将两半PCB固定孔对准，用胶带暂时固定，穿入0.6mm粗的焊锡丝(图2)，由于无热焊盘，非常难吃锡，强烈建议松香助焊，焊好效果如图3(整个焊盘都要上锡)</p><table>    <tr>        <td><img src="/845419ff/0713(1).png"></td>        <td><img src="/845419ff/0713(2).png"></td>        <td><img src="/845419ff/0713(3).png"></td>    </tr></table><h4 id="杜邦连接器销钉"><a class="markdownIt-Anchor" href="#杜邦连接器销钉"></a> 杜邦连接器销钉</h4><p>见老毛子word文档：两片探头合为一个镊子探头，PCB镊子尾部4个洞外侧俩个要插入适当长度的杜邦针焊接以保证机械强度(如紫色箭头处)</p><p><img src="/845419ff/%E6%9D%9C%E9%82%A6%E8%BF%9E%E6%8E%A5%E5%99%A8%E9%94%80%E9%92%89.png" alt="杜邦连接器销钉"></p><h4 id="焊好效果"><a class="markdownIt-Anchor" href="#焊好效果"></a> 焊好效果</h4><p>两片PCB镊子最好焊得较平直，镊子头的镀金探针可适当弯曲</p><table>    <tr>        <td><img src="/845419ff/0713(8).png"></td>        <td><img src="/845419ff/0713(15).png"></td>    </tr></table><h4 id="杜邦插销局部"><a class="markdownIt-Anchor" href="#杜邦插销局部"></a> 杜邦插销局部</h4><p>(图1图2)杜邦销钉已经被焊锡盖住了，注意这几个焊盘之间绿油桥很窄，稍不留神就连锡，又因为没有热焊盘，所以此处的导热很快，连锡后清理会非常麻烦，争取一次成功，实在悲剧了用风枪吹下来清理后重新焊接，然后你会发现杜邦销钉又歪了，因为我焊废了一组了，这是第二组PCB。。。另外，如果你背面焊得牢固，正面的探针接触点可以不上焊锡(图3)</p><table>    <tr>        <td><img src="/845419ff/0714(1).png"></td>        <td><img src="/845419ff/0714(3).png"></td>        <td><img src="/845419ff/0714(2).png"></td>    </tr></table><h3 id="所有元件焊好效果"><a class="markdownIt-Anchor" href="#所有元件焊好效果"></a> 所有元件焊好效果</h3><p>经过3天焊接，2天找电路虚焊，技术宅的梦幻仪器成了</p><p>注意，上文写过，micro-usb口的D+要飞一个2.2K的0603电阻到LDO的3V3，如图2</p><table>    <tr>        <td><img src="/845419ff/soldering_completed(1).png"></td>        <td><img src="/845419ff/soldering_completed(2).png"></td>    </tr></table><p>注：3225晶振强烈建议用风枪焊接</p><h2 id="固件版本变动"><a class="markdownIt-Anchor" href="#固件版本变动"></a> 固件版本变动</h2><p>实测，只有uRLC原帖最下方分享的uRLC_1_0_17_16.hex固件无锁，该版本的缺点是测速度慢，高测量频率为93.8K，187.5K，而不是其他固件的100K和200K，但是此版本有个好处，可以显示电压和电流通道PGA113的电压波形，即stm32的dU，dI两个ADC通道的波形，而其他版本都没有。uRLC讨论帖，老毛子网盘中所有分享的固件在开机30秒后会强制进入版本信息页面无法退出，连按中键关机都不能关机，只能拔电池或者等自动关机定时关机，连按中键只能循环切换三个信息页面，分别是uRLC版本，uRLC作者，发送芯片ID到指定邮箱。总之非常坑爹，老毛子作者说为了防止商家大量仿制该设备获利，所以固件不开源，但愿意为所有diy的爱好者提供免费的hex固件，于是要求所有diy玩家必须向radiokot论坛的GFX (即uRLC作者之一：帕维尔·斯梅坦尼科夫) 的邮箱发送芯片ID，等待作者专门为你使用芯片的id编译的固件用邮件发给你，uRLC_1_18_38.hex有锁固件的芯片ID页面如图1，图1上方两句俄文意思是<span style="color:blue;">备注地址，并提供：</span>图2是我向该页面的邮箱，发送的邮件，等待回复中😳</p><table>    <tr>        <td width="38%"><img src="/845419ff/chip_id.png"></td>        <td width="60%"><img src="/845419ff/chip_id.JPG"></td>    </tr></table><h2 id="元件测量"><a class="markdownIt-Anchor" href="#元件测量"></a> 元件测量</h2><h3 id="开路-短路"><a class="markdownIt-Anchor" href="#开路-短路"></a> 开路 | 短路</h3><p>未校准状态下，主页面的上栏为白底黑字，我还不知道怎么校准，先在未校准下测试，测量元件前，开路状态读数如图1，可短路(夹紧)PCB镊子的探针，会显示毫欧级的探针接触电阻如图2</p><table>    <tr>        <td width="50%"><img src="/845419ff/measurement(1).png"></td>        <td width="50%"><img src="/845419ff/measurement(2).png"></td>    </tr></table><h3 id="电阻-电容-电感"><a class="markdownIt-Anchor" href="#电阻-电容-电感"></a> 电阻 | 电容 | 电感</h3><p>在1V 10K频率下分别测量 10K 1% 0603电阻，100uF ±20% 7343封装的松下钽聚合物电容，以及±20% 2.2uH 2520封装的贴片电感：</p><table>    <tr>        <td><img src="/845419ff/measurement(3).png"></td>        <td><img src="/845419ff/measurement(4).png"></td>        <td><img src="/845419ff/measurement(5).png"></td>    </tr></table><h3 id="未校准下的测量精度"><a class="markdownIt-Anchor" href="#未校准下的测量精度"></a> 未校准下的测量精度</h3><p>在1V 10K频率下分别测量 10K 0.1% 25ppm 0603低温漂电阻，以及470pf ±1% 0603 NPO电容：</p><table>    <tr>        <td><img src="/845419ff/measurement_accurate(1).png"></td>        <td><img src="/845419ff/measurement_accurate(2).png"></td>    </tr></table><p>暂时测这些，其他频率，就不一一拍照了</p><h2 id="示波器页面"><a class="markdownIt-Anchor" href="#示波器页面"></a> &quot;示波器&quot;页面</h2><p>”示波器“是数字电桥DUT两端V和电流I的可视化，uRLC并没有示波器功能，无锁固件显示两个PGA113(电压和电流通道)的波形，有锁版固件显示为相角</p><h3 id="开路-短路-2"><a class="markdownIt-Anchor" href="#开路-短路-2"></a> 开路 | 短路</h3><p>在主界面向左拨动拨轮不放，等一小会儿会进入此页面，再次重复该操作可返回主页面，</p><p>前面说过，此功能为uRLC_1_0_17_16.hex固件独有，开路，短路，的波形如图1图2，</p><p>其他无示波器的固件版本显示如图3，注意图3是之前焊好还没正常工作时拍的，正常情况下开路时dU应该是1000mV以上，dI有100mV左右</p><table>    <tr><img src="/845419ff/oscillograph(1).jpg"></tr>    <tr><img src="/845419ff/oscillograph(2).jpg"></tr>    <tr><img src="/845419ff/no_oscillograph.jpg"></tr></table><h3 id="电阻-电容-电感-2"><a class="markdownIt-Anchor" href="#电阻-电容-电感-2"></a> 电阻 | 电容 | 电感</h3><p>在1V 10K频率下分别测量 10K 1% 0805电阻，47uF ±10% 6032C封装的AVX钽电容，以及±20% 15uH 0630封装的贴片电感，波形如下：</p><table>    <tr><img src="/845419ff/oscillograph(3).jpg"></tr>    <tr><img src="/845419ff/oscillograph(4).jpg"></tr>    <tr><img src="/845419ff/oscillograph(5).jpg"></tr></table><h2 id="固件版本又双叒叕变动了"><a class="markdownIt-Anchor" href="#固件版本又双叒叕变动了"></a> 固件版本又双叒叕变动了！</h2><p>之前焊好还没正常工作时，我用俄罗斯的社交软件<a href="https://yandex.ru/" target="_blank" rel="noopener">yandex.ru</a>注册了一个账号，向作者GFX发送了请求帮助的邮件，置顶图为芯片ID页的照片，并备注了固件版本为uRLC_1_18_38.hex，很蹩脚地说了一些的问题 😳</p><p>注：考虑到看到此博文会有不少中国的爱好者向作者申请固件，唠叨一下，毕竟是跨语言交流，写邮件开头要礼貌问好(你好也行)，称赞作者的劳动成果，介绍自己的身份，对机器翻译的俄语表示很抱歉，最重要的是，为了表明自己不是商家，最好附带自己diy的照片😂</p><p>18号下午13点有幸收到了来自GFX的回复 😙 ，邮件的附件是注册芯片ID后的固件：</p><p><img src="/845419ff/GFX_re.png" alt="GFX_re"></p><p>此固件我即使公开分享其他芯片也无法使用，因为本芯片ID唯一😕</p><p>进行一番操作后，刷入了新的固件，默认驱动SH1106，我们更改为SSD1306，测量速度不仅更快，高频率也为100K和200K了😃，但失去了示波器2333，解锁后的固件详情页从菜单根目录最下方Информация(版本信息)进入，用中键切换两次页面到芯片ID页面，可见芯片ID号不再显示，如图3😃</p><table>    <tr>        <td><img src="/845419ff/GFX_hex(1).png"></td>        <td><img src="/845419ff/GFX_hex(2).png"></td>        <td><img src="/845419ff/GFX_hex(3).png"></td>    </tr></table><p>新固件关闭自动模式，未校准，在1V 200KHz高频下 测 ±5% 100nF 1206 NPO电容，主页显示如图1，副页显示如图2</p><table>    <tr><img src="/845419ff/GFX_Measurement_NPO(1).png"></tr>    <tr><img src="/845419ff/GFX_Measurement_NPO(2).png"></tr></table><p>收到固件别忘了回复作者表示感谢，毕竟作者专门为你编译了一遍固件😂</p><h2 id="电磁屏蔽"><a class="markdownIt-Anchor" href="#电磁屏蔽"></a> 电磁屏蔽</h2><h3 id="pcb固定片"><a class="markdownIt-Anchor" href="#pcb固定片"></a> PCB固定片</h3><p>用于输入端的电磁屏蔽，同时使PCB镊子更稳固，要求不高可不加，我为了写教程和塞下502248锂电池就没有加，下图2是老毛子安装的效果：</p><table>    <tr>        <td width="50%"><img src="/845419ff/屏蔽板(2).png"></td>        <td width="50%"><img src="/845419ff/屏蔽板(1).png"></td>    </tr></table><h3 id="金属屏蔽罩"><a class="markdownIt-Anchor" href="#金属屏蔽罩"></a> 金属屏蔽罩</h3><p>在uRLC讨论区的第5页，uRLC作者之一Alex2用紫铜箔制作了EMI屏蔽罩，一处在探针之间用于(DA1，DA3的屏蔽)如图2；另一处形状如图1，安装在OLED下面如图2，帕瓦落地大侠的效果如图3</p><table>    <tr>        <td><img src="/845419ff/EMI_Alex2(2).jpg"></td>        <td><img src="/845419ff/EMI_Alex2(1).jpg"></td>        <td><img src="/845419ff/作品-帕瓦落地(1).jpg"></td>    </tr></table><p>这个我鸽了，逃)</p><h2 id="3d打印外壳"><a class="markdownIt-Anchor" href="#3d打印外壳"></a> 3D打印外壳</h2><table>    <tr>        <td><img src="/845419ff/实物效果(2).png"></td>        <td><img src="/845419ff/实物效果(3).png"></td>        <td><img src="/845419ff/实物效果(4).png"></td>    </tr></table><p>👆 已完工，耗材只有紫色了会比较难看，仅适配网盘版本的uLRC，展示图为窄边框oled，还有宽边框版本的，下载链接见上文 ”国内资料“ 部分</p><p>图3使用的是502248 500mAh 1S锂电池，装完电池还剩一点空间，于是飞了一个7.5x7.5mm的贴片蜂鸣器(串了一个22R的0603电阻限流)，上文分享的PCB打样文件引出了蜂鸣器的PB12引脚还加了一个电阻焊盘，方便大家飞线，因为博主不小心把PB12的脚飞断了😭，蜂鸣器只有有锁固件的菜单可选择开启/关闭</p><h2 id="测量技巧"><a class="markdownIt-Anchor" href="#测量技巧"></a> 测量技巧</h2><p>请阅读uRLC原帖段落 “<strong>Для максимальной точности измерений должны соблюдаться следующие условия:</strong> ”</p><h2 id="校准"><a class="markdownIt-Anchor" href="#校准"></a> 校准</h2><p>校准在老毛子的uRLC文档 “Описание 1.2.1” 中描述得很详细，摸索了两天，文档描述的OSL教准没看懂😳，以下校准有效，但校准方法可能有问题，建议大家自己看看文档</p><p>有两种校准方式：<span style="color:Blue;">开式校准，电阻校准</span></p><p><strong>注意：</strong><span style="color:Blue;">开闭校准</span>请务必在<span style="color:Blue;">电阻校准</span>前执行，若顺序颠倒，<span style="color:Blue;">电阻校准</span>的准确性将在<span style="color:Blue;">开闭校准</span>后丢失</p><p>校准的步骤有一大段都一样，下文我都用 <span style="color:BlueViolet;">“步骤1”</span> 表示</p><p><span style="color:BlueViolet;">步骤1</span>：它会临时返回主页面，自动多次读取夹持电阻的阻值，等10~30秒(等得会有点久)，待稳定，会显示 “Выполнено”(已执行)，单击中键会返回校准页菜单，返回后，若仅校准此阻值，则在此页面拨动滚轮选中”Сохранить“(保存)，会显示”Сохранено“(已保存)，最后一次单击中键，返回校准页菜单，若还想接着校准其他阻值可以校准完毕一起保存，可以在此页长按左键(拨轮向左)直接返回主页，若不保存则校准无效</p><p><strong>BUG</strong>：保存校准数据后回主页可能会假死，长按中键关机重启正常...</p><h3 id="在何种等效电路下校准"><a class="markdownIt-Anchor" href="#在何种等效电路下校准"></a> 在何种等效电路下校准？</h3><p>在默认的S模式下校准的，不知道这个有没有影响，老毛子文档未作详细描述，明细估计在俄文电桥论文里😳，但是作者建议测量大阻值电阻应切换等效电路为P，或者开启自动测量模式让程序自动切换：</p><p><img src="/845419ff/%E7%AD%89%E6%95%88%E7%94%B5%E8%B7%AFSP.png" alt="等效电路SP"></p><h3 id="开闭校准"><a class="markdownIt-Anchor" href="#开闭校准"></a> 开闭校准</h3><p>校准菜单页的”打开“和”关闭“并不是指校准是否打开，而是指镊子打开(开路)和闭合(短路)校准（之前一直没看明白，与2.5维交流后才明白😅）</p><p><img src="/845419ff/%E5%BC%80%E9%97%AD%E6%A0%A1%E5%87%86.png" alt="20200812103247"></p><h4 id="开始校准"><a class="markdownIt-Anchor" href="#开始校准"></a> 开始校准</h4><p>主页切花到需要校准的频率，进入校准菜单；</p><ul><li>开路校准，保持镊子开路，点击Разомкнутый(打开)，然后进行<span style="color:BlueViolet;">步骤1</span></li><li>段路校准，保持镊子闭合，点击Замкнутый(关闭)，然后进行<span style="color:BlueViolet;">步骤1</span></li></ul><h4 id="开闭校准的作用"><a class="markdownIt-Anchor" href="#开闭校准的作用"></a> 开闭校准的作用</h4><p>只有进行了开闭校准，开路状态的电容接近于归零：</p><table><thead><tr><th>未校准</th><th>开闭校准后</th></tr></thead><tbody><tr><td><img src="/845419ff/%E5%BC%80%E9%97%AD%E5%BC%8F%E6%A0%A1%E5%87%86(6).png" alt="开闭式校准(6)"></td><td><img src="/845419ff/%E5%BC%80%E9%97%AD%E5%BC%8F%E6%A0%A1%E5%87%86(1).png" alt="开闭式校准(1)"></td></tr><tr><td><img src="/845419ff/%E5%BC%80%E9%97%AD%E5%BC%8F%E6%A0%A1%E5%87%86(3).png" alt="开闭式校准(3)"></td><td><img src="/845419ff/%E5%BC%80%E9%97%AD%E5%BC%8F%E6%A0%A1%E5%87%86(2).png" alt="开闭式校准(2)"></td></tr></tbody></table><p>若主参数没有显示，是因为开路的阻值太大，电桥分离的L或C的值不在uRLC的量程内，副参数页能看到：</p><table>    <tr>        <td><img src="/845419ff/开闭式校准(5).png"></td>        <td><img src="/845419ff/开闭式校准(4).png"></td>    </tr></table><h3 id="电阻校准"><a class="markdownIt-Anchor" href="#电阻校准"></a> 电阻校准</h3><h4 id="电阻校准子菜单"><a class="markdownIt-Anchor" href="#电阻校准子菜单"></a> 电阻校准子菜单</h4><p>每种阻值的子菜单一样：</p><p><img src="/845419ff/%E6%A0%A1%E5%87%86_%E8%8F%9C%E5%8D%95.png" alt="校准_菜单"></p><h4 id="电阻选择"><a class="markdownIt-Anchor" href="#电阻选择"></a> 电阻选择</h4><p>见<a href="https://www.radiokot.ru/forum/viewtopic.php?f=25&amp;t=157765&amp;start=520" target="_blank" rel="noopener">uRLC讨论帖P27：周日十二月22，2019 ~ 周日十二月29，2019（Alex2与文格勒的对话）</a></p><p>作者Alex2建议uRLC应使用0805/1206/2512的SMD电阻进行校准，因为贴片阻没有导线，寄生参数比<strong>文格勒</strong>照片中使用的 “大长腿“ 电阻的要低得多，博主使用物料里的0603低温漂电阻校准</p><h4 id="校准顺序及次数"><a class="markdownIt-Anchor" href="#校准顺序及次数"></a> 校准顺序及次数</h4><p>根据测试，应该：</p><ul><li><p>同频率下电阻的校准顺序对测量的结果无影响可以1Ω，100Ω，1K，10K，100K，也可以1K，100Ω，100K，1，10K...的阻值校准</p></li><li><p>不同频率的校准顺序对测量的结果无影响可以126，1K，10K，100K，200K，也可以100K，126，200K，1K，10K...的频率校准</p></li></ul><p>5种电阻值，5种频率，遍历所有校准点<strong>需校准25次</strong></p><h4 id="悬空校准"><a class="markdownIt-Anchor" href="#悬空校准"></a> 悬空校准</h4><p>贴片电阻虽容易弹飞，最好不要将其按压在某一平面上，比如下面垫张A4纸，纸也有电阻（MΩ级别)，用探针去夹持校准时，电阻还压在纸上，最好悬空校准，怕手抖弹飞可以用个皮筋圈：</p><table>    <tr>        <td><img src="/845419ff/校准夹持方式(2).png"></td>        <td><img src="/845419ff/校准夹持方式(1).png"></td>    </tr></table><h4 id="rcl参数"><a class="markdownIt-Anchor" href="#rcl参数"></a> RCL参数</h4><p>根据上面的校准页目录树，每一种阻值的子目录都有RCL三个参数可以微调，R是主参数校准的阻值，CL是寄生参数</p><ul><li><strong>R参数默认值</strong>：是标准值，例如100K页面内R默认是100K</li><li><strong>C，L参数默认值</strong>：作者Alex2说：为了提高校准的准确性，可以选择输入要校准的电阻器的寄生参数，随着频率的增加，寄生参数会明显影响高阻值电阻的测量，默认情况下，C，L参数为0805电阻的平均值（C = 0.079pF，L = 4.999nH）</li></ul><p>所以，若你手头只有贴片低温漂电阻，没有更高端的电桥测R参数以及寄生参数，那么R，C，L就用默认值校准吧</p><h4 id="参数微调"><a class="markdownIt-Anchor" href="#参数微调"></a> 参数微调</h4><p>若你用更精确的电桥测某一个100K的电阻为98.4K，那么你可以微调为98.4K进行校准，微调最小幅度为0.1%，微调方法如下：</p><p>（以R参数为例，C，L副参数调法一样）：</p><ul><li>​第一次中键(单击”R“)，进入参数设置页面，默认幅度为10%，左右拨动拨轮每次步进一个幅度</li><li>​第二次中键单击，幅度变为1%，左右拨动拨轮每次步进一个幅度</li><li>​第三次中键单击，幅度变为0.1%，左右拨动拨轮每次步进一个幅度</li><li>​第四次中键单击，返回RCL页面</li></ul><p>100K的R页面三次幅度变化如下：</p><table>    <tr>        <td><img src="/845419ff/校准_参数步进(3).png"></td>        <td><img src="/845419ff/校准_参数步进(2).png"></td>        <td><img src="/845419ff/校准_参数步进(1).png"></td>    </tr></table><p>PS：100K校准居然支持微调到MΩ(单位字符串从KΩ自动变为MΩ)，如果是插值校准那么用1MΩ校准后再测100K可能没有用100K校准测精确，没有找到作者的详细描述😳</p><h4 id="开始校准-2"><a class="markdownIt-Anchor" href="#开始校准-2"></a> 开始校准</h4><p>文字描述可能比较难懂，建议先看看博主录的 <a href="https://pan.baidu.com/s/1LMDuLg4pThXHuarPAC2Q7g" target="_blank" rel="noopener">uRLC校准演示视频，提取码：x88j</a> （群文件也有）</p><p>固定好电阻，在主页面切换至需要校准的频率下，单击中键一路切换到对应阻值的子菜单，点击”Ок“(俄文，OK的意思)，然后进行<span style="color:BlueViolet;">步骤1</span></p><p>在同一电阻校准下，可能不用每个频率每次校准都要保存一次，而是校准5种频率后保存一次，但博主每次都保存了😳</p><h4 id="重置所有校准数据"><a class="markdownIt-Anchor" href="#重置所有校准数据"></a> 重置所有校准数据</h4><p>校准页中键点击”Сбросить“(重置)即可</p><h4 id="校准前后对比"><a class="markdownIt-Anchor" href="#校准前后对比"></a> 校准前后对比</h4><p>使用物料表中的0.1% 25PPM 0603电阻校准，下表给出部分校准前后对比😎</p><table><thead><tr><th>频率</th><th>阻值</th><th>校准前</th><th>校准后</th></tr></thead><tbody><tr><td>1kHz</td><td>1K</td><td><img src="/845419ff/%E6%A0%A1%E5%87%86R(1).jpg" alt="校准R(1)"></td><td><img src="/845419ff/%E6%A0%A1%E5%87%86R(2).jpg" alt="校准R(2)"></td></tr><tr><td>200kHz</td><td>1K</td><td><img src="/845419ff/%E6%A0%A1%E5%87%86R(3).jpg" alt="校准R(3)"></td><td><img src="/845419ff/%E6%A0%A1%E5%87%86R(4).jpg" alt="校准R(4)"></td></tr><tr><td>200kHz</td><td>100K</td><td><img src="/845419ff/%E6%A0%A1%E5%87%86R(5).jpg" alt="校准R(5)"></td><td><img src="/845419ff/%E6%A0%A1%E5%87%86R(6).jpg" alt="校准R(6)"></td></tr></tbody></table><h2 id="bug汇总"><a class="markdownIt-Anchor" href="#bug汇总"></a> BUG汇总</h2><p>（根据uRLC有锁固件18_38.hex或18_39.hex，且屏幕为SD1315测试，以下BUG均未向论坛报告，有空再说）</p><h3 id="以下bug大多数可重启解决"><a class="markdownIt-Anchor" href="#以下bug大多数可重启解决"></a> 以下BUG大多数可重启解决</h3><ol><li>主页主参数会卡住不刷新，但不是死机，可以进入菜单</li><li>任何情况下都有一定的概率突然抽风，出现 Bug 1，但大多数情况是正常的😂</li><li>切换测量频率时，可能会出现 Bug 1</li><li>校准保存后返回主页面可能会出现 Bug 1</li><li>主页切换到参数页or菜单页，或从参数页or菜单页长按左键切回主页，且主页频率为10K，100K或200K时，<span style="color:Blue;">蜂鸣器只响一声</span>(BUG)，然后必定会出现 Bug 1，重启无法解决，要在较低的频率(126和1K)下切换，<span style="color:Blue;">蜂鸣器会短促地响两声</span>，才会正常切换。<br><span style="color:Red;">注：</span>若想在副参数页面看10K，100K或200K频率下的参数，建议先在126和1K下从主页切换到副参数页，在副参数页左右拨轮切换到高频，看完后，还是在副参数页左右拨轮切换到低频返回主页（够麻烦的😢 ）</li></ol><h3 id="以下bug必须用特殊方法解决"><a class="markdownIt-Anchor" href="#以下bug必须用特殊方法解决"></a> 以下BUG必须用特殊方法解决</h3><ol><li>屏幕亮度设置为5%，1.3寸SD1315会永久黑屏，且在黑屏模式下盲选其他亮度无法恢复，重刷同一固件还是如此，解决办法：刷入uRLC无锁固件(该固件5%亮度不会黑屏)，然后进入菜单页将亮度改为100%，驱动改为SSD1306(若不这样下一步还是黑屏，估计此两步骤改变了EEPROM 5%亮度的参数)，最后，再次刷入授权固件重新设置即可恢复，除5%亮度外，其他亮度均正常</li></ol><h3 id="以下bug无法解决"><a class="markdownIt-Anchor" href="#以下bug无法解决"></a> 以下BUG无法解决</h3><ol><li>进入副参数页面或菜单页瞬间，屏幕内容的刷新可能不完全，前者需等待一下，后者需手动用拨轮递归菜单栏让程序刷新一次</li><li>SD1315 设置屏幕旋转180度无效</li></ol><h2 id="续航测试"><a class="markdownIt-Anchor" href="#续航测试"></a> 续航测试</h2><p>使用502248 3.7V 500mAh锂电池，OLED亮度100% 频率126Hz 测试电压1.0V 不测量任何元件，测试记录如下：</p><p>7月30日 下午15:30开始 满格电(6格)7月31日 凌晨1:20结束 剩3格电7月31日 上午9:35继续7月31日 下午3:11 剩1格电7月31日 下午5:12 剩0格电7月31日 下午6:30熄屏，再次开启3分钟熄屏(锂电池自带的过放保护芯片关断)</p><p>待机约<span style="color:Blue;">18小时30分钟</span></p><h2 id="新固件18-39"><a class="markdownIt-Anchor" href="#新固件18-39"></a> 新固件18-39</h2><p>群员2.5维diy成功，收到了作者的最新oled固件，uRLC_1_18_39.hex，老毛子网盘发布了此固件，此固件在打包资料里我也上传了</p><p>此固件我还未测试，因为可能又要发一次邮件+校准25次，有时间再说，逃）</p><h3 id="one-more-thing"><a class="markdownIt-Anchor" href="#one-more-thing"></a> One More thing</h3><p>我直接刷uRLC的18_39固件默认是无锁状态，之前18_38固件的校准也还有效，看样子老毛子把我的芯片ID留存在新的固件里了，不胜荣幸 ​，​喝杯☕冷静一下​</p><p>新固件详细参数页面增加了一个，即17_16.hex固件的波形图又回来了</p><table>    <tr>        <td><img src="/845419ff/18_19_page(3).png"></td>        <td><img src="/845419ff/18_19_page(1).png"></td>        <td><img src="/845419ff/18_19_page(2).png"></td>    </tr></table><p>其他改动待测试</p><h2 id="返工"><a class="markdownIt-Anchor" href="#返工"></a> 返工</h2><h3 id="1206-npo"><a class="markdownIt-Anchor" href="#1206-npo"></a> 1206 NPO</h3><table>    <tr>        <td><img src="/845419ff/1206-NPO(2).png"></td>        <td><img src="/845419ff/1206-NPO(3).png"></td>        <td><img src="/845419ff/1206-NPO(1).png"></td>    </tr></table><h3 id="测试夹触头"><a class="markdownIt-Anchor" href="#测试夹触头"></a> 测试夹触头</h3><p>大大提升接触可靠性</p><table>    <tr>        <td><img src="/845419ff/镀金触点(3).png"></td>        <td><img src="/845419ff/镀金触点(2).png"></td>        <td><img src="/845419ff/镀金触点(1).png"></td>    </tr></table><h2 id="进度一览"><a class="markdownIt-Anchor" href="#进度一览"></a> 进度一览</h2><table><thead><tr><th>日期</th><th></th></tr></thead><tbody><tr><td>2020-07-01</td><td>开始整理老毛子资料，pcb打样</td></tr><tr><td>2020-07-03</td><td>采购了第一批测试固件的必要物料</td></tr><tr><td>2020-07-04</td><td>收到PCB，遂分板，打磨探针</td></tr><tr><td>2020-07-05</td><td>一周目PCB焊接完刷固件的必要的元件，但未成功刷入固件</td></tr><tr><td>2020-07-06</td><td>一周目PCB刷入固件，完成固件初测</td></tr><tr><td>2020-07-07</td><td>采购了模拟部分的所有物料，发布此博文同步更新</td></tr><tr><td>2020-07-08</td><td>与zwei13取得联系</td></tr><tr><td>2020-07-09</td><td>Ti官方的件成功收到，所有物料清点完毕，唯独AD8542缺货，只能重新采购</td></tr><tr><td>2020-07-10</td><td>咕咕咕？改进版电路在画了</td></tr><tr><td>2020-07-12</td><td>AD8542收到，全套物料配齐</td></tr><tr><td>2020-07-13</td><td>二周目PCB处理PCB镊子失败，三周目PCB成功</td></tr><tr><td>2020-07-15</td><td>三周目PCB焊接完成，但开路短路dU,dI无正弦波，对照原理图检查元件，找虚焊点</td></tr><tr><td>2020-07-17</td><td>风枪吹焊了一遍，确认是焊接不良，三周目PCB正常工作，自动识别并测量电阻，电容，电感，测0.1% 10K电阻值为9.999K，可见未校准读数仍然准确，uRLC试制成功</td></tr><tr><td>2020-07-18</td><td>邮箱收到俄罗斯作者GFX的授权固件，此博客电路diy和验证部分更新完毕</td></tr><tr><td>分割线</td><td>———————————————— ₍₍Ϡ(੭•̀ω•́)੭✧⃛ ————————————————</td></tr><tr><td>2020-07-20</td><td>在矿坛和一乐电子发表uRLC主题，开始用sw设计uRLC外壳 (老毛子网盘版)</td></tr><tr><td>2020-07-22</td><td>完成外壳设计，叁條的主子 优化了lay6文件的镊子部分</td></tr><tr><td>2020-0723</td><td>外壳3D打印完毕，镊子用热缩管套上了，差固定外壳用的M2x8沉头螺丝</td></tr><tr><td>2020-0725</td><td>题图修改为最终完成效果</td></tr><tr><td>2020-0729</td><td>更新了电阻校准部分，更完了uRLC多级菜单</td></tr><tr><td>2020-0731</td><td>BUG汇总，PCB打样增加了告示，点击文章右侧目录无法快速跳转的问题已修复</td></tr><tr><td>2020-0805</td><td>设计了1.3寸SD1306版本的外壳(宽屏)，待群友装机测试没问题再分享</td></tr><tr><td>2020-0806</td><td>刷入18_39固件</td></tr><tr><td>2020-0808</td><td>分享SD1306/SH1106宽边框版本的外壳文件</td></tr><tr><td>2020-0809</td><td>返工1206 NPO</td></tr><tr><td>2020-0812</td><td>更新开闭校准，分享优化的ZuuM版本打样文件</td></tr><tr><td>2020-0816</td><td>帕瓦落地使用金封金属箔电阻进行了uRLC精度测试(仅做开短路校准，精度就可达0.1%)</td></tr><tr><td></td><td>返工测试夹触头</td></tr></tbody></table><h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2><p>👉 博主根据自己的理解更新此博文，难免有疏漏及理解错误之处，建议各位感兴趣的大侠们研究下老毛子的文档，去uRLC讨论帖深挖细节，高手见谅，不幸赐教！</p><p>欢迎在博客下方留言！为尊重原作者的劳动成果，与破解固件有关的留言都会删除！</p>]]></content>
      
      
      <categories>
          
          <category> 仪表制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp8266开发板设计：D1 mini Plus V1.0</title>
      <link href="/db8555d9/"/>
      <url>/db8555d9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="d1-mini-plus"><a class="markdownIt-Anchor" href="#d1-mini-plus"></a> D1 mini Plus</h1><p><a href="https://github.com/oldgerman/D1-mini-Plus-V1.0" target="_blank" rel="noopener">github项目地址</a></p><p>A development kit Improved from <a href="https://docs.wemos.cc/en/latest/d1/d1_mini_pro.html" target="_blank" rel="noopener">D1 mini Pro V1.0.0</a></p><p>The first test board welded by hand and it works great!</p><h2 id="add-connector-bolts-for-fixing"><a class="markdownIt-Anchor" href="#add-connector-bolts-for-fixing"></a> Add connector &amp; bolts for fixing</h2><a id="more"></a><table>    <tr>    <td><img src="/db8555d9/D1miniPlusV1.jpg"></td>        <td><img src="/db8555d9/AddConnector-1.png"></td><td><img src="/db8555d9/AddConnector-2.png" < td>    </td></tr></table><h2 id="features"><a class="markdownIt-Anchor" href="#features"></a> Features</h2><ul><li>Pin to pin with D1 mini development kits</li><li>Double-sided PCB layout, the board thickness is 0.8mm, size is 36.0mm x25.6mm</li><li>All components are on one side</li><li>Discrete components are packaged in 0603, which is easy to solder by hand</li><li>There are four M2 holes around the PCB that are easy to fix</li><li><a href="https://grabcad.com/library/usb-c-connector-horizontal-in-board-1-6mm-1" target="_blank" rel="noopener">USB C Connector horizontal In-Board 1.6mm</a> supports positive and negative insertion</li><li>Leads the TX &amp; RX LEDs  GPIO.0-1 of cp2104, you can use AN721 to turn them on or off</li><li>Use the <a href="https://www.st.com/en/protection-devices/usblc6-2.html" target="_blank" rel="noopener">USBLC6-2</a> ic to ESD protection, If you don't need it, you don't need to solder, this will not affect the serial port work</li></ul><h2 id="pin-map-back-view"><a class="markdownIt-Anchor" href="#pin-map-back-view"></a> Pin Map (Back View)</h2><p>There is no cartoon logo on the back of the shared PCB file XD</p><p><img src="/db8555d9/D1miniPlusV1Back.jpg" alt></p><h2 id="designator-parameter"><a class="markdownIt-Anchor" href="#designator-parameter"></a> Designator &amp; Parameter</h2><table><thead><tr><th>Qty</th><th>Value</th><th>Device</th><th>Package</th><th>Parts</th><th>Description</th></tr></thead><tbody><tr><td>1</td><td>26MHz</td><td>3225_CRYSTALL</td><td>3.2X2.5_KX-7</td><td>U$3</td><td>EPSON TSX-3225 ±10ppm 9pf</td></tr><tr><td>2</td><td>2.54mm</td><td>CONN_08NO_SILK_FEMALE_PTH</td><td>1X08_NO_SILK</td><td>J1, J2</td><td>0.1 inch spaced/style header connections</td></tr><tr><td>1</td><td>U1</td><td>ME6211C33M5G-N</td><td>SOT23-5</td><td>U$1</td><td>3.3V 500mA 低差压线性稳压器</td></tr><tr><td>1</td><td>2.4GHz</td><td>RAINSUN_AT9520</td><td>AN9520</td><td>U$4</td><td>Ceramic antenna 陶瓷天线</td></tr><tr><td>1</td><td></td><td>USB-C_BELOW_BOARD</td><td>USB-C_BLOW_BOARD</td><td>USB-C</td><td></td></tr><tr><td>2</td><td>blank</td><td>RESISTOR0603</td><td>603</td><td>R11, R12</td><td>Generic Resistor Package</td></tr><tr><td>1</td><td>100k</td><td>RESISTOR0603</td><td>603</td><td>R13</td><td>Generic Resistor Package</td></tr><tr><td>5</td><td>100nF</td><td>CAP-0603</td><td>603</td><td>C4, C7, C12, C13, C14</td><td></td></tr><tr><td>5</td><td>10k</td><td>RESISTOR0603</td><td>603</td><td>R7, R8, R15, R16, R17</td><td>Generic Resistor Package</td></tr><tr><td>2</td><td>10pF</td><td>CAP-0603</td><td>603</td><td>C5, C11</td><td></td></tr><tr><td>1</td><td>10uF</td><td>CAP-0603</td><td>603</td><td>C9</td><td></td></tr><tr><td>1</td><td>12k</td><td>RESISTOR0603</td><td>603</td><td>R5</td><td>Generic Resistor Package</td></tr><tr><td>3</td><td>1k</td><td>RESISTOR0603</td><td>603</td><td>R4, R9, R10</td><td>Generic Resistor Package</td></tr><tr><td>1</td><td>1uF</td><td>CAP-0603</td><td>603</td><td>C8</td><td></td></tr><tr><td>2</td><td>1uF/X7R</td><td>CAP-0603</td><td>603</td><td>C1, C2</td><td></td></tr><tr><td>1</td><td>200</td><td>RESISTOR0603</td><td>603</td><td>R6</td><td>Generic Resistor Package</td></tr><tr><td>1</td><td>220k</td><td>RESISTOR0603</td><td>603</td><td>R14</td><td>Generic Resistor Package</td></tr><tr><td>2</td><td>4.7uF</td><td>CAP-0603</td><td>603</td><td>C3, C6</td><td></td></tr><tr><td>2</td><td>470</td><td>RESISTOR0603</td><td>603</td><td>R2, R3</td><td>Generic Resistor Package</td></tr><tr><td>1</td><td>4k7</td><td>RESISTOR0603</td><td>603</td><td>R1</td><td>Generic Resistor Package</td></tr><tr><td>1</td><td>5.6pF</td><td>CAP-0603</td><td>603</td><td>C10</td><td></td></tr><tr><td>1</td><td>6V 0.5A</td><td>RESISTOR0603</td><td>603</td><td>F1</td><td>Generic Resistor Package</td></tr><tr><td>1</td><td>B5819W</td><td>DIODE-SOD323-R</td><td>SOD323-R</td><td>D3</td><td>Schottky DIODE</td></tr><tr><td>3</td><td>BLUE</td><td>LED-BLUE0603</td><td>LED-0603</td><td>D1, D2, D4</td><td>Blue SMD LED</td></tr><tr><td>1</td><td>CP2104</td><td>CP2104</td><td>QFN24_4MM_SMSC</td><td>U3</td><td>CP2104 - USB to UART Bridge</td></tr><tr><td>1</td><td>ESP8266</td><td>ESP8266</td><td>QFN32-5X5MM</td><td>U1</td><td>Espressif ESP8266 WiFi/Microcontroller SoC</td></tr><tr><td>1</td><td>SWITCH</td><td>MOMENTARY-SWITCH-SPST-SMD</td><td>TACTILE_SWITCH_SMD</td><td>S1</td><td>Momentary Switch (Pushbutton) - SPST</td></tr><tr><td>1</td><td>U2</td><td>UMH3N</td><td>SOT363</td><td>U$2</td><td>NPN 100mA 50V Complex Digital Transistors (Bias Resistor Built-in Transistors)</td></tr><tr><td>1</td><td>USBLC6-2</td><td>USBLC6-2SOT23-6</td><td>SOT23-6</td><td>U$11</td><td>low capacitance ESD protection</td></tr><tr><td>1</td><td>W25Q32FV</td><td>W25Q32FVSS</td><td>SOIC-8</td><td>U2</td><td>W25Q32FV 32Mb (4MB) Serial Flash Memory</td></tr></tbody></table><h2 id="spi-test-st7789v-graphicstest"><a class="markdownIt-Anchor" href="#spi-test-st7789v-graphicstest"></a> SPI test: ST7789V Graphicstest</h2><p>Testing in SPI FREQUENCY  40000000</p><p><img src="/db8555d9/TFT_espiTest.gif" alt="TFT_espiTest"></p><p><a href="https://github.com/Bodmer/TFT_eSPI" target="_blank" rel="noopener">For more, please see...</a></p><h2 id="i2c-test-read-mpu6050-dmp-euler-angles-in-degrees"><a class="markdownIt-Anchor" href="#i2c-test-read-mpu6050-dmp-euler-angles-in-degrees"></a> I2C test: read MPU6050 DMP Euler angles in degrees</h2><table>    <tr>        <td><img src="/db8555d9/MPU6050_I2C_Test-1.jpg"></td><td><img src="/db8555d9/MPU6050_I2C_Test-2.jpg" < td>    </td></tr></table><p><a href="https://github.com/jrowberg/i2cdevlib/tree/master/Arduino/MPU6050" target="_blank" rel="noopener">For more, please see...</a></p><h2 id="adc0-test-basic-ntc-thermistor-measurement-circuit"><a class="markdownIt-Anchor" href="#adc0-test-basic-ntc-thermistor-measurement-circuit"></a> ADC0 test: basic NTC thermistor measurement circuit</h2><table>    <tr>        <td><img src="/db8555d9/NTC100k_Demo-1.jpg"></td><td><img src="/db8555d9/NTC100k_Demo-2.png" < td>    </td></tr></table><p><a href="https://www.circuitbasics.com/arduino-thermistor-temperature-sensor-tutorial/" target="_blank" rel="noopener">For more, please see...</a></p><h2 id="wifi-scan-test"><a class="markdownIt-Anchor" href="#wifi-scan-test"></a> Wifi scan test</h2><p><img src="/db8555d9/WifiScan.jpg" alt></p><p><a href="https://github.com/esp8266/Arduino/blob/master/libraries/ESP8266WiFi/examples/WiFiScan/WiFiScan.ino" target="_blank" rel="noopener">For more, please see...</a></p><h2 id="cp2104-tx-rx-leds-how-to-get-them-working"><a class="markdownIt-Anchor" href="#cp2104-tx-rx-leds-how-to-get-them-working"></a> CP2104 TX &amp; RX LEDs - How to get them working?</h2><p>First, download and unzip the AN721: <a href="https://www.silabs.com/documents/public/example-code/AN721SW.zip" target="_blank" rel="noopener">Download link</a>, for windows, click in this document</p><p><img src="/db8555d9/AN721.png" alt></p><p>Second, run the CP21xxCustomizationUtility.exe</p><p><img src="/db8555d9/AN721_0.png" alt></p><p>Third, according to the page 28 from  <a href="https://www.silabs.com/documents/public/application-notes/AN721.pdf" target="_blank" rel="noopener">AN721: USBXpress™ Device Configuration and Programming Guide</a>, we set the latch for ticking the GPIO0 and GPIO1;</p><p>Click &quot;Program Device&quot; button and wait a minute,the change will be saved in CP2104:</p><table>    <tr>        <td><img src="/db8555d9/AN721_1.png"></td><td><img src="/db8555d9/AN721_2.png" < td>    </td></tr></table><p>Finally, whether you upload a program or use a serial port, the led of CP2104 will flash, enjoy it 😂</p><table>    <tr>        <td><img src="/db8555d9/SerialUpload.png"></td><td><img src="/db8555d9/SerialBlink.png" < td>    </td></tr></table>]]></content>
      
      
      <categories>
          
          <category> PCB设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> type-c </tag>
            
            <tag> esp8266 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机智屏补焊ESP32模组刷wifi固件</title>
      <link href="/b216a5e8/"/>
      <url>/b216a5e8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p><a href="https://github.com/miblooming/JZ-TS24-2" target="_blank" rel="noopener">机智屏github项目地址</a></p><p>我买的机智屏3.5寸不带wifi模组，型号JZ-TS35-V3.1，但是PCB背面留有ESP32-WROOM模组的邮票孔焊盘，于是买了一个ESP32-WROOM-32U，将esp32用热风枪230度焊上：</p><p><img src="/b216a5e8/32u%E7%84%8A%E6%8E%A5.jpg" alt></p><p>ESP32-WROOM-32U的好处就是没有多出来的一块PC天线，不影响机智云的外壳安装，（如下方左图）取而代之的是模组右上角的IPX座子，在射频电路的天线几乎都是这种接口，例如路由器，网卡的天线，你只需要买一个是这种接口的2.4G天线接上就有良好的WiFi信号了：</p><a id="more"></a><table>    <tr>        <td><img src="/b216a5e8/ESP32-WOOM-32U模组.jpg" < td>        </td><td width="43%"><img src="/b216a5e8/wifi固件无法升级.jpg" < td>        </td></tr></table><p>把jzwifi.bin文件放在SD卡的根目录下，重启机智云，会自动升级WiFi固件，就是机智云的STM32F2芯片会将这个文件写到esp32的flash芯片里，但是等了半天还是0%的进度（如上方右图）</p><p>所以这是为什么呢？？因为esp32模组出厂flash芯片里数据都被擦除掉了，esp32要想运行<strong>jzwifi.bin</strong>文件，flash芯片还要上传两个文件才行，即<strong>bootloader.bin</strong>，和<strong>custom.bin</strong>，<span style="color:Blue;">这两个文件具体叫啥名字不重要，你只要记住它是干啥的就行，等下步骤上传blink程序会自动包含前两个程序（即引导程序和程序分区表），jzwifi.bin文件只是第三个“用户程序”</span></p><p>三个文件的定义如下：</p><p><img src="/b216a5e8/esp32flashbin%E4%B8%89%E4%B8%AA%E6%96%87%E4%BB%B6.png" alt></p><h2 id="硬件部分"><a class="markdownIt-Anchor" href="#硬件部分"></a> 硬件部分</h2><h3 id="引脚定义"><a class="markdownIt-Anchor" href="#引脚定义"></a> 引脚定义</h3><p>ESP-WROOM-32U模块正反面：</p><p><img src="/b216a5e8/esp32-wroom-32u.png" alt></p><p>pinout，找的esp32-WROOM-32的，没有屏蔽罩，对应上图正面，注意不要看成背面了</p><p><img src="/b216a5e8/ESP32-WROOM-32-ESP-WROOM-32.png" alt></p><h3 id="基础外围电路"><a class="markdownIt-Anchor" href="#基础外围电路"></a> 基础外围电路</h3><p>烧录前，需要飞线以下外围电路：</p><p><img src="/b216a5e8/FOU1WS0JBE12R70.LARGE.jpg" alt></p><h3 id="焊接外围电路"><a class="markdownIt-Anchor" href="#焊接外围电路"></a> 焊接外围电路</h3><p>左边的图是4.0寸的机智云板背面，图中红圈中的5个预留引脚和3.5寸SD卡槽下方的5个预留引脚的一样，都引出了上图esp32基础外围电路所需的5个引脚：分别是TX，RX，EN（就是NodeMCU esp8266的Reset按钮，对应GPIO2），BOOT（就是NodeMCU esp8266的flash按钮，对应GPIO0），3V3，GND</p><p>在模组四周飞线焊接外围电路的电阻，led，开关，然后将机智云3.5寸SD卡下方的引脚引出杜邦插针</p><table>    <tr>        <td><img src="/b216a5e8/JST_4.0.png"></td>        <td width="50%"><img src="/b216a5e8/外围.jpg"></td>    </tr></table><h2 id="软件部分"><a class="markdownIt-Anchor" href="#软件部分"></a> 软件部分</h2><h3 id="安装esp32-sdk"><a class="markdownIt-Anchor" href="#安装esp32-sdk"></a> 安装ESP32 SDK</h3><p>打开arduino ide首选项，添加arduino ESP32 SDK环境的地址</p><p><a href="https://dl.espressif.com/dl/package_esp32_index.json" target="_blank" rel="noopener">https://dl.espressif.com/dl/package_esp32_index.json</a></p><p>在开发板管理器中搜索esp32 ，点击安装即可：</p><p><img src="/b216a5e8/arduinoesp32sdk.png" alt="20200506232610"></p><p>esp32的开发板随便选一个，我选的Node32s，只要不选Wrover就行，因为这种esp32模块是带PSRAM（静态随机访问存储器）的，flash空间在cache的映射和不带PSRAM的有点不一样</p><p>CPU，flash，晶振频率默认就行，上传速度可以选912600，因为默认的115200波特是在太慢了</p><h3 id="ttl烧录器接线"><a class="markdownIt-Anchor" href="#ttl烧录器接线"></a> TTL烧录器接线</h3><p>按下图用TTL模块接线：注意TTL烧录器的RX接TX，TX接RX</p><p><img src="/b216a5e8/RXTX%E6%8E%A5%E7%BA%BF.jpg" alt></p><p>在arduino ide中打开自动检测到的COM口，我的是COM12</p><h3 id="esp32-启动模式"><a class="markdownIt-Anchor" href="#esp32-启动模式"></a> esp32 启动模式</h3><p>如果 GPIO0 / GPIO2 同时为低电平，则会进入下载模式，等待串口通信信息，GPIO2就是EN引脚</p><p>如果GPIO0为高电平，则会进入Flash 运行模式，启动SPI 驱动，并加载Flash中的程序段</p><h3 id="刷机模式测试"><a class="markdownIt-Anchor" href="#刷机模式测试"></a> 刷机模式测试</h3><p>将esp32 GPIO0下拉再通电，arduino ide 打开COM12的串口监视器，显示如下**“waiting for download”**，就OK，可以随时编译程序上传了</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">rst:</span><span class="number">0x1</span> (POWERON_RESET),<span class="string">boot:</span><span class="number">0x1</span> (DOWNLOAD_BOOT(UART0<span class="regexp">/UART1/</span>SDIO_FEI_REO_V2))</span><br><span class="line">waiting <span class="keyword">for</span> download</span><br></pre></td></tr></table></figure><h3 id="hello-world"><a class="markdownIt-Anchor" href="#hello-world"></a> Hello World</h3><p>上传blink示例程序顺便加一句hello World，成功运行串口输出如下（不要在意少打了一个“l”）</p><p><span style="color:Blue;">该步骤目的是利用上传的blink程序向esp32的flash地址0x1000和0x8000写入上面说的<strong>bootloader引导程序</strong>和<strong>flash分区表程序</strong>：</span>，此步骤的用户程序是blink，等下我们替换为jzwifi.bin文件就行</p><p>（为啥不直接给前两个文件，因为我在esp32 SDK文件夹里只找到了各种bootloader.bin，没有找到分区表.bin，分区表二进制文件估计是每次编译生成的，具体细节我也不太懂，因为我第一次用裸奔esp32模组= =）</p><p><img src="/b216a5e8/blink.png" alt="20200506165851"></p><h3 id="esp32的3个bin文件烧录地址"><a class="markdownIt-Anchor" href="#esp32的3个bin文件烧录地址"></a> ESP32的3个bin文件烧录地址：</h3><p><img src="/b216a5e8/esp32flashbin%E4%B8%89%E4%B8%AA%E6%96%87%E4%BB%B6%E5%9C%B0%E5%9D%80.png" alt="20200506155657"></p><h3 id="esp-tools替换blink程序文件为jzwifibin程序文件"><a class="markdownIt-Anchor" href="#esp-tools替换blink程序文件为jzwifibin程序文件"></a> ESP Tools替换blink程序文件为jzwifi.bin程序文件</h3><p>因为是windows环境，接着到乐鑫或者安信可官网下载<a href="https://www.espressif.com/en/support/download/other-tools" target="_blank" rel="noopener">esp_flash_download_tools</a>，选择esp32，DIO模式，40MHz晶振频率，32Mbitflash，选择COM口，然后将esp32置于刷机模式，上传主程序jstwifi.bin文件到flash地址0x10000，上传成功右边终端显示：“is sub and send flash finish&quot;就OK</p><p><img src="/b216a5e8/wifibin.png" alt="20200506170056"></p><p>打开arduino 串口监视器，重启esp32 到正常模式，串口监视器显示如下就大功告成！</p><p><img src="/b216a5e8/wifiOK.png" alt="20200506170301"></p><h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2><h3 id="搜索wifi"><a class="markdownIt-Anchor" href="#搜索wifi"></a> 搜索wifi</h3><p><img src="/b216a5e8/%E6%B5%8B%E8%AF%95OK.jpg" alt></p><h3 id="wifihelper测试"><a class="markdownIt-Anchor" href="#wifihelper测试"></a> wifiHelper测试</h3><p><img src="/b216a5e8/wifiHelper%E6%B5%8B%E8%AF%95.png" alt="20200506172501"></p><h3 id="gcode上传测试"><a class="markdownIt-Anchor" href="#gcode上传测试"></a> gcode上传测试</h3><p>速度一般，还行，很OK</p><p><img src="/b216a5e8/gcode%E4%B8%8A%E4%BC%A0%E6%B5%8B%E8%AF%95.png" alt="20200506210031"></p><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2><p>😂 终于不用每次打印都跑来跑去插拔U盘了，逃）</p>]]></content>
      
      
      <categories>
          
          <category> 硬改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> esp32 </tag>
            
            <tag> 机智屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相位调制</title>
      <link href="/88b2c11b/"/>
      <url>/88b2c11b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前沿切相调光"><a class="markdownIt-Anchor" href="#前沿切相调光"></a> 前沿切相调光</h1><p><img src="/88b2c11b/%E5%89%8D%E6%B2%BF%E5%88%87%E7%9B%B8%E8%B0%83%E5%85%89%E6%B3%A2%E5%BD%A2.JPG" alt></p><p>前沿调光在1，3象限开启可控硅，瞬时电压太高，会导致某些led集成的EMI滤波电路的电感生成尖峰，可能击穿可控硅</p><p>在这种类型的调光器中，实际上会切掉正弦波开始处的部分。这是最广泛使用的调光器类型，因为它非常适合TRIAC。毕竟，三端双向可控硅开关很容易接通，过零时若下拉B极它会自行关闭，因为此时电流会小于最大维持开启电流，有可以栅极关断的（GTO）TRIAC，但价格昂贵</p><a id="more"></a><p><a href="https://www.youtube.com/watch?v=BhQWOv10Oag" target="_blank" rel="noopener">Great Scott!：前沿切相调光</a></p><h1 id="后沿切相调光"><a class="markdownIt-Anchor" href="#后沿切相调光"></a> 后沿切相调光</h1><p><img src="/88b2c11b/%E5%90%8E%E6%B2%BF%E5%88%87%E7%9B%B8%E8%B0%83%E5%85%89.JPG" alt></p><p>实现后沿调光器，开关设备必须使用称为过零检测器的电路在交流波形通过零时导通。在控制设置的预定时间之后，开关设备将关闭，并且波形的其余部分不会被负载使用。后沿调光器通常使用MOSFET，因为它们几乎不需要控制电流，并且坚固可靠。它们也相对便宜，并且在适合于市电运行的额定电压下容易获得。另一种选择是使用IGBT（绝缘栅双极型晶体管），它结合了MOSFET和双极型晶体管的优点，通常比MOSFET更昂贵。同样，该波形是理想的，并且从图9所示的实际波形中可以明显看出，存在明显的偏差-特别是在满功率情况下。这是由于复杂的电子设备需要一定的电压才能工作，因此某些施加的电压将始终丢失。</p><p>大多数后缘调光器与白炽灯一起使用时还有另些有用的功能：</p><ul><li>该电路设计为提供“软启动”，从而相对缓慢地增加灯的电压</li><li>对于白炽灯，几乎消除了“热冲击”，即启动时的短暂时间，该时间消耗的灯电流约为正常工作电流的10倍。热冲击是造成大多数早期灯泡故障的原因-实际上，很少有白炽灯在点亮时发生故障。开关打开时几乎总是故障。通过包含软启动功能，可以延长灯泡的使用寿命。</li></ul><p><a href="https://www.youtube.com/watch?v=BhQWOv10Oag" target="_blank" rel="noopener">GrearScott! ：后沿切相调光</a></p><h1 id="过零检测"><a class="markdownIt-Anchor" href="#过零检测"></a> 过零检测</h1><p><a href="https://sound-au.com/appnotes/an005.htm" target="_blank" rel="noopener">良心科普：几种常见的Zero Crossing Detectors and Comparators</a></p><h3 id="分类"><a class="markdownIt-Anchor" href="#分类"></a> *分类</h3><ul><li>隔离型和非隔离型，隔离行实现方法主要是变压器隔离和光耦隔离</li><li>长脉冲型和短脉冲型，注意，脉冲是否 “短” 或 “长”是相对过零信号输出端是否 “上拉” 或 “下拉” 而言的，<s>你往下看各种过零检测器输出的波形就知道这句话是什么意思，请擦亮眼睛千万别搞混</s></li><li>相位补偿和非相位补偿，听起来很高端，实际就是在火零线之间并联一个150pf-1nf的高压电容将相位前移，c从而解决光耦led需要一定的压降才能开启的过零信号滞后问题</li></ul><h3 id="光耦选型"><a class="markdownIt-Anchor" href="#光耦选型"></a> *光耦选型</h3><p>主要用非线性光耦，分两种：</p><h4 id="双向非线性光耦"><a class="markdownIt-Anchor" href="#双向非线性光耦"></a> 双向非线性光耦</h4><p>四脚：<a href="https://datasheet.lcsc.com/szlcsc/CT-Micro-International-CT354A-V-T1_C191856.pdf" target="_blank" rel="noopener">CT354A</a>，<a href="https://datasheet.lcsc.com/szlcsc/Lite-On-LTV-814_C10790.pdf" target="_blank" rel="noopener">LTV814</a></p><h4 id="单向非线性光耦"><a class="markdownIt-Anchor" href="#单向非线性光耦"></a> 单向非线性光耦</h4><p>四脚：<a href="https://www.farnell.com/datasheets/73758.pdf" target="_blank" rel="noopener">PC817</a>，<a href="https://www.sparkfun.com/datasheets/Components/ps2501.pdf" target="_blank" rel="noopener">NEC2501</a></p><p>六脚：<a href="https://www.vishay.com/docs/83725/4n25.pdf" target="_blank" rel="noopener">4N25</a>，<a href="https://www.vishay.com/docs/83608/h11aa1.pdf" target="_blank" rel="noopener">H11AA1</a></p><h2 id="长脉冲型"><a class="markdownIt-Anchor" href="#长脉冲型"></a> 长脉冲型</h2><h3 id="基于运放的长脉冲过零检测器"><a class="markdownIt-Anchor" href="#基于运放的长脉冲过零检测器"></a> <a href="https://www.elprocus.com/zero-crossing-detector-circuit-and-working/" target="_blank" rel="noopener">基于运放的长脉冲过零检测器</a></h3><p>主要采用741运放，<s>LM741运放我手头没有</s></p><table>    <td width="50%"><img src="/88b2c11b/lm741过零检测电路.JPG"></td>    <td><img src="/88b2c11b/lm741过零检测波形.JPG" < td></td></table><h3 id="基于晶体管的长脉冲过零检测器"><a class="markdownIt-Anchor" href="#基于晶体管的长脉冲过零检测器"></a> 基于晶体管的长脉冲过零检测器</h3><p>注意，晶体管导通时将OUT信号下拉，过零时晶体管不导通，OUT被R3上拉，晶体管90%以上的时间都是导通的</p><p><img src="/88b2c11b/%E9%9D%9E%E9%9A%94%E7%A6%BB%E6%99%B6%E4%BD%93%E7%AE%A1%E8%BF%87%E9%9B%B6%E6%A3%80%E6%B5%8B.png" alt="非隔离晶体管过零检测"></p><h3 id="基于光耦的长脉冲过零检测器"><a class="markdownIt-Anchor" href="#基于光耦的长脉冲过零检测器"></a> 基于光耦的长脉冲过零检测器</h3><h4 id="单向光耦"><a class="markdownIt-Anchor" href="#单向光耦"></a> 单向光耦</h4><p><img src="/88b2c11b/%E9%9A%94%E7%A6%BB%E5%9E%8B%E5%85%89%E8%80%A6%E9%95%BF%E8%84%89%E5%86%B2%E8%BF%87%E9%9B%B6%E6%A3%80%E6%B5%8B.png" alt="20200426135135"></p><p>此类电路简单粗暴，一般都是限流电阻+整流桥+单向光耦，利用光耦led开启时两端的最小压降实现</p><p>缺点是光耦中的LED至少有90％的时间通电。由于LED的使用寿命取决于它必须通过的电流量和总的“开启”时间，因此会缩短LED的使用寿命</p><p>更多缺点请轻戳：<a href="https://www.diangon.com/m419951.html" target="_blank" rel="noopener">传统光耦过零检测电路的缺点</a></p><h4 id="双向光耦"><a class="markdownIt-Anchor" href="#双向光耦"></a> 双向光耦</h4><p><img src="/88b2c11b/H11AA1%E5%8F%8C%E5%90%91%E5%85%89%E8%80%A6%E9%95%BF%E8%84%89%E5%86%B2%E8%BF%87%E9%9B%B6%E6%A3%80%E6%B5%8B.png" alt="How did I break this optocoupler? - Electrical Engineering Stack ..."></p><p>双向光耦省掉了整流桥，要知道，一个1A/1000V的整流桥都两毛一个了，而双向光耦多集成了一个led也就贵几分钱，就可以少用掉一个元件</p><h2 id="短脉冲型"><a class="markdownIt-Anchor" href="#短脉冲型"></a> 短脉冲型</h2><h3 id="基于光耦的短脉冲过零检测器"><a class="markdownIt-Anchor" href="#基于光耦的短脉冲过零检测器"></a> 基于光耦的短脉冲过零检测器</h3><h4 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点：</h4><p>1、微功耗：输出脉冲是窄脉冲，所需能量小，大大延长光耦内的LED使用寿命2、窄脉冲：巧妙地利用微小电流对并联在三极管EC两极的电容充电储能，输出脉冲时又从该电容取电（短时间大电流）。既保证了输出脉冲时对驱动电流的需求，又使得交流输入电流比较小</p><p>下面两个电路原理一样，只不过一个用电阻分压+PNP，一个用稳压二极管+NPN，<s>一个老外的一个国内的</s></p><h4 id="第一种"><a class="markdownIt-Anchor" href="#第一种"></a> 第一种：</h4><p><a href="https://d1.amobbs.com/bbs_upload782111/files_40/ourdev_643643NSY57M.pdf" target="_blank" rel="noopener">DIY - Isolated High Quality Mains Voltage Zero Crossing Detector</a></p><p><img src="/88b2c11b/%E5%85%89%E8%80%A6%E7%9F%AD%E8%84%89%E5%86%B2%E8%BF%87%E9%9B%B6%E6%A3%80%E6%B5%8B%E7%94%B5%E8%B7%AF1.png" alt="光耦短脉冲过零检测电路1"></p><h4 id="第二种"><a class="markdownIt-Anchor" href="#第二种"></a> 第二种：</h4><p><a href="http://www.crystalradio.cn/thread-918182-1-1.html" target="_blank" rel="noopener">矿石收音机论坛原帖</a>：</p><p><img src="/88b2c11b/%E5%B8%A6%E7%9B%B8%E4%BD%8D%E8%A1%A5%E5%81%BF%E7%9A%84%E8%BF%87%E9%9B%B6%E6%A3%80%E6%B5%8B%E7%94%B5%E8%B7%AF.png" alt="带相位补偿的过零检测电路"></p><p>和前几种电路对比如下（默认光耦三极管的C极上拉VCC，过零信号接光耦三极管的E极，即无过零信号时下拉到GND）<img src="/88b2c11b/%E5%87%A0%E7%A7%8D%E8%BF%87%E9%9B%B6%E7%94%B5%E8%B7%AF%E7%9A%84%E6%B3%A2%E5%BD%A2.png" alt="IMG_7533"></p><p>对此电路稍加修改，提高安全系数，手头没有12V齐纳二极管，用三个5.1V的代替</p><p><img src="/88b2c11b/%E5%B8%A6%E7%9B%B8%E4%BD%8D%E8%A1%A5%E5%81%BF%E7%9A%84%E8%BF%87%E9%9B%B6%E6%A3%80%E6%B5%8B%E7%94%B5%E8%B7%AF2.png" alt="带相位补偿的过零检测电路2"></p><p>焊接实物：</p><p><img src="/88b2c11b/ZDCV01.JPG" alt="IMG_7423"></p><p>用arduino oscilloscope示波器测试OK</p><p><img src="/88b2c11b/ZDCV01-Uno%E7%A4%BA%E6%B3%A2%E5%99%A8.JPG" alt="20200424093310"></p><h1 id="输出功率线性化"><a class="markdownIt-Anchor" href="#输出功率线性化"></a> 输出功率线性化</h1><h2 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h2><h3 id="正弦函数"><a class="markdownIt-Anchor" href="#正弦函数"></a> 正弦函数</h3><p>形如</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi>A</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>ω</mi><mi>x</mi><mo>+</mo><mi>φ</mi><mo stretchy="false">)</mo><mo>+</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">y=Asin(ωx+φ)+k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></span></p><p>其中A，ω，φ，k是常数，且ω≠0</p><ul><li>A表示振幅</li><li>周期：往复振动一次所需要的时间，T=2π/ω</li><li>频率：单位时间内往复振动的次数，f=1/T=ω/2π</li><li>相位：ωx+φ</li><li>初相：φ (当x=0时的相位 )</li></ul><h3 id="弧度"><a class="markdownIt-Anchor" href="#弧度"></a> 弧度</h3><p>一个完整的圆的弧度是2π，即2π= 360°，<span style="color:Blue;">弧度与角度的区别仅仅是描述一圈的两种量度</span></p><h3 id="角频率"><a class="markdownIt-Anchor" href="#角频率"></a> 角频率</h3><p><strong>角频率</strong>ω有时也叫做<strong>角速率</strong>、<strong>角速度标量</strong>，是对旋转快慢的度量，它是<a href="https://zh.wikipedia.org/wiki/%E8%A7%92%E9%80%9F%E5%BA%A6" target="_blank" rel="noopener">角速度</a>的绝对值</p><p>角频率的<a href="https://zh.wikipedia.org/wiki/%E5%9B%BD%E9%99%85%E5%8D%95%E4%BD%8D%E5%88%B6" target="_blank" rel="noopener">国际单位</a>是<a href="https://zh.wikipedia.org/wiki/%E5%BC%A7%E5%BA%A6%E6%AF%8F%E7%A7%92" target="_blank" rel="noopener">弧度每秒</a></p><p>弧度是无量纲的，角频率的<a href="https://zh.wikipedia.org/wiki/%E9%87%8F%E7%BA%B2" target="_blank" rel="noopener">量纲</a>为T<sup>-1</sup></p><p>因为旋转360°的弧度是2π，所以</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ω</mi><mo>=</mo><mfrac><mrow><mn>2</mn><mi>π</mi></mrow><mi>T</mi></mfrac><mo>=</mo><mn>2</mn><mi>π</mi><mi>f</mi><mo>=</mo><mfrac><mi>v</mi><mi>r</mi></mfrac><mo>=</mo><mfrac><mrow><mi>d</mi><mi>s</mi></mrow><mrow><mi>d</mi><mi>t</mi></mrow></mfrac><mo>⋅</mo><mfrac><mn>1</mn><mi>r</mi></mfrac><mo>=</mo><mfrac><mrow><mi>d</mi><mi>θ</mi></mrow><mrow><mi>d</mi><mi>t</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">ω=\frac{2π}{T}=2π f=\frac{v}{r}=\frac{ds}{dt}\cdot\frac{1}{r}=\frac{dθ}{dt}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中</p><p>ω是角频率（单位为弧度每秒）</p><p>T是<a href="https://zh.wikipedia.org/wiki/%E5%91%A8%E6%9C%9F" target="_blank" rel="noopener">周期</a>（单位为秒）</p><p>f是<a href="https://zh.wikipedia.org/wiki/%E9%A2%91%E7%8E%87" target="_blank" rel="noopener">频率</a>（单位为<a href="https://zh.wikipedia.org/wiki/%E8%B5%AB%E5%85%B9" target="_blank" rel="noopener">赫兹</a>）</p><p>v是线速度（单位为米每秒）</p><p>r是旋转的<a href="https://zh.wikipedia.org/wiki/%E5%8D%8A%E5%BE%84" target="_blank" rel="noopener">半径</a>（单位为<a href="https://zh.wikipedia.org/wiki/%E7%B1%B3" target="_blank" rel="noopener">米</a>）</p><h3 id="电角度"><a class="markdownIt-Anchor" href="#电角度"></a> 电角度</h3><p>正弦交流电的电流或电压的大小和方向随时间按正弦函数变化，分别表示为</p><p>i=I<sub>m</sub>sin(ωt+α)或u= U<sub>m</sub>sin(ωt+φ)</p><p>其中：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>i</mi><mo>=</mo><msub><mi>I</mi><mi>m</mi></msub><mo>⋅</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>ω</mi><mi>t</mi><mo>+</mo><mi>φ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i=I_m\cdot sin(ωt+φ)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mclose">)</span></span></span></span></span></p><p>i：交流电电流的瞬时值，</p><p>I<sub>m</sub>：交流电电流的峰值，</p><p>ω：交流电的角频率</p><p>φ：交流电的初相位</p><p>ωt+φ：i 对应的<span style="color:Blueviolet;"><strong>电角度</strong></span><span style="color:Blue;">（电角度是一个随时间t变化的表达式）</span></p><h3 id="正弦函数的积分"><a class="markdownIt-Anchor" href="#正弦函数的积分"></a> 正弦函数的积分</h3><h4 id="sinx"><a class="markdownIt-Anchor" href="#sinx"></a> sin(x)</h4><p>示例，求该函数在[0, π]的定积分：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mo>∫</mo><mn>0</mn><mi>π</mi></msubsup><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mi>d</mi><mi>x</mi><mo>=</mo><mo>−</mo><msubsup><mo>∫</mo><mn>0</mn><mi>π</mi></msubsup><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mi>d</mi><mi>x</mi><mo>=</mo><msubsup><mrow><mo fence="true">∣</mo><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo fence="true">∣</mo></mrow><mn>0</mn><mi>π</mi></msubsup><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>π</mi><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">∫^π_0sinxdx=-∫^π_0cosxdx=\left|-cosx\right|^π_0=-(cosπ-cos0)=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.326242em;vertical-align:-0.9119499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">x</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.326242em;vertical-align:-0.9119499999999999em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">x</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1039919999999999em;vertical-align:-0.29969999999999997em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord">−</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></span></p><h4 id="sinsup2supx"><a class="markdownIt-Anchor" href="#sinsup2supx"></a> sin<sup>2</sup>(x)</h4><p>图像：</p><p><img src="/88b2c11b/sin%5E2x.png" alt="20200425203832"></p><p><a href="%5Bhttps://baike.baidu.com/item/%E7%A7%AF%E5%88%86%E5%85%AC%E5%BC%8F%5D(https://baike.baidu.com/item/%E7%A7%AF%E5%88%86%E5%85%AC%E5%BC%8F)">积分公式</a>推导（定积分可不加常数C）:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>∫</mo><mi>s</mi><mi>i</mi><msup><mi>n</mi><mn>2</mn></msup><mi>x</mi><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mn>2</mn><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>∫</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mn>2</mn><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mi>x</mi><mn>2</mn></mfrac><mo>−</mo><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mi>x</mi></mrow><mn>4</mn></mfrac><mo>+</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">∫ sin^2xdx=∫ \frac{1}{2}(1-cos2x)dx=\frac{1}{2}∫(1-cos2x)dx=\frac{1}{2}(x-\frac{1}{2}sin2x)=\frac{x}{2}-\frac{sin2x}{4}+C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.22225em;vertical-align:-0.86225em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.22225em;vertical-align:-0.86225em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.22225em;vertical-align:-0.86225em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.02252em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3365200000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord">2</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></span></p><p>sin<sup>2</sup>(x)积分x/2-sin2x/4的图像：</p><p><img src="/88b2c11b/y=x%E9%99%A4%E4%BB%A52-sin2x%E9%99%A4%E4%BB%A54.png" alt="312BA14B1A4AB4E7B149616E7AF0CE88"></p><h2 id="由线性化的输出功率求电角度的数据"><a class="markdownIt-Anchor" href="#由线性化的输出功率求电角度的数据"></a> 由线性化的输出功率求电角度的数据</h2><h3 id="牛顿-莱布尼兹公式求解"><a class="markdownIt-Anchor" href="#牛顿-莱布尼兹公式求解"></a> 牛顿-莱布尼兹公式求解</h3><p>只须要按照上面的x/2-sin2x/4函数在[0, π]区间上的图像开启可控硅即可使输出功率线性化：</p><p><img src="/88b2c11b/y=x%E9%99%A4%E4%BB%A52-sin2x%E9%99%A4%E4%BB%A54%E5%9C%A80%E5%88%B0pi.png" alt="20200425212031"></p><p>因为交流电压是正弦波，所以输出功率与交流电压的平方成正比，即需要求正弦平方的积分：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>=</mo><mfrac><msup><mi>U</mi><mn>2</mn></msup><mi>R</mi></mfrac><mo>=</mo><mfrac><mrow><mo stretchy="false">[</mo><msub><mi>U</mi><mi>m</mi></msub><mo>⋅</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mn>0</mn></msub><msub><mi>t</mi><mn>1</mn></msub></msubsup><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>ω</mi><mi>t</mi><mo>+</mo><mi>φ</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow><mi>R</mi></mfrac><mo>∝</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mn>0</mn></msub><msub><mi>t</mi><mn>1</mn></msub></msubsup><mi>s</mi><mi>i</mi><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>ω</mi><mi>t</mi><mo>+</mo><mi>φ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mrow><mo fence="true">∣</mo><mfrac><mrow><mi>ω</mi><mi>t</mi><mo>+</mo><mi>φ</mi></mrow><mn>2</mn></mfrac><mo>−</mo><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mo stretchy="false">(</mo><mi>ω</mi><mi>t</mi><mo>+</mo><mi>φ</mi><mo stretchy="false">)</mo></mrow><mn>4</mn></mfrac><mo fence="true">∣</mo></mrow><msub><mi>t</mi><mn>0</mn></msub><msub><mi>t</mi><mn>1</mn></msub></msubsup></mrow><annotation encoding="application/x-tex">P=\frac{U^2}{R}=\frac{[U_m\cdot∫^{t_1}_{t_0}sin(ωt+φ)]^2}{R}∝∫^{t_1}_{t_0}sin^2(ωt+φ)=\left|\frac{ωt+φ}{2}-\frac{sin2(ωt+φ)}{4} \right|^{t_1}_{t_0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5203759999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8343759999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.84592em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9884559999999999em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2579em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.45592em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">φ</span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∝</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5555060000000003em;vertical-align:-1.01205em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5434560000000004em;"><span style="top:-1.7880500000000004em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.01205em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.7632460000000005em;vertical-align:-1.0998199999999998em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.29208em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">φ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6634260000000007em;"><span style="top:-1.7002800000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.9328700000000008em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0998199999999998em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>初相位过零触发点，即φ=0°：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>∝</mo><mo>=</mo><msubsup><mrow><mo fence="true">∣</mo><mfrac><mrow><mi>ω</mi><mi>t</mi></mrow><mn>2</mn></mfrac><mo>−</mo><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mi>ω</mi><mi>t</mi></mrow><mn>4</mn></mfrac><mo fence="true">∣</mo></mrow><msub><mi>t</mi><mn>0</mn></msub><msub><mi>t</mi><mn>1</mn></msub></msubsup></mrow><annotation encoding="application/x-tex">P∝ =\left|\frac{ωt}{2}-\frac{sin2ωt}{4}\right|^{t_1}_{t_0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∝</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.7632460000000005em;vertical-align:-1.0998199999999998em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.29208em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord mathnormal">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3365200000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord mathnormal">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6634260000000007em;"><span style="top:-1.7002800000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.9328700000000008em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0998199999999998em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>角频率ω是一个常量（是频率的 2π 倍）</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ω</mi><mo>=</mo><mfrac><mrow><mn>2</mn><mi>π</mi></mrow><mi>T</mi></mfrac><mo>=</mo><mfrac><mrow><mn>2</mn><mi>π</mi></mrow><mfrac><mrow><mn>1</mn><mi>s</mi></mrow><mrow><mn>50</mn><mi>H</mi><mi>z</mi></mrow></mfrac></mfrac><mo>=</mo><mfrac><mrow><mn>2</mn><mi>π</mi></mrow><mrow><mn>0.02</mn><mi>s</mi></mrow></mfrac><mo>=</mo><mn>100</mn><mi>r</mi><mi>a</mi><mi>d</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ω=\frac{2π}{T}=\frac{2π}{\frac{1s}{50Hz}}=\frac{2π}{0.02s}=100rad/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.401548em;vertical-align:-1.080108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2648919999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.080108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">2</span><span class="mord mathnormal">s</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mord">/</span><span class="mord mathnormal">s</span></span></span></span></span></p><p>由电角度ωt+φ可计算出某一P功率下晶闸管需要开启的时间t</p><p>那么前一张图像可看作输出功率随电角度的关系（正半周负半周都一样）：</p><p><img src="/88b2c11b/%E8%BE%93%E5%87%BA%E5%8A%9F%E7%8E%87%E9%9A%8F%E7%94%B5%E8%A7%92%E5%BA%A6%E5%8F%98%E5%8C%96%E7%9A%84%E5%85%B3%E7%B3%BB.png" alt></p><p>（此法求解此方程太费时，不推荐）</p><h3 id="牛顿迭代法求解"><a class="markdownIt-Anchor" href="#牛顿迭代法求解"></a> 牛顿迭代法求解</h3><p><a href="https://github.com/Miceuz/triac-bloc" target="_blank" rel="noopener">来自：老毛子的Attiny Triac工程</a></p><p><a href="http://xn--Pythonx-sinx-w76sa1288bwpn6o1aqeit2rdtemu0bijuna65wm0k8m2dw3yfgf5b.py" target="_blank" rel="noopener">老毛子的Python牛顿迭代法代码是根目录的x-sinx.py</a></p><p>然后，老毛子根目录的firmware文件夹，也就是放Attiny的arduino代码的文件夹，有一个conductionAngles.c文件，就是上面python代码计算的结果预览如下：</p><table>    <td width="50%"><img src="/88b2c11b/毛子py的c.png"></td>    <td><img src="/88b2c11b/毛子py的excel.png"></td></table><p><code>conductionAngles</code>数组用<code>PROGMEM</code>宏储存在ATTiny控制器的EEPROM里，可以减少占用的动态内存</p><p>毛子的导通时间取值范围是[0, 10000]，即把交流的正/负半周时间10ms改用ns计时，然后，这个<code>conductionAngles</code>数组有256个元素，相当于把1-100%的线性功率分成256份：</p><p><img src="/88b2c11b/%E6%AF%9B%E5%AD%90%E7%9A%84conductionAngles%E6%95%B0%E7%BB%84.png" alt="20200425223201"></p><p>（可以理解成移向调制某一个灯泡，亮度从0到100，均匀分成了256阶灰度）</p><p>Excel显示的图像就是把上面的输出功率随电角度的图像的xy对调，再将横轴单位换成了ns（你可以由电角度算得ns，毕竟ω是一个常量），纵轴换成了1-256阶（对应0·100%功率）</p><p><a href="http://aicdg.com/oldblog/math/2017/03/13/carmark-qsqrt.html" target="_blank" rel="noopener">*卡马克快速平方根：0x5f3759df</a></p><h2 id="晶振调谐"><a class="markdownIt-Anchor" href="#晶振调谐"></a> 晶振调谐</h2><p>毛子的高阶玩法，esp8266的SDK貌似没有类似的功能。。。</p><p><img src="/88b2c11b/Attiny%E6%99%B6%E6%8C%AF%E8%B0%83%E8%B0%90.png" alt="20200425230351"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 半导体元件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OptoTriac V2.0 固态继电器电路设计</title>
      <link href="/65fdcd15/"/>
      <url>/65fdcd15/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Opto是光电子的意思，Triac就是三端双向可控硅，也叫双向晶闸管</p><p>设计这个固态继电器是为了我的烤箱Pid控制做准备</p><p><span style="color:Red;">使用带过零触发功能的光耦，为纯电阻电路设计，请勿将其用于大功率感性负载</span></p><table>    <tr>        <td><img src="/65fdcd15/FAN-45.JPG"></td>        <td><img src="/65fdcd15/FAN-Side.JPG"></td>        <td><img src="/65fdcd15/FAN-Bottom.JPG"></td>    </tr></table><span style="color:Red;">警告</span><p>让我在这里添加一个更强烈的警告：如果你很清除自己在做什么而制作并测试此电路，则该电路是安全的。如果你一无所知，或者对自己的判断感到怀疑，那么你很可能因此丧命！请务必在有漏电保护器的电网下测试，将其连接到电网时请勿触摸！！！</p><a id="more"></a>#  Σ(っ °Д °;)っ<h1 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h1><h2 id="光耦控制可控硅的基本电路最低标准"><a class="markdownIt-Anchor" href="#光耦控制可控硅的基本电路最低标准"></a> 光耦控制可控硅的基本电路(最低标准)</h2><p>MOC3063(带过零触发)光耦的datasheet上的基本应用电路如下：</p><p><img src="/65fdcd15/MOC3063-datasheet%E5%9F%BA%E6%9C%AC%E5%BA%94%E7%94%A8%E7%94%B5%E8%B7%AF.jpg" alt></p><ul><li><p>Rin：的目的是使I<sub>in</sub>在光耦的额定触发电流IFT(光耦led触发电流)(对于MOC3061M为15mA，对于MOC3062M为10mA，对于MOC3063M为5mA) 和LED极限电流60mA之间</p></li><li><p>R3和C1串联的支路：并联在晶闸管两端是为了防止瞬时脉冲高压击穿晶闸管，选用参数取决于所使用的三端双向可控硅和负载</p></li><li><p>R1：限制光耦内部可控硅最大浪涌电流 ，取市电的峰值310V加上10%的电网波动影响，即340V/R1要小于1A</p></li><li><p>R2：下拉可控硅G端防止意外导通</p></li></ul><h2 id="老毛子的电路"><a class="markdownIt-Anchor" href="#老毛子的电路"></a> 老毛子的电路</h2><p>对比一下老毛子工程师的设计：</p><p><img src="/65fdcd15/%E6%AF%9B%E5%AD%90%E4%BF%9D%E9%99%A9.jpg" alt></p><p>MOC3052不带内部过零检测触发电路，所以添加了U3(LTV-814晶体管输出光耦)进行过零检测+ATTINY44移相触发，估计程序里有最小维持控制值所以省略了下拉电阻，又添加了R6，C2组成<a href="https://zh.wikipedia.org/wiki/%E4%BD%8E%E9%80%9A%E6%BB%A4%E6%B3%A2%E5%99%A8" target="_blank" rel="noopener">低通滤波器</a>，还有扼流圈L1和C3使移相电压的波纹变平滑，从而可以较好地控制控灯泡亮度</p><p>值得注意的是，交流火线端串联了陶瓷保险丝，火线零线之间跨接压敏电阻(钳制)，前者进行过电流保护 (OCP：Over Current Protection)，后者进行过电压保护 (OVP：Over Voltage Protection)</p><p><a href="https://github.com/Miceuz/triac-bloc" target="_blank" rel="noopener">项目地址</a></p><h2 id="optotriacv20使用的电路"><a class="markdownIt-Anchor" href="#optotriacv20使用的电路"></a> OptoTriacV2.0使用的电路：</h2><p>毛子并没有给出保险丝和压敏如何选型，我使用BTA16，不做调光控制省略了R6，C2，L1和C3，使用MOC3063自带的过零触发，晶闸管G极需要下拉电阻，添加保险丝和压敏，三极管SS8050可换为N-mos，电路如下：</p><p><img src="/65fdcd15/OptoTriacV2-CCC-sch.png" alt="OptoTriacV2-CCC-sch"></p><p><a href="httpswww.store-ino.comproducttheremino-optotriac-v1">在OptoTriacV1的电路基础之上进行修改</a></p><h3 id="如何选保险丝"><a class="markdownIt-Anchor" href="#如何选保险丝"></a> 如何选保险丝？</h3><p>首先，保险丝分两大类：</p><ol><li>快熔保险丝：常用在<strong>电阻性负载电路</strong>中，保护一些对电流变动特别敏感的元器件；</li><li>慢熔保险丝：常用在电路状态变化时有<strong>较大的浪涌电流</strong>的故障时仍能较快地断开电路</li></ol><p>为了及时保护晶闸管，选用陶瓷保险丝</p><p>我电烤箱的单根加热管规格是220V/400W，两根串联接市800W负载一路，有上温管和下温管两路，共四根热管1600W，两个BTA16控制上温和下温管，每个负载800W，一路额定电流为800W/220V = 3.636A</p><p>在烤箱工作时会将SSR电路进行散热，取工业级最高温度80℃</p><p><img src="/65fdcd15/%E4%BF%9D%E9%99%A9%E4%B8%9D%E6%8A%98%E5%87%8F%E7%8E%87%E8%A1%A8.jpg" alt></p><p>根据保险丝折减率表的B曲线(对应陶瓷保险丝)，80℃下的折减率约为96%</p><p>于是计算得：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>I</mi><mi>f</mi></msub><mtext>保险丝选型电流</mtext><mo>=</mo><mfrac><mtext>额定负载电流</mtext><mrow><mtext>温度折减率</mtext><mo>⋅</mo><mn>0.75</mn></mrow></mfrac><mo>=</mo><mfrac><msub><mi>I</mi><mi>n</mi></msub><mrow><msub><mi>F</mi><mi>o</mi></msub><mo>⋅</mo><mn>0.75</mn></mrow></mfrac><mo>=</mo><mfrac><mrow><mn>3.636</mn><mi>A</mi></mrow><mrow><mn>0.96</mn><mo>⋅</mo><mn>0.75</mn></mrow></mfrac><mo>=</mo><mn>5.05</mn><mi>A</mi></mrow><annotation encoding="application/x-tex">I_f保险丝选型电流=\frac{额定负载电流}{温度折减率\cdot0.75}=\frac{I_n}{F_o\cdot0.75} = \frac{3.636A}{0.96\cdot0.75}=5.05A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">保</span><span class="mord cjk_fallback">险</span><span class="mord cjk_fallback">丝</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">型</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">流</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">温</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">折</span><span class="mord cjk_fallback">减</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">额</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">负</span><span class="mord cjk_fallback">载</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">流</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord">.</span><span class="mord">6</span><span class="mord">3</span><span class="mord">6</span><span class="mord mathnormal">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">.</span><span class="mord">0</span><span class="mord">5</span><span class="mord mathnormal">A</span></span></span></span></span></p><p>所以选用5A保险丝很合适</p><h3 id="如何选压敏电阻"><a class="markdownIt-Anchor" href="#如何选压敏电阻"></a> 如何选压敏电阻？</h3><p>压敏限幅值的选择是在市电的峰值310V的基础上加上20%的电网波动影响、10%的元件电压误差，15%的因长期工作造成发热、受潮、元件老化等因素，一般取值为470V～510V。各种尖峰电压都被钳制在470V。对于470V以下的电压，压敏器件呈高阻态，因此常用压敏电压有471K，561K等，片径从04D到30D不等，因为用的BTA16是600B规格，即断态重复峰值电压VDRM（Peak Repetitive  Off-State Voltage）为600V，建议用471，如果你买得到700B，800B规格，则可用561，片径保险起见至少10D</p><h1 id="pcb仿真效果"><a class="markdownIt-Anchor" href="#pcb仿真效果"></a> PCB仿真效果</h1><p>截的JLC小助手的图，修改了可控硅焊盘的pin2：</p><p>PCB背面交流主干线路宽保险丝和压敏附近宽120mil，之后宽88mil，裸露处理，方便加锡提高载流，实际上不加焊锡88mil 1oz厚已经可以载流4A以上</p><table>    <tr>        <td><img src="/65fdcd15/OptoV2-1.jpg"></td>        <td><img src="/65fdcd15/OptoV2-2.jpg"></td>    </tr></table><h1 id="pcb设计要点"><a class="markdownIt-Anchor" href="#pcb设计要点"></a> PCB设计要点</h1><p>PCB4月5号更新（要点内的其他PCB图片可能是３号的）</p><p><img src="/65fdcd15/OptoV2-eagle1.1.jpg" alt></p><h2 id="线距"><a class="markdownIt-Anchor" href="#线距"></a> 线距</h2><h3 id="强电与强电之间线距"><a class="markdownIt-Anchor" href="#强电与强电之间线距"></a> 强电与强电之间线距</h3><p>按照安规标准的线距布线，保险丝前火零间距大于4mm，保险后大于2 5mm，不足2.5mm开槽绝缘</p><p>保险前线距大于5mm，保险后线距至少2.5mm，小于2.5的地方开槽以空气绝缘</p><p>因为散热片是金属，散热片本身，散热片的焊盘与强电之间，BTA16正面焊盘与散热片之间最好间隔2.5mm以上</p><h3 id="弱电与强电之间线距"><a class="markdownIt-Anchor" href="#弱电与强电之间线距"></a> 弱电与强电之间线距</h3><p>强弱电之间 &gt;= 6mm因为光耦一头220VAC，一头弱电DC，两脚间距&lt;7.6mm，最好在交流光耦下方开2mm左右的槽，槽宽应出DIP封装的边界3~5mm:</p><h2 id="丝印警示"><a class="markdownIt-Anchor" href="#丝印警示"></a> 丝印警示</h2><p>另外，要在正反丝印层用宽度20mil以上的虚线画出弱电区和强电区域之间的分界线，强电区要有警示标识</p><p>PCB局部如下：</p><table>    <tr>        <td width="71.5%"><img src="/65fdcd15/OptoV2-eagle2.jpg"></td>       <td><img src="/65fdcd15/OptoV2-eagle3.jpg"></td>    </tr></table><h2 id="预留4cm8cm散热风扇孔位"><a class="markdownIt-Anchor" href="#预留4cm8cm散热风扇孔位"></a> 预留4cm，8cm散热风扇孔位</h2><p><img src="/65fdcd15/OptoV2-Fan.jpg" alt></p><h2 id="支持bta16bta41反装加强散热"><a class="markdownIt-Anchor" href="#支持bta16bta41反装加强散热"></a> 支持BTA16，BTA41反装加强散热</h2><p>PCB正面的异形焊盘是为此留的，安装效果如最右边:</p><table>    <tr>        <td width="20%"><img src="/65fdcd15/toppad.jpg"></td>        <td><img src="/65fdcd15/OptoV2-BTA41倒装2.jpg"></td>    </tr></table><p>反装的话，散热片就在背面与可控硅铜底直触，至于散热片固定，我已经给了这摩多孔了应该很好固定。。。</p><p>反装的话BTA41的封装有一部分会挨到光耦DIP-6的焊盘，其实只要没有挡住孔就没事，实在不行就换SMD-6封装</p><p>宁外细心一点你就会发现，PCB的可控硅焊盘是用TO-247的焊盘魔改的，pin1和pin3开成了槽孔就是为了可以装魔改后的BTA16设计的，如下图中间，逃)</p><p><img src="/65fdcd15/BTA16-change-pin-distance.png" alt></p><p><a href="https://www.electronics-lab.com/project/dc-output-solid-state-relay/" target="_blank" rel="noopener">灵感来自DC OUTPUT SOLID STATE RELAY</a></p><p><a href="https://zhidao.baidu.com/question/559804627639077164.html" target="_blank" rel="noopener">为什么PCB的槽长一定要大于槽宽1.5~2倍</a></p><h1 id="焊接"><a class="markdownIt-Anchor" href="#焊接"></a> 焊接</h1><table>    <tr>        <td><img src="/65fdcd15/OptoV1实物(1).jpg"></td>        <td><img src="/65fdcd15/OptoV1实物(2).jpg"></td>    </tr></table><table>    <tr>        <td><img src="/65fdcd15/OptoV1实物(3).jpg"></td>        <td><img src="/65fdcd15/OptoV1实物(4).jpg"></td>    </tr></table><h2 id="一些小问题"><a class="markdownIt-Anchor" href="#一些小问题"></a> 一些小问题</h2><p>走错了一根线，铜皮离散热片太近，先简单粗暴地处理一下。。。</p><table>    <tr>        <td><img src="/65fdcd15/OptoV1实物(5).jpg"></td>        <td><img src="/65fdcd15/OptoV1实物(6).jpg"></td>    </tr></table><h1 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h1><p>PID控制烤箱上温管80℃半小时，3.63A负载测试通过</p><p><img src="/65fdcd15/OptoV1%E6%B5%8B%E8%AF%95.jpg" alt="OptoV1实物(5)"></p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>初版测试OK，等我画下一版👊</p><p>修改小问题之后的Eagle PCB工程文件及Gerber文件：</p><p>链接：<a href="https://pan.baidu.com/s/1BnVavEUuLoqm2YFMkJdoXw" target="_blank" rel="noopener">https://pan.baidu.com/s/1BnVavEUuLoqm2YFMkJdoXw</a>提取码：yss8</p><h1 id="附如何计算散热"><a class="markdownIt-Anchor" href="#附如何计算散热"></a> 附：如何计算散热？</h1><p><a href="http://www.bornsun.com/post/show/1" target="_blank" rel="noopener">导热系数、热阻、热阻抗及导热系数</a></p><p>bta系可控硅的散热非常关键，如果工作时环境温度高于70度没有效散热，故障因素会增多，需要添加常见的To-3p散热片</p><h2 id="基本参数及公式"><a class="markdownIt-Anchor" href="#基本参数及公式"></a> 基本参数及公式</h2><h3 id="环境温度"><a class="markdownIt-Anchor" href="#环境温度"></a> 环境温度</h3><p>因为在200多度的烤箱内部工作，<span style="color:Red;">取最差的环境温度，<strong>70℃</strong>，以下所有计算的<strong>结温</strong>都是加了70度的 !</span></p><h3 id="bta41结温极限范围"><a class="markdownIt-Anchor" href="#bta41结温极限范围"></a> BTA41结温极限范围</h3><p>T<sub>j</sub> 取-40 + 125℃</p><p><img src="/65fdcd15/BTA41%E7%BB%93%E6%B8%A9%E6%9E%81%E9%99%90%E8%8C%83%E5%9B%B4.jpg" alt></p><h2 id="结温计算公式"><a class="markdownIt-Anchor" href="#结温计算公式"></a> 结温计算公式</h2><p>技巧：从BTA芯片内部开始算起，任何两种介质的温差，都等于发热功率乘以这两点之间的热阻，因此，要将很多个热阻求和：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>结温</mtext><mo>=</mo><mtext>环境温度</mtext><mo>+</mo><mtext>发热功耗</mtext><mo>⋅</mo><mtext>总热阻</mtext></mrow><annotation encoding="application/x-tex">结温=环境温度+发热功耗\cdot总热阻</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">结</span><span class="mord cjk_fallback">温</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">环</span><span class="mord cjk_fallback">境</span><span class="mord cjk_fallback">温</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">热</span><span class="mord cjk_fallback">功</span><span class="mord cjk_fallback">耗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">热</span><span class="mord cjk_fallback">阻</span></span></span></span></span></p><p>即：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>结温</mtext><mo>=</mo><mtext>环境温度</mtext><mo>+</mo><mtext>发热功耗</mtext><mo>⋅</mo><mo stretchy="false">(</mo><mtext>结到外壳的热阻</mtext><mo>+</mo><mtext>导热片的热阻</mtext><mo>+</mo><mo>+</mo><mtext>散热器与空气的热阻</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">结温=环境温度+发热功耗\cdot(结到外壳的热阻+导热片的热阻++散热器与空气的热阻)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">结</span><span class="mord cjk_fallback">温</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">环</span><span class="mord cjk_fallback">境</span><span class="mord cjk_fallback">温</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">热</span><span class="mord cjk_fallback">功</span><span class="mord cjk_fallback">耗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord cjk_fallback">结</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">外</span><span class="mord cjk_fallback">壳</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">热</span><span class="mord cjk_fallback">阻</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">导</span><span class="mord cjk_fallback">热</span><span class="mord cjk_fallback">片</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">热</span><span class="mord cjk_fallback">阻</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">+</span><span class="mord cjk_fallback">散</span><span class="mord cjk_fallback">热</span><span class="mord cjk_fallback">器</span><span class="mord cjk_fallback">与</span><span class="mord cjk_fallback">空</span><span class="mord cjk_fallback">气</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">热</span><span class="mord cjk_fallback">阻</span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub><mo>=</mo><msub><mi>T</mi><mi>a</mi></msub><mo>+</mo><mi>P</mi><mo>⋅</mo><mo stretchy="false">(</mo><msub><mi>R</mi><mrow><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><mi>j</mi><mo>−</mo><mi>c</mi><mo stretchy="false">)</mo></mrow></msub><mo>+</mo><msub><mi>R</mi><mrow><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msub><mo>+</mo><msub><mi>R</mi><mrow><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><mi>h</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_j= T_a+P\cdot(R_{th(j-c)} +R_{th(t)}+ R_{th(h-a)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">c</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">a</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h2 id="热阻计算公式"><a class="markdownIt-Anchor" href="#热阻计算公式"></a> 热阻计算公式</h2><p>热阻指的是当有热量在物体上传输时，在物体两端温度差与热源的功率之间的比值。单位为开尔文每瓦特（K/W）或摄氏度每瓦特（℃/W）</p><h3 id="通过两端温差计算"><a class="markdownIt-Anchor" href="#通过两端温差计算"></a> 通过两端温差计算</h3><p>当热量在某种介质的内部传输时，介质两端温度差与热源的功率之间的比值为该混合介质的<span style="color:BlueViolet;"><strong>热阻</strong></span>：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mrow><mi>t</mi><mi>h</mi></mrow></msub><mo>=</mo><mfrac><mrow><msub><mi>T</mi><mn>2</mn></msub><mo>−</mo><msub><mi>T</mi><mn>1</mn></msub></mrow><mi>P</mi></mfrac></mrow><annotation encoding="application/x-tex">R_{th}=\frac{T_2-T_1}{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>实际上计算结温不会这么计算，因为我们要用公式求出结温，再说你无法测量到结温，除非把封装锯开再贴一个温度传感器在硅片表面，那下面的就不用看了。。。</p><p>所以需要用下面的两种方法计算结温</p><h3 id="通过导热系数计算"><a class="markdownIt-Anchor" href="#通过导热系数计算"></a> 通过导热系数计算</h3><p>当热量在物体内部以热传导的方式传递，遇到的阻力为<span style="color:BlueViolet;"><strong>导热热阻</strong></span>：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mi>θ</mi></msub><mtext>＝</mtext><mfrac><mi>L</mi><mrow><mi>λ</mi><mo>⋅</mo><mi>S</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">R_{θ}＝\frac{L}{λ\cdot S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">＝</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>λ：导热系数 （单位为 瓦·米<sup>-1</sup>开尔文<sup>-1</sup>，即（W/(K·m)））</li><li>L：材料厚度或长度,（延着热通量方向，单位m）</li><li>S：传热截面积（垂直热通量方向，单位m<sup>2</sup>）</li><li>R<sub>θ</sub>为材料（沿着热通量方向）的绝对热阻（K/W），也可以写成R<sub>th</sub></li></ul><p>热阻物体对热流传导的阻碍能力，导热材料的热阻越大，则其对热传导的阻碍能力越强</p><p>热阻与传导路径长度成正比，与通过的截面积成反比，与材料的导热系数成反比</p><h3 id="通过对流换热系数计算"><a class="markdownIt-Anchor" href="#通过对流换热系数计算"></a> 通过对流换热系数计算</h3><p>在<a href="https://baike.baidu.com/item/%E5%AF%B9%E6%B5%81%E6%8D%A2%E7%83%AD" target="_blank" rel="noopener">对流换热</a>过程中，固体壁面与流体之间的热阻称为<span style="color:BlueViolet;"><strong>对流换热热阻</strong></span>：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mrow><mi>t</mi><mi>h</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>S</mi><mi>h</mi></msub><mo>⋅</mo><msub><mi>h</mi><mi>a</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">R_{th}=\frac{1}{S_h\cdot h_{a}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1574400000000002em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li><p>S<sub>h</sub>: 换热面积，单位m<sup>2</sup></p></li><li><p>h<sub>a</sub>: 空气对流换热系数，单位iW/(m<sup>2</sup>·K)</p><p>静止空气一般为6W/(m<sup>2</sup>·K)，自然对流下，在5-25W/(m<sup>2</sup>·K)，强制对流下，在20-300W/(m<sup>2</sup>·K)</p></li></ul><h2 id="依次计算各个介质之间的热阻"><a class="markdownIt-Anchor" href="#依次计算各个介质之间的热阻"></a> 依次计算各个介质之间的热阻:</h2><h3 id="bta41结与封装的span-stylecolorblueviolet导热热阻span"><a class="markdownIt-Anchor" href="#bta41结与封装的span-stylecolorblueviolet导热热阻span"></a> BTA41结与封装的<span style="color:BlueViolet;">导热热阻</span></h3><p>写datasheet的科学家已经帮我们算好了，结与封装外壳之间的热阻0.9℃/W</p><p><img src="/65fdcd15/BTA41%E7%83%AD%E9%98%BB.jpg" alt></p><h3 id="封装与导热片间的span-stylecolorblueviolet导热热阻span"><a class="markdownIt-Anchor" href="#封装与导热片间的span-stylecolorblueviolet导热热阻span"></a> 封装与导热片间的<span style="color:BlueViolet;">导热热阻</span></h3><p><img src="/65fdcd15/BTA41%E5%AF%BC%E7%83%AD%E9%9D%A2%E7%A7%AF.jpg" alt></p><p>导热面积取封装接触面积S<sub>c</sub>约为：202mm<sup>2</sup></p><p>使用<a href="http://assets.lairdtech.com/home/brandworld/files/THR-DS-TFlex-700_07_2_14.pdf" target="_blank" rel="noopener">莱尔德Laird TFLEX700 导热垫片</a></p><p>规格：15mm×15mm</p><p>厚度：0.25mm（越薄越好）导热系数：5.0/mK</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mrow><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><mi>c</mi><mo>−</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msub><mtext>＝</mtext><mfrac><mi>L</mi><mrow><mi>λ</mi><mo>⋅</mo><mi>S</mi></mrow></mfrac><mo>=</mo><mfrac><mn>0.0025</mn><mrow><mn>5.0</mn><mo>⋅</mo><mn>0.000202</mn></mrow></mfrac><mo>≈</mo><mn>2.48</mn><mo stretchy="false">(</mo><mi>K</mi><mi mathvariant="normal">/</mi><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{th(c-t)}＝\frac{L}{λ\cdot S}=\frac{0.0025}{5.0\cdot0.000202}\approx2.48(K/W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">c</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">＝</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span><span class="mord">.</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">2</span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">4</span><span class="mord">8</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span></span></p><h3 id="铝散热片在空气中被动散热的span-stylecolorblueviolet对流换热热阻span"><a class="markdownIt-Anchor" href="#铝散热片在空气中被动散热的span-stylecolorblueviolet对流换热热阻span"></a> 铝散热片在空气中被动散热的<span style="color:BlueViolet;">对流换热热阻</span></h3><p>计算To-3p 25mm高的散热片表面积S<sub>h</sub>约为4330mm<sup>2</sup>，即0.00433m<sup>2</sup>，还要减去与封装重合的接触面积</p><p>即有效对流换热面积S<sub>0</sub>为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>S</mi><mn>0</mn></msub><mo>=</mo><msub><mi>S</mi><mi>h</mi></msub><mo>−</mo><msub><mi>S</mi><mi>c</mi></msub><mo>=</mo><mn>4330</mn><mo>−</mo><mn>202</mn><mo>=</mo><mn>4098</mn><mi>m</mi><msup><mi>m</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">S_0=S_h-S_c=4330-202=4098mm^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord">3</span><span class="mord">3</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">0</span><span class="mord">9</span><span class="mord">8</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p><img src="/65fdcd15/To-3P%E8%A1%A8%E9%9D%A2%E7%A7%AF.jpg" alt></p><p>取自然对流换热系数中间值15W/(m<sup>2</sup>·K)进行计算：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mrow><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><mi>h</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>S</mi><mn>0</mn></msub><mo>⋅</mo><msub><mi>h</mi><mi>a</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mn>15</mn><mo>⋅</mo><mn>0.004098</mn></mrow></mfrac><mo>≈</mo><mn>16.27</mn><mo stretchy="false">(</mo><mi>K</mi><mi mathvariant="normal">/</mi><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{th(h-a)}=\frac{1}{S_0\cdot h_{a}}=\frac{1}{15 \cdot0.004098}\approx16.27(K/W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">a</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1574400000000002em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">4</span><span class="mord">0</span><span class="mord">9</span><span class="mord">8</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">.</span><span class="mord">2</span><span class="mord">7</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span></span></p><h2 id="bta41本身热损耗"><a class="markdownIt-Anchor" href="#bta41本身热损耗"></a> BTA41本身热损耗</h2><p>BTA41完整周期最大发热功耗与导通时的通态均方根电流（完整周期）</p><p><img src="/65fdcd15/BTA%E5%AE%8C%E6%95%B4%E5%91%A8%E6%9C%9F%E6%9C%80%E5%A4%A7%E5%8F%91%E7%83%AD%E5%8A%9F%E8%80%97.jpg" alt></p><p>加热管800W负载一路3.636A，在表1中BTA41约产生的2.5W发热功耗</p><h2 id="结温计算-环境温度为70c"><a class="markdownIt-Anchor" href="#结温计算-环境温度为70c"></a> 结温计算 (环境温度为70℃）</h2><h3 id="没有任何散热片纯靠外壳散热"><a class="markdownIt-Anchor" href="#没有任何散热片纯靠外壳散热"></a> 没有任何散热片纯靠外壳散热：</h3><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub><mo>=</mo><mn>70</mn><mo>+</mo><mn>2.5</mn><mo>⋅</mo><mn>50</mn><mo>≈</mo><mn>195</mn><mtext>℃</mtext></mrow><annotation encoding="application/x-tex">T_j=70+2.5\cdot50\approx195℃</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mord">5</span><span class="mord">℃</span></span></span></span></span></p><p>结温过高，不解释🙃</p><h3 id="被动散热"><a class="markdownIt-Anchor" href="#被动散热"></a> 被动散热</h3><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub><mo>=</mo><mn>70</mn><mo>+</mo><mn>2.5</mn><mo>⋅</mo><mo stretchy="false">(</mo><mn>0.9</mn><mo>+</mo><mn>2.48</mn><mo>+</mo><mn>16.27</mn><mo stretchy="false">)</mo><mo>≈</mo><mn>119.13</mn><mtext>℃</mtext></mrow><annotation encoding="application/x-tex">T_j=70+2.5\cdot(0.9+2.48+16.27)\approx119.13℃</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">4</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">.</span><span class="mord">2</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">9</span><span class="mord">.</span><span class="mord">1</span><span class="mord">3</span><span class="mord">℃</span></span></span></span></span></p><p>结温很极限，静止空气对流换热系数太小，导致散热器与环境的热阻很大，因此即使是小功率负载，也需要添加风扇进行主动散热🙃</p><h3 id="主动散热"><a class="markdownIt-Anchor" href="#主动散热"></a> 主动散热</h3><p>强制对流情况下，空气的对流换热系数在20~100之间，保守起见取中间值60W/(m<sup>2</sup>·℃)，那么重新计算铝散热片在空气中的 对流换热热阻 和 结温 分别为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mrow><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><mi>h</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mn>60</mn><mo>∗</mo><mn>0.004098</mn></mrow></mfrac><mo>≈</mo><mn>4.07</mn><mtext>℃</mtext><mi mathvariant="normal">/</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">R_{th(h-a)}=\frac{1}{60*0.004098}\approx4.07℃/W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">h</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">a</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">4</span><span class="mord">0</span><span class="mord">9</span><span class="mord">8</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">.</span><span class="mord">0</span><span class="mord">7</span><span class="mord">℃</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub><mo>=</mo><mn>70</mn><mo>+</mo><mn>2.5</mn><mo>⋅</mo><mo stretchy="false">(</mo><mn>0.9</mn><mo>+</mo><mn>2.48</mn><mo>+</mo><mn>4.07</mn><mo stretchy="false">)</mo><mo>≈</mo><mn>88.63</mn><mtext>℃</mtext></mrow><annotation encoding="application/x-tex">T_j=70+2.5\cdot(0.9+2.48+4.07)\approx88.63℃</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">4</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">.</span><span class="mord">0</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">8</span><span class="mord">.</span><span class="mord">6</span><span class="mord">3</span><span class="mord">℃</span></span></span></span></span></p><p>结温正常，小于T<sub>j</sub>最高工作温度125℃，实际测试4cm风扇换热能力肯定更好😂</p><p>参考：<a href="http://st.avros.net/articles/heatsink-calc.html" target="_blank" rel="noopener">散热片的简单估算</a></p><h1 id="可控硅散热片感应电问题"><a class="markdownIt-Anchor" href="#可控硅散热片感应电问题"></a> 可控硅散热片感应电问题</h1><p>如果可控硅是BTA，那么阳极和散热片是绝缘的，如果是BTB，那中间脚阳极与散热片是相通的:</p><p><img src="/65fdcd15/BTABTB.jpg" alt></p><p>若使用BTB，通交流电时散热片会有感应电压，在散热片和管子之间加云母片或者硅胶垫，这种作法即使绝缘了，因为可控硅的散热片始终都经过安装螺丝跟可控硅铜底的孔连接起来的，所以也会有感应电，建议用尼龙或PEEK螺丝连接，用BTA就没事</p>]]></content>
      
      
      <categories>
          
          <category> PCB设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 半导体元件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp8266 spi设备共用CS</title>
      <link href="/b85c9bb4/"/>
      <url>/b85c9bb4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-非门电路"><a class="markdownIt-Anchor" href="#1-非门电路"></a> 1. 非门电路</h1><p><img src="/b85c9bb4/%E9%9D%9E%E9%97%A8.png" alt></p><p>这个很简单，不细说了哈</p><h1 id="2-max31865"><a class="markdownIt-Anchor" href="#2-max31865"></a> 2. MAX31865</h1><p>​&quot;<a href="https://datasheets.maximintegrated.com/en/ds/MAX31865.pdf" target="_blank" rel="noopener">MAX31865</a>是易于使用的电阻数字转换器，针对铂电阻温度检测器（RTD）进行了优化。外部电阻设置所用RTD的灵敏度，而精密Δ-ΣADC则可转换RTD电阻比。 MAX31865的输入具有高达Q45V的过压故障保护，并具有可编程检测RTD和电缆开路和短路情况的功能&quot;</p><a id="more"></a><div align="right">——来自datasheet</div>项目需要使用了两个Adafuit设计的MAX31865，同时Adafruit还提供了[Arduino library](https://github.com/adafruit/Adafruit_MAX31865) ，我们小改即可<p>Adafuit版本的原理图:</p><p><img src="/b85c9bb4/max31865sch.png" alt></p><h1 id="3-一个cs引脚控制两个max31865片选"><a class="markdownIt-Anchor" href="#3-一个cs引脚控制两个max31865片选"></a> 3. 一个CS引脚控制两个MAX31865片选</h1><h2 id="理想电路"><a class="markdownIt-Anchor" href="#理想电路"></a> 理想电路</h2><p>使用<a href="https://fritzing.org/" target="_blank" rel="noopener">Fritzing</a>绘制</p><p><img src="/b85c9bb4/share_cs_pin-bb.png" alt></p><p>PS：灵魂走线(小声bb)</p><h2 id="原理图"><a class="markdownIt-Anchor" href="#原理图"></a> 原理图</h2><p>也是用Fritzing整的</p><p><img src="/b85c9bb4/share_one_cs_pin-sch.jpg" alt></p><p>细心的读者会发现，该电路少了开篇非门电路的上拉电阻，因为Adafuit版本的原理图已经将CS上拉10k，所以这里可以省略😳</p><p>PS：感觉没有Eagle顺手(小声bb)</p><h2 id="实测电路"><a class="markdownIt-Anchor" href="#实测电路"></a> 实测电路</h2><p><img src="/b85c9bb4/bb.JPG" alt="IMG_4563"></p><p>为了更显情调，在D2引脚上加了一个💡串联一个510Ω接地，这样会随着D2(CS信号)变化Blink</p><h3 id="为啥还有一个arduino"><a class="markdownIt-Anchor" href="#为啥还有一个arduino"></a> 为啥还有一个arduino？</h3><p>arduino，引出的三条线:</p><table><thead><tr><th style="text-align:center">color</th><th style="text-align:center">使用GPIO</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">红线</td><td style="text-align:center">A0</td><td style="text-align:center">测右边模块CS电平，对应下文Demo的MAX_02</td></tr><tr><td style="text-align:center">绿线</td><td style="text-align:center">A1</td><td style="text-align:center">测左边模块CS电平，对应下文Demo的MAX_01</td></tr><tr><td style="text-align:center">蓝线</td><td style="text-align:center">A2</td><td style="text-align:center">测D2(CS信号)变化电平，其实和绿线电平变化相同</td></tr></tbody></table><p>arduino当示波器用，虽然只有3k采样频率，但是总比没有好😅</p><p>该示波器基于processing，使用Uno的A0-A3引脚，支持4通道，<a href="https://github.com/rogeriobego/oscilloscope-arduino-processing" target="_blank" rel="noopener">项目地址</a></p><h1 id="4-修改库"><a class="markdownIt-Anchor" href="#4-修改库"></a> 4. 修改库</h1><p>修改的行都上了注释，若太多原库代码的用&quot;......&quot;表示</p><h2 id="adafruit_max31865h"><a class="markdownIt-Anchor" href="#adafruit_max31865h"></a> Adafruit_MAX31865.h</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> max31865_numwires &#123; </span><br><span class="line">  MAX31865_2WIRE = <span class="number">0</span>,</span><br><span class="line">  MAX31865_3WIRE = <span class="number">1</span>,</span><br><span class="line">  MAX31865_4WIRE = <span class="number">0</span>,</span><br><span class="line">  MAX31865_Double_one_cs_pin = <span class="number">2</span><span class="comment">//添加此枚举常量便于修改Adafruit_MAX31865::begin()</span></span><br><span class="line">&#125; <span class="keyword">max31865_numwires_t</span>;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adafruit_MAX31865</span> &#123;</span></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  ......</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> trans;<span class="comment">//  用于cs计数</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">bool</span> change_cs;<span class="comment">//  是否改变片选</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  ......</span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure><h2 id="adafruit_max31865cpp"><a class="markdownIt-Anchor" href="#adafruit_max31865cpp"></a> Adafruit_MAX31865.cpp</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 以下代码在库文件包含后和成员函数定义前加入*/</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> Adafruit_MAX31865::trans = <span class="number">0</span>;  <span class="comment">//  非负整形计数溢出时归零</span></span><br><span class="line"><span class="keyword">bool</span> Adafruit_MAX31865::change_cs = <span class="literal">false</span>;  <span class="comment">//  向Adafruit_MAX31865::begin()传入前三种枚举常量时不修改片选</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">Adafruit_MAX31865::begin</span><span class="params">(<span class="keyword">max31865_numwires_t</span> wires)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">pinMode</span>(_cs, <span class="literal">OUTPUT</span>);</span><br><span class="line">    <span class="keyword">if</span> (wires == MAX31865_Double_one_cs_pin)</span><br><span class="line">    &#123;</span><br><span class="line">        wires = MAX31865_4WIRE;</span><br><span class="line">        ++trans;<span class="comment">//首次为奇数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  trans为奇数时，片选MAX_01，偶数时片选MAX_02</span></span><br><span class="line">        <span class="keyword">if</span> (trans % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            change_cs = <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">"  MAX_02: "</span>);</span><br><span class="line">            <span class="built_in">digitalWrite</span>(_cs, <span class="literal">LOW</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            change_cs = <span class="literal">false</span>;</span><br><span class="line">            <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">"MAX_01: "</span>);</span><br><span class="line">            <span class="built_in">digitalWrite</span>(_cs, <span class="literal">HIGH</span>);        <span class="comment">//  第一次必须上拉以执行SPI.begin();</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">digitalWrite</span>(_cs, <span class="literal">HIGH</span>);</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后将<code>Adafruit_MAX31865::readRegisterN()</code>和<code>Adafruit_MAX31865::writeRegister8()</code>的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">digitalWrite</span>(_cs, <span class="literal">LOW</span>);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">digitalWrite</span>(_cs, <span class="literal">HIGH</span>);</span><br></pre></td></tr></table></figure><p>分别替换为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(change_cs == <span class="literal">false</span>)  </span><br><span class="line">    <span class="built_in">digitalWrite</span>(_cs, <span class="literal">LOW</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(_cs, <span class="literal">HIGH</span>);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(change_cs == <span class="literal">false</span>)</span><br><span class="line">    <span class="built_in">digitalWrite</span>(_cs, <span class="literal">HIGH</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(_cs, <span class="literal">LOW</span>);</span><br></pre></td></tr></table></figure><h1 id="5-arduino-ide程序"><a class="markdownIt-Anchor" href="#5-arduino-ide程序"></a> 5. arduino IDE程序</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 2020-02-25 OldGerman*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_MAX31865.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RREF      430.0   <span class="comment">/* Max31865参考电阻Rref值: pt100 430Ω, pt1000 4300Ω */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RNOMINAL  100.0   <span class="comment">/* 零度时pt100电阻值校准, pt1000 为 1000.0 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Node MCU 1.0 pins connected to: */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_CS   4    <span class="comment">/* D2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MISO     13   <span class="comment">/* D7 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOSI     12   <span class="comment">/* D6 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCLK     14   <span class="comment">/* D5 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 库的SPI总线速率为8MHz时 */</span></span><br><span class="line"><span class="keyword">int</span> chAverage = <span class="number">1</span>;  <span class="comment">//  示例默认测温采样一次，当采样次数为20时，2秒可读完20次求出平均值</span></span><br><span class="line">                    <span class="comment">//  单次读取时间100ms，远高于MAX31865寄存器最长读数更新时间21ms</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">maxAverageTemp</span><span class="params">(Adafruit_MAX31865)</span></span>;  <span class="comment">/* 测温滤波 */</span></span><br><span class="line"></span><br><span class="line">Adafruit_MAX31865 maxESP = Adafruit_MAX31865(MAX_CS, MISO, MOSI, SCLK);</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------main function------------------</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>();</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">"Double MAX31865 4 wire PT100 Sensor Test!"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> tabline = <span class="literal">false</span>;</span><br><span class="line">  ++tabline;</span><br><span class="line">  maxESP.<span class="built_in">begin</span>(MAX31865_Double_one_cs_pin);  <span class="comment">//【单线双max模式，四线pt100】</span></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">print</span>(maxAverageTemp(maxESP));</span><br><span class="line">  <span class="keyword">if</span>(tabline %<span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//`测温滤波 - 多次采样计算平均数</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">maxAverageTemp</span><span class="params">(Adafruit_MAX31865 _maxESP)</span></span>&#123;</span><br><span class="line">  <span class="keyword">float</span> averageTemp = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chAverage; ++i)</span><br><span class="line">  &#123;</span><br><span class="line">    averageTemp += _maxESP.temperature(RNOMINAL, RREF);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> averageTemp /= chAverage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-demo"><a class="markdownIt-Anchor" href="#6-demo"></a> 6. Demo</h1><p><img src="/b85c9bb4/Demo.jpg" alt></p><p>右侧为arduino示波器，红绿蓝三种电平变化对应上文提及的功能😃</p><h1 id="7-关于修改过的库"><a class="markdownIt-Anchor" href="#7-关于修改过的库"></a> 7. 关于修改过的库</h1><p><a href="https://pan.baidu.com/s/1yOlyttULokXw5qRa7LnT2Q" target="_blank" rel="noopener">度云链接   提取码：p9kl </a></p><h2 id="8mhz总线速度测试正常"><a class="markdownIt-Anchor" href="#8mhz总线速度测试正常"></a> 8MHz总线速度测试正常</h2><p>没有降低该库的spi速率，全文在提高到8MHz测试的</p><h3 id="adafruit_max31865h-2"><a class="markdownIt-Anchor" href="#adafruit_max31865h-2"></a> Adafruit_MAX31865.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> SPISettings max31865_spisettings = SPISettings(<span class="number">8000000</span><span class="comment">/*&lt;--Dual_MAX_one_CS_pin_8000,000测试没问题/*之前:500000*/</span>, MSBFIRST, SPI_MODE1);<span class="comment">//https://www.arduino.cc/en/Reference/SPISettings</span></span><br></pre></td></tr></table></figure><h2 id="优化adafruit_max31865readrtd避免看门狗复位"><a class="markdownIt-Anchor" href="#优化adafruit_max31865readrtd避免看门狗复位"></a> 优化Adafruit_MAX31865::readRTD()，避免看门狗复位</h2><p>另外，我还修改了该库，可在Adafruit_MAX31865.h中选择禁用Adafruit_MAX31865::readRTD()所有的delay()，用milis()和yield()代替，关键代码如下：</p><h3 id="adafruit_max31865h-3"><a class="markdownIt-Anchor" href="#adafruit_max31865h-3"></a> Adafruit_MAX31865.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  add by oldgerman 20200115</span></span><br><span class="line"><span class="comment">//  使用milis()配合yield()代替readRTD()函数内部的delay()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NODELAY                             <span class="comment">//  若注释掉，使用delay()</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> NODELAY</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> previousMillis = <span class="number">0</span>;    <span class="comment">// will store last time rtd was updated</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="adafruit_max31865cpp-2"><a class="markdownIt-Anchor" href="#adafruit_max31865cpp-2"></a> Adafruit_MAX31865.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint16_t</span> <span class="title">Adafruit_MAX31865::readRTD</span> <span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    clearFault();</span><br><span class="line">    enableBias(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">uint16_t</span> rtd;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> NODELAY</span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">uint8_t</span> t = readRegister8(MAX31856_CONFIG_REG);</span><br><span class="line">    t |= MAX31856_CONFIG_1SHOT;      </span><br><span class="line">    writeRegister8(MAX31856_CONFIG_REG, t);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">65</span>);</span><br><span class="line">    rtd = readRegister16(MAX31856_RTDMSB_REG);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// remove fault</span></span><br><span class="line">    rtd &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> rtd; </span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined NODELAY</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">long</span> currentMillis_1 = <span class="built_in">millis</span>();</span><br><span class="line">        <span class="comment">//Serial.println("currentMillis_1  = ");Serial.print(currentMillis_1);Serial.println();</span></span><br><span class="line">        <span class="keyword">if</span>(currentMillis_1 - previousMillis &gt;= <span class="number">10</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            previousMillis = currentMillis_1;</span><br><span class="line">            <span class="keyword">uint8_t</span> t = readRegister8(MAX31856_CONFIG_REG);</span><br><span class="line">            t |= MAX31856_CONFIG_1SHOT;      </span><br><span class="line">            writeRegister8(MAX31856_CONFIG_REG, t);</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">long</span> currentMillis_2 = <span class="built_in">millis</span>();</span><br><span class="line">                <span class="comment">//Serial.println("currentMillis_2  = ");Serial.print(currentMillis_2);Serial.println();</span></span><br><span class="line">                <span class="keyword">if</span> (currentMillis_2 -  previousMillis &gt;= <span class="number">65</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    previousMillis = currentMillis_2;</span><br><span class="line">                    rtd = readRegister16(MAX31856_RTDMSB_REG);</span><br><span class="line">                    <span class="comment">// remove fault</span></span><br><span class="line">                    rtd &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">return</span> rtd;</span><br><span class="line">                &#125;</span><br><span class="line">                    <span class="built_in">yield</span>();<span class="comment">//第一次</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">yield</span>();<span class="comment">//第二次</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="yield简单介绍-来自sparkfun"><a class="markdownIt-Anchor" href="#yield简单介绍-来自sparkfun"></a> yield()简单介绍 - - 来自Sparkfun</h4><p>由ESP8266 Arduino库的创造者实现，该函数调用后台函数以允许他们执行其任务。</p><p>例如，如果您的草图正在等待某人按下连接到引脚12的按钮，则这样的循环将使ESP8266不会崩溃：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pinMode</span>(<span class="number">12</span>, <span class="literal">INPUT_PULLUP</span>); <span class="comment">// Set pin 12 as an input w/ pull-up</span></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">digitalRead</span>(<span class="number">12</span>) == <span class="literal">HIGH</span>) <span class="comment">// While pin 12 is HIGH (not activated)</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// Do (almost) nothing -- yield to allow ESP8266 background functions</span></span><br><span class="line"><span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">"Button is pressed!"</span>); <span class="comment">// Print button pressed message.</span></span><br></pre></td></tr></table></figure><p>实测，禁用delay()后，我在上文中的maxAverageTemp()采样可以提高到20次以上，而不会使看门狗复位，(原先5次以上就很容易复位)😳</p><p>最后来个单CS读两个MAX31865每一次采样20次的波形😄</p><p><img src="/b85c9bb4/20%E6%AC%A1.png" alt></p><h1 id="8后记"><a class="markdownIt-Anchor" href="#8后记"></a> 8.后记</h1><h2 id="74hc138-复用cs"><a class="markdownIt-Anchor" href="#74hc138-复用cs"></a> 74HC138 复用CS</h2><p>如法炮制，可以用cmos器件74HC138实现3个CS引脚片选8个spi设备</p><p><a href="https://baike.baidu.com/item/74HC138/5574130?ivk_sa=1022817p" target="_blank" rel="noopener">以下来自百度百科：</a></p><p>74HC138译码器可接受3位二进制加权地址输入（A0, A1和A2）</p><p>当使能时，<strong>提供8个互斥的低有效输出</strong>（Y0至Y7），简直太合适了有木有😂</p><p><img src="/b85c9bb4/74HC138%E7%9C%9F%E5%80%BC%E8%A1%A8.PNG" alt></p>]]></content>
      
      
      <categories>
          
          <category> esp8266 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试例程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 博客如何写出彩色字体，能实时预览的那种？</title>
      <link href="/6c57f882/"/>
      <url>/6c57f882/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="typora编辑器"><a class="markdownIt-Anchor" href="#typora编辑器"></a> Typora编辑器</h1><p><img src="/6c57f882/Typora-logo.png" alt></p><p>博主没学过啥web语言，偶尔在博客上写几篇文章当笔记，之前米板刷了ubuntu为了学C/C++，在ubuntu的Bash里一顿傻瓜操作，本地部署了hexo，再用gedit写博客，上传至Git Hub😄，后来嫌屏幕太小，又在win10上用GitBash重新搭了一次，发现<strong>Typora</strong>这个文本编辑器十分上手，除了实时支持<strong>MarkDown</strong>语法的渲染结果，还支持在文本编辑模式下同时显示图片，那么，还有没有更多的功能呢？有的，还支持实时预览<strong>html</strong>标签的渲染结果😆</p><a id="more"></a><p><a href="https://typora.io/" target="_blank" rel="noopener">Typora官网</a></p><h1 id="一些实用的标签"><a class="markdownIt-Anchor" href="#一些实用的标签"></a> 一些实用的标签</h1><h2 id="span-style-设置字体属性"><a class="markdownIt-Anchor" href="#span-style-设置字体属性"></a> span - - - style | 设置字体属性</h2><h3 id="杂烩用法"><a class="markdownIt-Anchor" href="#杂烩用法"></a> 杂烩用法：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">'color:文字颜色;background:背景颜色;font-size:文字大小;font-family:字体;'</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>style后传入的参数以分号隔开，参数数量可裁剪</p><p>其中color：支持三种格式  颜色名，十六进制颜色值，RGB取色器</p><h3 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例：</h3><ol><li>三种color格式显示同样的红色字体：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red;"</span>&gt;</span>红不红？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><span style="color:red;">红不红？</span></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:rgb(255, 0, 0);"</span>&gt;</span>红不红？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><span style="color:rgb(255, 0, 0);">红不红？</span></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:#FF0000;"</span>&gt;</span>红不红？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><span style="color:#FF0000;">红不红？</span></p><ol start="2"><li>黑底白字仿宋50px：<span style="color:white;background:black;font-size:23px;font-family:仿宋;">黑白配</span></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">'color:white;background:black;font-size:50px;font-family:仿宋;'</span>&gt;</span>黑白配<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="b-strong-加粗字体"><a class="markdownIt-Anchor" href="#b-strong-加粗字体"></a> b &amp; strong | 加粗字体</h2><h3 id="用法"><a class="markdownIt-Anchor" href="#用法"></a> 用法：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>我被B标签加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>我被Strong标签加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="示例-2"><a class="markdownIt-Anchor" href="#示例-2"></a> 示例：</h3><ol><li>加粗字体：<b>加粗</b></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>紫色加粗：<b><span style="color:BlueViolet;">骚紫色加粗</span></b></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:rgb(255, 0, 255);"</span>&gt;</span>骚紫色加粗<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="sup-sub-上标-下标"><a class="markdownIt-Anchor" href="#sup-sub-上标-下标"></a> sup &amp; sub | 上标 &amp; 下标</h2><h3 id="用法-2"><a class="markdownIt-Anchor" href="#用法-2"></a> 用法：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">上标：<span class="tag">&lt;<span class="name">sup</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line">下标：<span class="tag">&lt;<span class="name">sub</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="示例-3"><a class="markdownIt-Anchor" href="#示例-3"></a> 示例：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mm<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br></pre></td></tr></table></figure><p>平方毫米: mm<sup>2</sup></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y = log<span class="tag">&lt;<span class="name">sub</span>&gt;</span>2 <span class="tag">&lt;/<span class="name">sub</span>&gt;</span>x</span><br></pre></td></tr></table></figure><p>对数: y = log<sub>2 </sub>x</p><h2 id="div-align-各种对齐"><a class="markdownIt-Anchor" href="#div-align-各种对齐"></a> div - - align | 各种对齐</h2><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>奇怪的知识增加了！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div align="center">奇怪的知识增加了！</div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">'color:white;background:black;font-size:20px;'</span>&gt;</span>&amp;#12288“事情总会朝着意想不到的方向发展”&amp;#12288<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div align="center"><span style="color:white;background:black;font-size:20px;">&#12288“事情总会朝着意想不到的方向发展”&#12288</span></div>|  参数   |      功能      || :-----: | :------------: ||  left   |     左对齐     ||  right  |     右对齐     || center  |    居中对齐    || justify | 伸展行文字间隔 |<h1 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h1><p>👉这几天就整理了这几个，如果有新的实用标签后续再补充哈~</p><p><span style="color:#138DE9;">湖蓝色</span>：#138DE9</p><h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1><p><a href="https://sspai.com/post/54912" target="_blank" rel="noopener">Typora 完全使用详解</a></p><p><a href="https://www.cnblogs.com/dreamingbaobei/p/5062901.html" target="_blank" rel="noopener">新手理解HTML、CSS、javascript之间的关系</a></p><p><a href="%5Bhttps://baike.baidu.com/item/WEB%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%5D(https://baike.baidu.com/item/WEB%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80)">WEB编程语言</a></p><p><a href="https://blog.csdn.net/u011848617/article/details/72836146" target="_blank" rel="noopener">CSS文本居中问题</a></p><p><a href="https://blog.csdn.net/testcs_dn/article/details/45719357" target="_blank" rel="noopener">颜色名列表</a></p><p><a href="http://www.divcss5.com/html/h390.shtml" target="_blank" rel="noopener">html上标与下标注标签元素</a></p><p><a href="https://segmentfault.com/a/1190000017194576" target="_blank" rel="noopener">字符编码及空白汉字占位符</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp8266 4线风扇调速测速</title>
      <link href="/f3fd3c5b/"/>
      <url>/f3fd3c5b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1主板4针风扇接口"><a class="markdownIt-Anchor" href="#1主板4针风扇接口"></a> 1.主板4针风扇接口</h2><p>先从一张年代久远的图说起，听说是intel的规范，2003年的，</p><p>给出了了主板4针风扇接口的外围电路设计，咱就参考这个测试：</p><p><img src="/f3fd3c5b/%E8%8B%B1%E7%89%B9%E5%B0%94%E4%B8%BB%E6%9D%BF%E9%A3%8E%E6%89%87-4pin%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83.png" alt="英特尔主板风扇-4pin设计规范"></p><h3 id="目前4pin接口主流的线序"><a class="markdownIt-Anchor" href="#目前4pin接口主流的线序"></a> 目前4pin接口主流的线序</h3><p>😥和上图有点不一样，看仔细了</p><table><thead><tr><th style="text-align:center">引脚编号</th><th style="text-align:center">导线颜色</th><th style="text-align:center">引线定义</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">黑</td><td style="text-align:center">GND</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">红</td><td style="text-align:center">+12V</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">黄</td><td style="text-align:center">测速线</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">蓝</td><td style="text-align:center">调速线</td></tr></tbody></table><a id="more"></a><h2 id="2电路分析"><a class="markdownIt-Anchor" href="#2电路分析"></a> 2.电路分析</h2><h4 id="12号引脚"><a class="markdownIt-Anchor" href="#12号引脚"></a> 1，2号引脚</h4><p>负责风扇供电，风扇是外转子无刷电机，没有机械式换向器(使用半导体换向器)，因此不会产生碳刷交替时的电压，所以Intel只并一个铝电解电容对电源进行低频滤波，不知道这样理解对不对?</p><h4 id="3号引脚"><a class="markdownIt-Anchor" href="#3号引脚"></a> 3号引脚</h4><p>输出风扇转速，用4.7k上拉到12V电源，再接27.4k和10k两个电阻分压，<code>FAN TACH</code>测速线从10k分压测量脉冲信号，粗略计算一下，<code>FAN TACH</code>的高电平为2.85V，匹配3.3V系统的逻辑电平，所以esp8266的GPIO引脚可以测量</p><p>😳为什么肯定3号线输出的是电平信号而不是模拟电压？</p><p>题主没有示波器，调节4线风扇的转速时，先没有用3号引脚的外围电路，直接用万用表测量3号引脚，其电压范围差不多0.02V~0.18V，推测这个引脚不能输出高电平但有内部上拉电阻，接着搭建了外围电路，在<code>FAN TACH</code>位置进行测量，发现无论怎样调速，电压保持1.51V左右不变，假设为电平信号计算的高电平为2.85V，那么可以肯定该引脚输出一个占空比约为50%，频率随转速变化的TTL信号</p><h4 id="4号引脚"><a class="markdownIt-Anchor" href="#4号引脚"></a> 4号引脚</h4><p>调节风扇的转速，使用NPN晶体管，型号<a href="https://pdf1.alldatasheet.com/datasheet-pdf/view/17919/PHILIPS/MMBT3904.html" target="_blank" rel="noopener">MMBT3904</a>，40V 100mA，集电极和发射极串接两个4.7k限流</p><h2 id="3测试准备"><a class="markdownIt-Anchor" href="#3测试准备"></a> 3.测试准备</h2><h4 id="原理图"><a class="markdownIt-Anchor" href="#原理图"></a> 原理图</h4><p><img src="/f3fd3c5b/sch.png" alt></p><p>开发板为NodeMCU 1.0 ESP-12E</p><p>R7为10k电位器，接入A0读取模拟量</p><p>T1为三极管，用2N222A代替，参数40V 600mA，集电极限流电阻建议1-4.7k</p><p>C1为滤波电容，推荐钽电容或铝电解</p><p>英特尔的图27.4k用R4 20k和R5 6.8k代替，合计26.8k，FAN_SPEED高电平增加到2.89V</p><p>12V电源和开发板必须共地，否则三极管不能正常开关，无法调速</p><h4 id="nodemcu-10-可产生pwm信号的引脚"><a class="markdownIt-Anchor" href="#nodemcu-10-可产生pwm信号的引脚"></a> NodeMCU 1.0 可产生PWM信号的引脚</h4><p><img src="/f3fd3c5b/GPIO%E5%8E%9F%E7%90%86%E5%9B%BE.jpg" alt></p><p>上图中，标有“正弦波”的引脚可产生PWM信号，实际上D0也可以</p><h4 id="面包板搭建电路"><a class="markdownIt-Anchor" href="#面包板搭建电路"></a> 面包板搭建电路</h4><p><img src="/f3fd3c5b/%E9%9D%A2%E5%8C%85%E6%9D%BF.JPG" alt></p><h2 id="4安利vmicro"><a class="markdownIt-Anchor" href="#4安利vmicro"></a> 4.安利vMicro</h2><p>visual studo的arduino ide马甲程序，除了支持原版的所有功能，外加vs的标配功能，例如实时代码纠错，参数列表，自动补全，自动加载函数，等等，实在审美不了原版万年的蓝绿色，另外用vs写程序更专业😢</p><h4 id="如何安装"><a class="markdownIt-Anchor" href="#如何安装"></a> 如何安装</h4><p>在vs拓展管理中搜索arduino安装即可，使用教程网上很多，这里不做复述</p><p><img src="/f3fd3c5b/vMcrio.png" alt></p><h2 id="5示例代码"><a class="markdownIt-Anchor" href="#5示例代码"></a> 5.示例代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Name:Blink_and_Pwm.ino</span></span><br><span class="line"><span class="comment"> Created:2020/2/18 12:29:16</span></span><br><span class="line"><span class="comment"> Author:OldGerman</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Ticker.h"</span></span></span><br><span class="line">Ticker timer1;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  pins</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> analogInPin = A0;     <span class="comment">//  A0 读取电位器电压</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> fan_speed = <span class="number">12</span>;       <span class="comment">//  D6 测速</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> pwm_out = <span class="number">16</span>;         <span class="comment">//  D0 调速</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// other message</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> duration = <span class="number">0</span>;     <span class="comment">//  加权时间</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> read_times = <span class="number">2</span>;       <span class="comment">//  测速信号采样周期（多取几次可更精确）</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> fan_min_Hz = <span class="number">40</span>;      <span class="comment">//  测速线每秒最低脉冲次数，不同的风扇不一样，需要根据转速范围计算，或者实测也行</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pwm</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Pwm(<span class="keyword">int</span> pin)</span><br><span class="line">        : _pin(pin)</span><br><span class="line">    &#123;   <span class="built_in">pinMode</span>(_pin, <span class="literal">OUTPUT</span>);  &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pwmWrite</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;   <span class="built_in">analogWrite</span>(_pin, outputValue());   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> sensorValue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">outputValue</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        sensorValue = <span class="built_in">analogRead</span>(analogInPin);  <span class="comment">//  esp8266 ADC为10位，analogRead()范围0~1023</span></span><br><span class="line">        <span class="keyword">return</span> sensorValue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> _pin;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Pwm::sensorValue = <span class="number">0</span>;   <span class="comment">//  外部初始化静态类成员</span></span><br><span class="line"><span class="function">Pwm <span class="title">pwm</span><span class="params">(pwm_out)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">class_pwm</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pwm.pwmWrite();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">"ADC: "</span>);</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">print</span>(Pwm::sensorValue);</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">' '</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read_speed</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    duration = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (Pwm::sensorValue &lt; <span class="number">720</span>) &#123;                   <span class="comment">//  当风扇开始转动时，计算转速</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; read_times; i++) &#123;      <span class="comment">//  对高低电平的变化时间加权计算，得出总时间，单位: ms</span></span><br><span class="line">            duration += <span class="built_in">pulseIn</span>(fan_speed, <span class="literal">HIGH</span>);   <span class="comment">//  pulseIn()默认等待超时时间1000000UL，等待过长会使硬件看门狗复位</span></span><br><span class="line">            duration += <span class="built_in">pulseIn</span>(fan_speed, <span class="literal">LOW</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        duration = <span class="number">4294967295</span>;          <span class="comment">//  sensorValue = 1023 风扇会停止输出脉冲信号，pulseIn()会一直等待电平变化，导致复位</span></span><br><span class="line">                                        <span class="comment">//      设置为unsigned long类型的最大值，让计算后风扇转速接近为0</span></span><br><span class="line">    &#125;</span><br><span class="line">    duration = duration / read_times;           <span class="comment">//  高低电平变化1次用时,单位: ms</span></span><br><span class="line">    duration = <span class="number">1000000</span> / duration;              <span class="comment">//  1秒内产生的脉冲次数（风扇转速，单位: Hz）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(duration &lt; fan_min_Hz)                   <span class="comment">//  计算值小于最低每秒脉冲数，直接取最小值</span></span><br><span class="line">        duration = fan_min_Hz;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">print</span>(duration);</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">" HZ"</span>);</span><br><span class="line">    duration = duration * <span class="number">60</span>;                   <span class="comment">//  1分钟内可变化几次（风扇转速: r/min）</span></span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">print</span>(<span class="string">"  v is "</span>);</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">print</span>(duration);</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">" r/min"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">all_loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    class_pwm();</span><br><span class="line">    read_speed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------------------MAIN FUNCTION-------------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">115200</span>); </span><br><span class="line"></span><br><span class="line">    <span class="comment">/*定时器不能设置两个相同的定时任务，会导致硬件看门狗复位*/</span></span><br><span class="line">    <span class="comment">//timer2.attach_ms(100, class_pwm);</span></span><br><span class="line">    <span class="comment">//timer2.attach_ms(100, read_speed);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*将上述两函数打包进一个函数内先后调用*/</span></span><br><span class="line">    timer1.attach_ms(<span class="number">200</span>, all_loop);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="6demo"><a class="markdownIt-Anchor" href="#6demo"></a> 6.Demo</h2><p>打开串口监视器，调节点位器控制风扇转速，输出如下：</p><p><img src="/f3fd3c5b/change_speed.png" alt></p><h2 id="7有关代码的疑问"><a class="markdownIt-Anchor" href="#7有关代码的疑问"></a> 7.有关代码的疑问</h2><h4 id="第35行analogread返回值范围"><a class="markdownIt-Anchor" href="#第35行analogread返回值范围"></a> 第35行，<code>analogRead()</code>，返回值范围</h4><p>esp8266内置10位ADC，所以该函数返回范围0-1023，对于Arduino开发板例如Uno，该函数返回0-255</p><h4 id="第56行sensorvalue-720为什么不是1023"><a class="markdownIt-Anchor" href="#第56行sensorvalue-720为什么不是1023"></a> 第56行，<code>sensorValue &lt; 720</code>，为什么不是1023？</h4><p>一般来说，12V风扇的最低转速不为0，例如猫头鹰的NF-12，其转速范围300-1500rpm，题主测试用的4010风扇，转速范围2400-128400左右，实测从A0读取的值大于720时，继续旋转电位器增大读数，风扇测速线的脉冲频率在40Hz左右不变，所以，可以认为在720时，风扇已经降至最低转速，继续减小esp8266输出的pwm占空比，并不会使风扇继续降速，如图：</p><p><img src="/f3fd3c5b/2400rpm++.png" alt></p><h4 id="若继续增大到1023会导致看门狗复位"><a class="markdownIt-Anchor" href="#若继续增大到1023会导致看门狗复位"></a> 若继续增大到1023，会导致看门狗复位</h4><p>众所周知，esp8266不能像Arduino那样长时间执行循环，实测当跳到1023左右时，风扇的测速线不再输出脉冲信号，因为我们在for循环中调用了多次<code>pulseIn()</code>，该函数默认等待超时时间为1秒，测速线停止输出脉冲，<code>pulseIn()</code>每次都等待1秒，超时触发看门狗，复位瞬间：</p><p><img src="/f3fd3c5b/wdt_reset.png" alt></p><h4 id="第17行read_times取多少合适"><a class="markdownIt-Anchor" href="#第17行read_times取多少合适"></a> 第17行，<code>read_times</code>取多少合适？</h4><p>😳首先，题主esp8266运行主频80Mhz，在160Mhz时<code>pulseIn()</code>的处理可能更快</p><p>read_times示例程序中取2，使第57行<code>for</code>迭代2次，每一次迭代调用了2次<code>pulseIn()</code>，那么循环一共调用了4次<code>pulseIn</code>，在<code>setup()</code>中，我们使用Ticker对象调用<code>attach_ms()</code>每200ms调用<code>read_speed()</code>，因此，多次调用<code>pulseIn()</code>总共等待的时间最多为200ms，题主使用的4010风扇最低脉冲频率为40Hz，即每1000ms产生40个脉冲周期，每个脉冲周期25ms，所以理想情况下，每25ms正好触发2次<code>pulseIn()</code></p><p><strong>然而，程序执行函数时处理也需要时间，实际上每25ms执行次数小于1：</strong></p><p>当我把 read_times取5时，40Hz时极易发生看门狗复位，此时每200ms <code>for</code>执行10次<code>pulseIn()</code>，也就是说10次耗费时间超过了200ms致使esp8266没有喘气的时间，这时定时器任务可以认为是一个死循环，说明每次执行<code>pulseIn()</code>的时间大于20ms，所以25ms只能触发约一次该函数的调用😮</p><p>另外，还要考虑 <code>class_pwm()</code>的处理耗时，题主认为read_times取3，即每200ms调用6次最坏情况总计150ms已经很极限，so，我取了2，每200ms调用4次最坏情况总计100ms</p><p>总之，这个值得根据风扇计算，对于猫头鹰NF-12，最低每秒5Hz，即每脉冲周期长达200ms，那么相应地延长<code>Ticker</code>的定时周期，以降低<code>read_speed()</code>的调用频率，也是不错的选择😃</p><h2 id="8参考文献"><a class="markdownIt-Anchor" href="#8参考文献"></a> 8.参考文献</h2><p><a href="https://www.cnblogs.com/kekeoutlook/p/8292444.html" target="_blank" rel="noopener">Arduino环境esp8266 pwm函数使用</a></p><p><a href="https://blog.csdn.net/qq_31077649/article/details/72581968" target="_blank" rel="noopener">pulseIn() 函数的使用方法-超声波测距</a></p><p><a href="http://club.gizwits.com/thread-3767-1-1.html" target="_blank" rel="noopener">esp8266 的看门狗有什么作用?</a></p><p><a href="https://www.arduino.cn/forum.php?mod=viewthread&amp;tid=83602&amp;mobile=no" target="_blank" rel="noopener">特别感谢Arduino论坛：skyhome 提供的思路</a></p>]]></content>
      
      
      <categories>
          
          <category> esp8266 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试例程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小娱C5_配置篇</title>
      <link href="/29c16836/"/>
      <url>/29c16836/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-更改ip地址可选"><a class="markdownIt-Anchor" href="#1-更改ip地址可选"></a> 1. 更改IP地址|可选</h2><p>检查你使用的网络环境，如果某些设备的IP地址与老毛子固件默认的IP地址<code>192.168.123.1</code>一样</p><p>请修改<code>192.168.123.1</code>中的<code>123</code>为0~254任意数值</p><p>*滑动到页面底部，点击<strong>应用本页面设置</strong></p><p><img src="/29c16836/IP-change.png" alt></p><h4 id="为什么修改"><a class="markdownIt-Anchor" href="#为什么修改"></a> 为什么修改？</h4><p><img src="/29c16836/IP-imge.png" alt></p><p>😄请参考：<a href="http://cn.linux.vbird.org/linux_server/0110network_basic_3.php#tcpip_network_netmask" target="_blank" rel="noopener"><strong>2.3.4 Netmask, 子网与 CIDR (Classless Interdomain Routing)</strong></a></p><a id="more"></a><h2 id="2-ssh登录小娱c5"><a class="markdownIt-Anchor" href="#2-ssh登录小娱c5"></a> 2. SSH登录小娱C5</h2><h4 id="什么是ssh"><a class="markdownIt-Anchor" href="#什么是ssh"></a> <a href="https://blog.csdn.net/u012308586/article/details/90599793" target="_blank" rel="noopener">什么是SSH?</a></h4><h4 id="确保ssh服务打开"><a class="markdownIt-Anchor" href="#确保ssh服务打开"></a> 确保SSH服务打开：</h4><p>*滑动到页面底部，点击<strong>应用本页面设置</strong></p><p><img src="/29c16836/ssh-enable.png" alt></p><h4 id="安装putty"><a class="markdownIt-Anchor" href="#安装putty"></a> 安装PuTTY：</h4><p><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="noopener">官方下载链接</a></p><p><a href="https://pan.baidu.com/s/1gsdQGDlTjmoJt6fQ5ZC9GA" target="_blank" rel="noopener">百度云链接</a> 提取码：<code>0qg9</code></p><p>安装之后，打开程序</p><h4 id="ssh登录"><a class="markdownIt-Anchor" href="#ssh登录"></a> SSH登录：</h4><p><code>Host Name</code>填入之前提到的<code>IP地址</code></p><p><code>Port(端口)</code>填写<code>22</code></p><p><code>Connection type(连接类型)</code>选择<code>SSH</code></p><p>可以在<code>Saved sessons</code>中为当前内容键入名字，点击<code>Save</code>保存在列表，下次打开程序时，直接选中已保存的项然后<code>Load</code></p><p><img src="/29c16836/putty-ssh.png" alt></p><p>点击<code>Open</code>启动SSH连接， 若一切正常，会弹出<strong>警告</strong>窗口，确认即可</p><p>若未更改初始账号，则用账号<code>admin</code> 密码<code>admin</code>登录</p><ul><li>输入账号，回车，</li><li>输入密码，密码内容不会显示，回车，</li><li>成功登录：</li></ul><p><img src="/29c16836/TIM%E6%88%AA%E5%9B%BE20190821214653.png" alt></p><h4 id="修改putty字体"><a class="markdownIt-Anchor" href="#修改putty字体"></a> 修改PuTTY字体：</h4><p>😥默认的字体若欣赏不来，可以在 Window -- Appearance -- Font settings -- Change... 中修改字体样式及大小</p><p><img src="/29c16836/putty-fonts.png" alt></p><p><img src="/29c16836/putty-fonts-%E9%9B%85%E9%BB%91.png" alt></p><p>😍<a href="https://github.com/yakumioto/YaHei-Consolas-Hybrid-1.12" target="_blank" rel="noopener">示例字体下载</a></p><h2 id="3-对磁盘进行分区规划参考"><a class="markdownIt-Anchor" href="#3-对磁盘进行分区规划参考"></a> 3. 对磁盘进行分区规划|<a href="http://koolshare.cn/thread-78681-1-38.html" target="_blank" rel="noopener">参考</a></h2><h4 id="查看磁盘"><a class="markdownIt-Anchor" href="#查看磁盘"></a> 查看磁盘</h4><p>拆开小娱C1的机壳，卸下硬盘托架，装上一块2.5寸SATA盘</p><p>SSH登录，输入命令<code>fdisk -l</code>，末尾可看见硬盘名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[RT-N56U_B1 /opt/home/admin]<span class="comment"># fdisk -l</span></span><br><span class="line">......</span><br><span class="line">Device  Boot StartCHS    EndCHS        StartLBA     EndLBA    Sectors  Size Id Type</span><br><span class="line">/dev/sda1    0,32,33     65,101,36         2048    1050623    1048576  512M 82 Linux swap</span><br><span class="line">/dev/sda2    65,101,37   257,80,63      1050624  234441647  233391024  111G 83 Linux</span><br></pre></td></tr></table></figure><p>这里两个/dev/sda*分区是我的一个已经格式化好的128GB硬盘</p><p>以下所有操作都以/dev/sda为例，<strong>请根据自身磁盘显示的名字变通</strong></p><h4 id="fdisk命令"><a class="markdownIt-Anchor" href="#fdisk命令"></a> fdisk命令</h4><p>fdisk是一个命令行磁盘程序，可以对MBR磁盘进行分区操作，具体使用可以借助搜索引擎</p><p>直接键入<code>fdisk</code>可查看用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">First sector (2048-1048575, default 2048): [RT-N56U_B1 /opt/home/admin]<span class="comment"># fdisk</span></span><br><span class="line">BusyBox v1.29.3 (2019-06-08 16:33:16 CST) multi-call binary.</span><br><span class="line"></span><br><span class="line">Usage: fdisk [-ul] [-C CYLINDERS] [-H HEADS] [-S SECTORS] [-b SSZ] DISK</span><br><span class="line"></span><br><span class="line">Change partition table</span><br><span class="line"></span><br><span class="line">        -u              Start and End are <span class="keyword">in</span> sectors (instead of cylinders)</span><br><span class="line">        -l              Show partition table <span class="keyword">for</span> each DISK, <span class="keyword">then</span> <span class="built_in">exit</span></span><br><span class="line">        -b 2048         (<span class="keyword">for</span> certain MO disks) use 2048-byte sectors</span><br><span class="line">        -C CYLINDERS    Set number of cylinders/heads/sectors</span><br><span class="line">        -H HEADS        Typically 255</span><br><span class="line">        -S SECTORS      Typically 63</span><br></pre></td></tr></table></figure><h4 id="详细操作步骤"><a class="markdownIt-Anchor" href="#详细操作步骤"></a> 详细操作步骤</h4><h5 id="0检查硬盘是否自动挂载"><a class="markdownIt-Anchor" href="#0检查硬盘是否自动挂载"></a> 0）检查硬盘是否自动挂载</h5><p>确保/dev/sda没有被系统自动挂载</p><p>如果硬盘为NTFS，FAST32格式，可能会被自动挂载，用umount /dev/sda命令卸载掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[RT-N56U_B1 /opt/home/admin]<span class="comment"># mount</span></span><br><span class="line">......</span><br><span class="line">[RT-N56U_B1 /opt/home/admin]<span class="comment"># df -h</span></span><br><span class="line">......</span><br><span class="line">[RT-N56U_B1 /opt/home/admin]<span class="comment"># umount /dev/sda</span></span><br></pre></td></tr></table></figure><h5 id="1创建swap分区"><a class="markdownIt-Anchor" href="#1创建swap分区"></a> 1）创建Swap分区</h5><ul><li><code>fdisk /dev/sda</code>，(若输入失败可按<code>Ctrl+C</code>退出fdisk)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[RT-N56U_B1 /opt/home/admin]<span class="comment"># fdisk /dev/sda</span></span><br><span class="line">Device contains neither a valid DOS partition table, nor Sun, SGI, OSF or GPT disklabel</span><br><span class="line">Building a new DOS disklabel. Changes will remain <span class="keyword">in</span> memory only,</span><br><span class="line">until you decide to write them. After that the previous content</span><br><span class="line">won<span class="string">'t be recoverable.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Command (m for help):</span></span><br></pre></td></tr></table></figure><ul><li><code>n</code> 创建一个新分区</li><li><code>p</code> 分区类型为主分区</li><li><code>1</code> 分区号为1，起始扇区为默认，直接回车或者1都可以</li><li>First sector：<code>不键入参数</code> 直接回车</li><li>Last sector：<code>+512M</code> 结束扇区，直接分配512M分区</li></ul><p>以上操作如下，每一次键入参数加上回车：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span></span><br><span class="line">   p   primary partition (1-4)</span><br><span class="line">   e   extended</span><br><span class="line">p</span><br><span class="line">Partition number (1-4): 1</span><br><span class="line">First sector (2048-1048575, default 2048): </span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector or +size&#123;,K,M,G,T&#125; (2048-1048574): +512M</span><br></pre></td></tr></table></figure><h5 id="2创建ext4分区"><a class="markdownIt-Anchor" href="#2创建ext4分区"></a> 2）创建ext4分区</h5><p>我的硬盘是1282G，其中512M做swap分区，剩下的做/opt分区，如果你有其他规划按照自己的方式来就可以。但是要注意MBR磁盘的分区规则，最多4个主分区，单盘不超过2TB，有超过4个分区数量的需求请分一个扩展分区然后再分逻辑分区，如果是大于2TB的磁盘就不要用fdisk这个工具了</p><p>😷接着以同样的方式创建第二个分区:</p><ul><li><code>n</code> 创建一个新分区</li><li><code>p</code> 分区类型为主分区</li><li><code>2</code> 分区号为2</li><li><code>*不键入参数</code> 结束扇区默认为磁盘末尾，直接回车</li></ul><p>以上操作如下，每一次键入参数加上回车：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span></span><br><span class="line">   p   primary partition (1-4)</span><br><span class="line">   e   extended</span><br><span class="line">p</span><br><span class="line">Partition number (1-4): 2</span><br><span class="line">First sector (2048-1048575, default 2048):</span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector or +size&#123;,K,M,G,T&#125; (2048-1048574, default 1048574):/*不键入参数直接回车*/</span><br><span class="line">Using default value 1048574</span><br></pre></td></tr></table></figure><h5 id="3查看待保存的分区信息"><a class="markdownIt-Anchor" href="#3查看待保存的分区信息"></a> 3）查看待保存的分区信息</h5><ul><li><code>p</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line">Disk /dev/sda1: 512 MB, 536870912 bytes, 1048576 sectors</span><br><span class="line">65 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Device    Boot StartCHS    EndCHS        StartLBA     EndLBA    Sectors  Size Id Type</span><br><span class="line">/dev/sda1    65,69,4     65,69,4        1048575    1048575          1   512 83 Linux</span><br><span class="line">/dev/sda1    0,32,33     65,69,3           2048    1048574    1046527  510M 83 Linux</span><br></pre></td></tr></table></figure><p>可以看到已经创建好两个分区，不过我们要把sda1作为交换分区使用所以还是需要做以下操作</p><h5 id="4sda1更改标签类型为swap"><a class="markdownIt-Anchor" href="#4sda1更改标签类型为swap"></a> 4）sda1更改标签类型为swap</h5><ul><li><code>t</code> 改变主分区的id</li><li><code>1</code> 选择分区号1</li><li><code>82</code> 更改为82</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): t</span><br><span class="line">Partition number (1-4): 1</span><br><span class="line">Hex code (<span class="built_in">type</span> L to list codes): 82</span><br><span class="line">Changed system <span class="built_in">type</span> of partition 1 to 82 (Linux swap)</span><br></pre></td></tr></table></figure><h5 id="5再次查看分区信息"><a class="markdownIt-Anchor" href="#5再次查看分区信息"></a> 5）再次查看分区信息</h5><ul><li><code>p</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line">Disk /dev/sda1: 512 MB, 536870912 bytes, 1048576 sectors</span><br><span class="line">65 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line"></span><br><span class="line">Device    Boot StartCHS    EndCHS        StartLBA     EndLBA    Sectors  Size Id Type</span><br><span class="line">/dev/sda1p1    65,69,4     65,69,4        1048575    1048575          1   512 82 Linux swap</span><br><span class="line">/dev/sda1p2    0,32,33     65,69,3           2048    1048574    1046527  510M 83 Linux</span><br></pre></td></tr></table></figure><h5 id="6保存修改并退出"><a class="markdownIt-Anchor" href="#6保存修改并退出"></a> 6）保存修改并退出</h5><ul><li><code>w</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br></pre></td></tr></table></figure><h5 id="7创建交换分区"><a class="markdownIt-Anchor" href="#7创建交换分区"></a> 7）创建交换分区</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[RT-N56U_B1 /opt/home/admin]<span class="comment"># mkswap /dev/sda1</span></span><br></pre></td></tr></table></figure><h5 id="8开启交换分区并查看swap"><a class="markdownIt-Anchor" href="#8开启交换分区并查看swap"></a> 8）开启交换分区并查看Swap</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[RT-N56U_B1 /opt/home/admin]<span class="comment"># swapon /dev/sda1</span></span><br><span class="line">[RT-N56U_B1 /opt/home/admin]<span class="comment"># free</span></span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:        450508      62940     387568          0       7388      20172</span><br><span class="line">-/+ buffers/cache:      35380     415128</span><br><span class="line">Swap:       524284          0     524284</span><br></pre></td></tr></table></figure><h5 id="9ext4分区格式化"><a class="markdownIt-Anchor" href="#9ext4分区格式化"></a> 9）ext4分区格式化</h5><p>老毛子中没有mkfs，只能用mke2fs创建分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[RT-N56U_B1 /opt/home/admin]<span class="comment"># mke2fs -t ext4 /dev/sda2</span></span><br></pre></td></tr></table></figure><h5 id="10重启路由查看devsda2挂载信息"><a class="markdownIt-Anchor" href="#10重启路由查看devsda2挂载信息"></a> 10）重启路由，查看/dev/sda2挂载信息</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[RT-N56U_B1 /opt/home/admin]<span class="comment"># mount</span></span><br></pre></td></tr></table></figure><h2 id="4-文件服务器内部网络"><a class="markdownIt-Anchor" href="#4-文件服务器内部网络"></a> 4. 文件服务器(内部网络)</h2><p>😳老毛子滋磁3种类别的文件服务器：</p><table><thead><tr><th>类别</th><th>平台</th></tr></thead><tbody><tr><td>ftp服务器（ftp/tftp）</td><td>任意平台</td></tr><tr><td>Samba服务器</td><td>windows，ios</td></tr><tr><td>NFS服务器</td><td>linux/unix</td></tr></tbody></table><p><strong>注意</strong>虽然samba传输文件对小娱C5内存占用较高(占180Mb左右)，但是可以在win10下看见拷贝速度，支持剪切，创建快捷方式等(ftp均不支持但消耗内存少)，为了演示，这里使用Samba</p><h4 id="开启samba服务"><a class="markdownIt-Anchor" href="#开启samba服务"></a> 开启Samba服务</h4><p>*工作组也可以为<strong>账号允许</strong>但是需要登录，为了方便，这里使用<strong>全部允许</strong></p><p>*滑动到页面底部，点击<strong>应用本页面设置</strong></p><p><img src="/29c16836/SMB.png" alt></p><p>开启win10系统的SMB功能：</p><p><img src="/29c16836/win-smb1.png" alt="win-smb1"></p><p><img src="/29c16836/win-smb2.png" alt="win-smb2"></p><p>点击确定，等待重启</p><p>在windows资源管理器 -- 网络 中会自动出现RT-N56_B1，点击即可看见AiDisk_a2(对应/dev/sda2)，再次点击即可看见sata盘内的文件，可以右键AiDisk_a2创建快捷方式在桌面然后固定到开始屏幕，或者固定到快速访问也行</p><p><img src="/29c16836/SMB=win.png" alt></p><h2 id="5aria2下载工具"><a class="markdownIt-Anchor" href="#5aria2下载工具"></a> 5.Aria2下载工具</h2><p>老毛子自带的Aria2是个轻量级下载程序，自带Web UI界面，占用内存小，支持的下载协议有http、https、bt、磁力链接，能运行于基本上所有常用平台，例如安卓、Windows、Linux等等，相比迅雷和百度云这类常用工具，占用资源少没有限速，是一款免费软件</p><h4 id="启用aria2"><a class="markdownIt-Anchor" href="#启用aria2"></a> 启用Aria2</h4><p>USB应用程序 -- 其他设置</p><p>*滑动到页面底部，点击<strong>应用本页面设置</strong></p><p><img src="/29c16836/Aria2.png" alt></p><h4 id="进入web-ui界面"><a class="markdownIt-Anchor" href="#进入web-ui界面"></a> 进入Web UI界面</h4><p>浏览器访问 <a href="http://192.168.124.1/ariaweb/index.html" target="_blank" rel="noopener">http://192.168.124.1/ariaweb/index.html</a></p><p><img src="/29c16836/Aria2-web.png" alt></p><h4 id="使用教程"><a class="markdownIt-Anchor" href="#使用教程"></a> <a href="https://www.jianshu.com/p/011504d11607" target="_blank" rel="noopener">使用教程</a></h4><h2 id="6-百度云"><a class="markdownIt-Anchor" href="#6-百度云"></a> 6. 百度云</h2><p>BaiduPCS-Go是纯命令行的程序，操作不太方便，推荐使用BaiduPCS-Web</p><p>BaiduPCS-Web基于BaiduPCS-Go开发，加入了Web UI界面，自带跨平台属性，支持Windows，Mac，Linux</p><p>官方介绍的操作步骤很详尽，在此不做太多复述</p><p><a href="https://github.com/liuzhuoling2011/baidupcs-web" target="_blank" rel="noopener">项目地址</a></p><p><a href="https://w.url.cn/s/AdjX09Y" target="_blank" rel="noopener">使用介绍</a></p><h4 id="使用注意"><a class="markdownIt-Anchor" href="#使用注意"></a> 使用注意</h4><p><img src="/29c16836/baiduPCS.png" alt></p><p>打开浏览器, 输入 <a href="http://localhost:5299" target="_blank" rel="noopener">http://localhost:5299</a> 查看效果的localhost是你路由器的IP地址，例如·我这里是<a href="http://192.168.124.1:5299" target="_blank" rel="noopener">http://192.168.124.1:5299</a></p><p>第一次下载可能成功，但百度云最近越来越严了</p><p>因为此软件不限速，所以很可能检测到你下载的速度不正常，</p><p>比如出现：</p><p><strong>user is not authorized, hitcode:123</strong></p><p><a href="https://github.com/liuzhuoling2011/baidupcs-web/issues/59" target="_blank" rel="noopener">问题详见 </a></p><p>😥建议开通钞级会员解决</p><p><img src="/29c16836/baiduPCS-error.png" alt></p><h2 id="6-酸酸乳"><a class="markdownIt-Anchor" href="#6-酸酸乳"></a> 6. 酸酸乳</h2><p>参考：<a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=192381" target="_blank" rel="noopener">H大老毛子固件搭建酸酸乳服务器及免流方法</a>1.固件中搭建SSR，需要安装OPT环境，请先完成本文的 <strong>7. 使用opkg在sata盘中安装程序</strong>2.OPT环境安装成功后，进入如下界面，如何配置一目了然</p><p>*酸酸乳配置页面，<strong>有两个应用本页面设置</strong>，一个是开关，另一个是节点配置的应用设置<img src="/29c16836/%E9%85%B8%E9%85%B8%E4%B9%B3.png" alt></p><h2 id="7-使用opkg在sata盘中安装程序"><a class="markdownIt-Anchor" href="#7-使用opkg在sata盘中安装程序"></a> 7. 使用opkg在sata盘中安装程序</h2><h4 id="打开opkg"><a class="markdownIt-Anchor" href="#打开opkg"></a> 打开opkg</h4><p>opt安装模式设置如下图</p><p><img src="/29c16836/opt-update.png" alt></p><p>*滑动到页面底部，点击<strong>应用本页面设置</strong></p><p>重启设备，等待自动安装</p><h4 id="opkg初始化"><a class="markdownIt-Anchor" href="#opkg初始化"></a> opkg初始化</h4><p><a href="https://openwrt.org/zh/docs/techref/opkg" target="_blank" rel="noopener">opkg是什么？</a></p><p>SSH登录后，执行<code>df -h</code>查看挂载的/dev/sda2的文件路径</p><p>若/opt目录也在/dev/sda2中前一步则opt路径设置成功，如下图：<img src="/29c16836/df-h.png" alt></p><p>若在硬盘上创建/opt路径失败，<a href="https://zhih.me/Padavan-entware/" target="_blank" rel="noopener">请参考</a></p><p>进入路径/opt，初始化并更新opkg</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[RT-N56U_B1 /opt/home/admin]<span class="comment"># cd /opt</span></span><br><span class="line"></span><br><span class="line">/*初始化opkg*/</span><br><span class="line">[RT-N56U_B1 /opt]<span class="comment"># opkg.sh</span></span><br><span class="line">......</span><br><span class="line">/*更新opkg源，可能需要fq*/</span><br><span class="line">[RT-N56U_B1 /opt]<span class="comment"># opkg update</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><h4 id="opkg测试"><a class="markdownIt-Anchor" href="#opkg测试"></a> opkg测试</h4><p><strong>查看opkg源的软件包列表</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[RT-N56U_B1 <span class="meta-keyword">/media/</span>AiDisk_a2]<span class="meta"># opkg list <span class="comment">/*请等待软件源列表嗖嗖上蹿*/</span></span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><h4 id="opkg安装nmon可选"><a class="markdownIt-Anchor" href="#opkg安装nmon可选"></a> opkg安装nmon|可选</h4><p>Nmon** 是一个可以监控当前系统性能的小工具，可以查看网络、CPU、内存和磁盘的使用情况</p><p>使用之前先用命令<code>opkg install nmon</code>进行安装</p><p>安装好后执行 <code>nmon</code> 命令即可打开：</p><p><img src="/29c16836/nmon-install.png" alt></p><p>打开之后，按 c 查看 CPU 信息，按 n 查看网络信息：</p><p><img src="/29c16836/nmon.png" alt></p><p>按<code>Ctrl+Z</code>退出</p><p>opkg还可以下载gcc，python3.7，go，vim-full等</p><h2 id="小娱c5_刷机篇"><a class="markdownIt-Anchor" href="#小娱c5_刷机篇"></a> <a href="https://oldgerman.github.io/0/">小娱C5_刷机篇</a></h2>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小娱C5_刷机篇</title>
      <link href="/0/"/>
      <url>/0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-配置概览"><a class="markdownIt-Anchor" href="#1-配置概览"></a> 1. 配置概览</h2><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">SOC</th><th style="text-align:center">2.4G</th><th style="text-align:center">5G</th><th style="text-align:center">RAM</th><th style="text-align:center">ROM</th><th style="text-align:center">USB</th><th>SATA</th><th style="text-align:center">LAN</th><th style="text-align:center">WAN</th><th style="text-align:center">￥</th></tr></thead><tbody><tr><td style="text-align:center"><strong>小娱C1/C5</strong></td><td style="text-align:center">MT7621A 880MHz</td><td style="text-align:center">N/A</td><td style="text-align:center">N/A</td><td style="text-align:center">512MB DDR3</td><td style="text-align:center">32M Flash</td><td style="text-align:center">1*3.0</td><td>1*2.0</td><td style="text-align:center">4*1Gbps</td><td style="text-align:center">1*1Gbps</td><td style="text-align:center">50~60</td></tr><tr><td style="text-align:center"><strong>Newifi 3</strong></td><td style="text-align:center">MT7621A 880MHz</td><td style="text-align:center">2*2 300Mbps</td><td style="text-align:center">2*2 867Mbps</td><td style="text-align:center">512MB DDR3</td><td style="text-align:center">2*32M Flash</td><td style="text-align:center">1*3.0</td><td>N/A</td><td style="text-align:center">4*1Gbps</td><td style="text-align:center">1*1Gbps</td><td style="text-align:center">119~150</td></tr><tr><td style="text-align:center"><strong>斐讯K2P</strong></td><td style="text-align:center">MT7621A 880MHz</td><td style="text-align:center">2*2 400Mbps</td><td style="text-align:center">2*2 867Mbps</td><td style="text-align:center">128MB DDR3</td><td style="text-align:center">16M Flash</td><td style="text-align:center">N/A</td><td>N/A</td><td style="text-align:center">4*1Gbps</td><td style="text-align:center">1*1Gbps</td><td style="text-align:center">210~250</td></tr><tr><td style="text-align:center"><strong>小米Pro</strong></td><td style="text-align:center">MT7621A 880MHz</td><td style="text-align:center">4*4 800Mbps</td><td style="text-align:center">4*4 1733Mbps</td><td style="text-align:center">512MB DDR3</td><td style="text-align:center">256M Nand</td><td style="text-align:center">1*3.0</td><td>N/A</td><td style="text-align:center">3*1Gbps</td><td style="text-align:center">1*1Gbps</td><td style="text-align:center">499</td></tr></tbody></table><a id="more"></a><h2 id="2-资源包"><a class="markdownIt-Anchor" href="#2-资源包"></a> 2. 资源包</h2><p>百度云链接：<a href="https://pan.baidu.com/s/1-KpmX9guIDLhQYw00e4vwQ" target="_blank" rel="noopener">XiaoYu_C5_Breed.zip + H大老毛子 + 其他可用固件</a> 提取码：<code>5hjd</code></p><h2 id="3-原厂web控制台"><a class="markdownIt-Anchor" href="#3-原厂web控制台"></a> 3. 原厂Web控制台</h2><p>打开浏览器，输入机器外壳背面的 IP地址：<code>192.168.188.1</code> 密码：<code>admin</code></p><p><img src="/0/IMG_5324.jpg" alt></p><h4 id="原厂控制台界面"><a class="markdownIt-Anchor" href="#原厂控制台界面"></a> 原厂控制台界面：</h4><p><img src="/0/Inked%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(147)_LI.jpg" alt></p><p>看一看，SATA硬盘可以识别，但貌似ssh打不开，所以没啥卵用：</p><p><img src="/0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(148).png" alt></p><h2 id="4-刷入breed"><a class="markdownIt-Anchor" href="#4-刷入breed"></a> 4. 刷入Breed</h2><h4 id="beed是啥"><a class="markdownIt-Anchor" href="#beed是啥"></a> Beed是啥？</h4><p>breed由恩山论坛大神<a href="https://www.right.com.cn/forum/space-uid-200302.html" target="_blank" rel="noopener">HackPascal</a>开发，breed是一种Bootloader，类似于电脑的BIOS，核心功能是引导操作系统，常见的uboot启动是单线程的，而breed是多线程的，难度系数比uboot大得多，增加了调度器，已经具备小型操作系统的核心</p><h4 id="莫大佬文章的源地址"><a class="markdownIt-Anchor" href="#莫大佬文章的源地址"></a> 莫大佬文章的源地址：</h4><p>一键刷入BREED教程：<a href="http://www.nas1688.com/166.html" target="_blank" rel="noopener">已失效</a></p><h4 id="在此重新复述刷入方法"><a class="markdownIt-Anchor" href="#在此重新复述刷入方法"></a> 在此重新复述刷入方法：</h4><ul><li>上电启动，使用网线连接电脑和小娱路由器C5的任意Lan口</li><li>解压上面的度云文件：<code>XiaoYu_C5_Breed.zip</code> 解压密码：<code>www.nas1688.com</code></li><li>win10下直接该程序运行不行，需要右键 <strong>以管理员模式运行该程序</strong>，才能刷入成功不死breed等待电脑分配到小娱的IP，可以访问<code>192.168.188.1</code>就行</li><li>将网关IP填入工具中，默认密码admin，点击刷入即可</li></ul><h4 id="刷入成功"><a class="markdownIt-Anchor" href="#刷入成功"></a> 刷入成功：</h4><p><img src="/0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(149).png" alt></p><p>根据提示，先拔掉电源，等待下一步操作</p><h2 id="5-重启到breed-web控制台"><a class="markdownIt-Anchor" href="#5-重启到breed-web控制台"></a> 5. 重启到Breed Web控制台</h2><h4 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项：</h4><ul><li>刷第三方固件一定要进入Breed界面刷入</li><li>Breed界面进入方法:a. 拔掉电源b. 按住Reset键不放c. 接通电源d. 6秒后松开Reset键e. 浏览器访问：<code>192.168.1.1</code>进入 Breed Web控制台</li></ul><p><img src="/0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(150).png" alt></p><h2 id="6-备份固件可选"><a class="markdownIt-Anchor" href="#6-备份固件可选"></a> 6. 备份固件|可选</h2><p>将EEPROM，编程器固件备份，保存生成的文件，若以后想刷回原厂固件，在Breed Web恢复即可</p><p><img src="/0/Inked%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(151)_LI.jpg" alt></p><h2 id="7-刷入h大老毛子"><a class="markdownIt-Anchor" href="#7-刷入h大老毛子"></a> 7. 刷入H大老毛子</h2><h4 id="解压固件"><a class="markdownIt-Anchor" href="#解压固件"></a> 解压固件：</h4><p>解压上面的度云文件：<code>小娱同学可用固件.rar</code></p><p>再次解压前一次解压得到的：<code>MT7621_7603_7612_512M_3.4.3.9-099.rar</code></p><p>得到：<code>MT7621_7603_7612_512M_3.4.3.9-099.trx</code></p><p><img src="/0/TIM%E6%88%AA%E5%9B%BE20190821154510.png" alt></p><h4 id="上传固件"><a class="markdownIt-Anchor" href="#上传固件"></a> 上传固件：</h4><p>在Breed Web控制台 - - 固件更新</p><ul><li>勾选固件</li><li>选择文件<code>MT7621_7603_7612_512M_3.4.3.9-099.trx</code>上传</li></ul><p><img src="/0/TIM%E6%88%AA%E5%9B%BE20190821154047.png" alt></p><h4 id="等待刷入成功"><a class="markdownIt-Anchor" href="#等待刷入成功"></a> 等待刷入成功：</h4><p><img src="/0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(152).png" alt></p><p>刷入时观察路由面板指示灯，若全部熄灭了再亮时说明开始重启，这之后等待一两分钟载入老毛子系统</p><h2 id="8-重启到-h大老毛子-web控制台"><a class="markdownIt-Anchor" href="#8-重启到-h大老毛子-web控制台"></a> 8. 重启到 H大老毛子 Web控制台</h2><p>上一步重启完成后，浏览器访问：<code>192.168.123.1</code></p><p>初始账号：<code>admin</code></p><p>初始密码：<code>admin</code></p><p>因为小娱C5不带无线，建议关闭2.4G，5G 以节约性能：</p><p><img src="/0/TIM%E6%88%AA%E5%9B%BE20190821160818.png" alt></p><p>至此，刷入完毕</p><h3 id="小娱c5_配置篇"><a class="markdownIt-Anchor" href="#小娱c5_配置篇"></a> <a href="https://oldgerman.github.io/29c16836/">小娱C5_配置篇</a></h3>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo 如何上传本地图片</title>
      <link href="/eeea93b8/"/>
      <url>/eeea93b8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="1-修改站点配置文件"><a class="markdownIt-Anchor" href="#1-修改站点配置文件"></a> 1. 修改站点配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/* 路径 /hexo/_config.yml</span><br><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这之后，当你 hexo n XXX 时，会自动在 /hexo/source/_post 下生成一个 XXX 文件夹；</p><p>我们将需要插入 XXX 博文的图片 Test.jpg 放到此文件夹，稍后用Typora编辑博文时直接拖入即可</p><a id="more"></a><h3 id="2-安装路径转换插件踩坑"><a class="markdownIt-Anchor" href="#2-安装路径转换插件踩坑"></a> 2. 安装路径转换插件|踩坑</h3><h4 id="注意一定要下"><a class="markdownIt-Anchor" href="#注意一定要下"></a> 注意，一定要下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br><span class="line">......</span><br><span class="line">+ hexo-asset-image@0.0.5</span><br></pre></td></tr></table></figure><p>正确生成为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">INFO  Start processing</span><br><span class="line">update link as:--&gt;/2019/08/20/<span class="built_in">test</span>/Test.jpg</span><br><span class="line">update link as:--&gt;/2019/08/20/<span class="built_in">test</span>/Test.jpg</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>如有生成绝对路径不完整，<a href="https://github.com/xcodebuild/hexo-asset-image/issues/13" target="_blank" rel="noopener">请参考</a></p><blockquote><p><strong>2024/0327更新：</strong></p><p>在hexo的<code>_config.yml</code>配置文件中将链接优化后，文章的链接不在是默认是日期+时间+标题，而是一段hex码，这个配置如下修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="comment">#hexo链接优化https://leflacon.github.io/a2c7bf23/</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> permalink: :abbrlink/</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> abbrlink:</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   alg: crc32  <span class="comment"># 算法：crc16(default) and crc32</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   rep: hex    <span class="comment"># 进制：dec(default) and hex</span></span></span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>然后 <code>hexo g</code>，生成文章，终端里显示他图片确实是文章的hex码+图片名，但<code>hexo s</code>在本地网页无法图片，图片的路径还是默认文章链接配置的日期时间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 理论上本地hexo文章图片的链接</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> http://localhost:4000/88b2c11b/图片名.jpg</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 实际上的：</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> http://localhost:4000/2019/08/20/<span class="built_in">test</span>/图片名.jpg</span></span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>这个情况只要执行 <code>hexo clean</code> 后重新生成就行</p></blockquote><h4 id="注意不要下"><a class="markdownIt-Anchor" href="#注意不要下"></a> 注意，不要下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br><span class="line">......</span><br><span class="line">+ hexo-asset-image@1.0.0</span><br></pre></td></tr></table></figure><p>hexo-asset-image@1.0.0版本根本无法在 hexo g 生成的 *.html 文件中生成正确的 img src 的路径</p><p>错误生成如下，无法载入图片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">INFO  Start processing</span><br><span class="line">update link as:--&gt;/.com//Test.jpg</span><br><span class="line">update link as:--&gt;/.com//Test.jpg</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h3 id="3-安装typora"><a class="markdownIt-Anchor" href="#3-安装typora"></a> 3. 安装Typora</h3><p>将Typora设置为*.md文件的默认编辑器</p><p>进入 /hexo/source/_post</p><p>打开刚才创建的 <a href="http://XXX.md" target="_blank" rel="noopener">XXX.md</a> 文件</p><p>将 /hexo/source/_post/XXX/Test.jpg 直接拖拽到 Typora 编辑界面</p><p>会自动连带图片生成：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Test</span>](<span class="link">D:\ODG blog\oldgerman.github.io\source\_posts\hexo如何上传本地图片\Test.jpg</span>)</span><br></pre></td></tr></table></figure><p>将就绝对路径删除部分，仅保留：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Test-Image</span>](<span class="link">\hexo如何上传本地图片\Test.jpg</span>)</span><br></pre></td></tr></table></figure><p>并将两个 \ 修改成：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Test-Image</span>](<span class="link">/hexo如何上传本地图片/Test.jpg</span>)</span><br></pre></td></tr></table></figure><p>若挪开选中图片的鼠标，自动隐藏引用代码，仅将图片显示：</p><p><img src="/eeea93b8/Test.jpg" alt="Test-Image"></p><h3 id="4-本地测试上传到github"><a class="markdownIt-Anchor" href="#4-本地测试上传到github"></a> 4. 本地测试+上传到GitHub</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><p>至此，测试完毕！</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小米平板1-ubuntu系统_刷机篇</title>
      <link href="/561a0aca/"/>
      <url>/561a0aca/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><s>半年前在学习C语言语法，无奈时间较零散，砖头书不能随身带，就用se看电子书，渐渐想随时敲敲代码跑跑程序（光看书实在是太无聊了），与此同时，也在鼓捣linux（其实那时手头连一个运行linux的电脑都没），于是就开始选设备，从树梅派挑到nexus7再到chromebook，额。。。买东西真累</s></p><p>想起手头有块闲置的一代小米平板，先是用termux凑合，再是安装Kali，用ssh登录本地端口，在安卓环境并行运行linux，emmm，没有GUI的linux真难受。。。最后求助万能的google，找到4PDA论坛mocha大神从英伟达tegra-k1开发板上移植的ubuntu14.04<a href="https://4pda.ru/forum/index.php?showtopic=821143" target="_blank" rel="noopener">项目地址</a>，成功刷入小米平板！</p><a id="more"></a><p><img src="/561a0aca/1.jpg" alt="刷入成功效果"></p><h2 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h2><h3 id="解bl琐"><a class="markdownIt-Anchor" href="#解bl琐"></a> 解BL琐</h3><p>想要刷入第三方ROM，先要刷入第三方rec；想要刷入第三方rec，先要解Bootloader琐。按照官方操作即可：<a href="http://www.miui.com/unlock/index.html" target="_blank" rel="noopener">解锁小米手机</a></p><h3 id="刷twrp和multirom"><a class="markdownIt-Anchor" href="#刷twrp和multirom"></a> 刷TWRP和multirom</h3><p>度盘  <a href="https://pan.baidu.com/s/18b-AI4UijXQeEea_Zrd09g" target="_blank" rel="noopener">链接：在文件夹：recovery工具</a> 提取码: qc15</p><p>解BL琐后，将上述链接下载的所有文件(不用解压）放在平板根目录，开机按“音量+”和电源键，进入MIUI原厂recovery,刷入<code>miuies_TWRP_MiPad_2.7.1_signed.zip</code></p><p>待刷入完成，重启到recovery，进入TWRP-v2.7.1界面，该recovery画面不能填充整个屏幕，稍后咱刷入<code>multirom_TWRP_3.1.1-0.img</code>即可解决。</p><p>*注意: v3.0.3必须由v2.7.1升级，不能一次刷入</p><p>在TWRP-v2.7.1界面，点击&quot;Install&quot;，进入文件目录，找到sd_card文件夹，点击进入，此文件夹即是平板内部flash储存的根目录。找到<code>boot-kexec-miuiSmoke6.12.22.zip</code>，点击此文件，右滑刷入，待刷入完成。再找一找<code>multirom_TWRP_3.1.1-0.img</code>发现并没有，点击右下脚的zip方框，选择img，再找下，即可找到，点击此文件，右滑刷入，待刷入完成，点击“reboot to system”，重启到系统</p><p>若一切正常，开机会出现multirom多重引导，点击倒计时即可手动选择启动系统，点击第一个系统，即可正常进入当前系统。</p><p><img src="/561a0aca/2.jpg" alt="刷入lineageOS和ubuntu后的multirom开机引导界面"></p><p>若仅想用MultiRom功能，仅到此步即可。</p><h3 id="阴差阳错"><a class="markdownIt-Anchor" href="#阴差阳错"></a> 阴差阳错</h3><p>博主之前到这一步时，还保留了MIUI系统，刷ubuntu系统之前只进行了三清，重启进入ubuntu系统，一开始是正常的linux启动4只小企鹅（对应tegra-k1四个Cortex-A15），一条条messages滚过后，就悲剧了，卡在mount: mounting不动了，重刷了几次都是如此！4PDA论坛也有一个会员遇到同样的问题，然而大佬们并不鸟他...</p><p><img src="/561a0aca/4.jpg" alt="linux开机卡住的地方"></p><p>郁闷了几天，准备放弃，心想要是Linux整不了就刷个CN系统算了，查了查google，发现米板1可刷LineageOS-14，按照论坛的教程，先四清，刷lineageOS之前，需要合并MIUI的两个system分区成一个，合并分区后，成功刷入，配置了一下google全家桶（PS：lineageOS 14.1 居然该死的甜美）</p><p>emmm...没有用上原生linux还是不爽，再试试如何？又刷了一次ubuntu，重启，居然跳过之前卡住的mount: mounting的部分，成功进入ubuntu桌面，触屏可用，OTG插上键鼠可用，OK搞定</p><h3 id="mipad-mocha-合并分区教程有删改"><a class="markdownIt-Anchor" href="#mipad-mocha-合并分区教程有删改"></a> MiPad Mocha 合并分区教程/有删改</h3><p><a href="http://www.miui.com/thread-7412054-1-1.html" target="_blank" rel="noopener">论坛原文</a></p><p>将MIUI系统分区合并至1.2GB的具体步骤：</p><ol><li><p>下载 <code>Repartition_MI_Pad_1_2GB_zardMi3.zip</code> 和 <code>Repartition_Stock-Partition_MI_Pad_zardMi3.zip</code> (在本段<a href="http://www.miui.com/thread-7412054-1-1.html" target="_blank" rel="noopener">论坛原文</a>度云链接的分区工具文件夹里，或度盘  <a href="https://pan.baidu.com/s/18b-AI4UijXQeEea_Zrd09g" target="_blank" rel="noopener">链接：在文件夹：分区工具</a> 提取码: qc15）</p></li><li><p>拷入你的小米平板根目录中</p></li><li><p>清除Cache,Data,System和Dalvik Cache的数据。（重启到twrp选择&quot;wipe&quot;,勾选以下项后，滑动条，实现四清）<img src="/561a0aca/3.jpg" alt="multirom_twrp的四清勾选"></p></li><li><p>刷入<code>Repartition_MI_Pad_1_2GB_zardMi3.zip</code></p></li><li><p>将 lineageOS-14刷入,若你想用google服务框架，在1步下载Gapps在此步刷入即可</p></li><li><p>重启至LineageOS系统</p></li><li><p>你可以使用Google PlayStore里的DiskInfo，System Partitions，或者Titanium Backup来确认你的系统一分区大小。（总大小是1.21GB，剩余空间是688MB)                   ##译者：这里我的数据是总大小1.29GB，剩余空间是733MB</p></li></ol><h2 id="刷入linux4tegrar241mrom"><a class="markdownIt-Anchor" href="#刷入linux4tegrar241mrom"></a> 刷入Linux4TegraR241.mrom</h2><h3 id="multirom"><a class="markdownIt-Anchor" href="#multirom"></a> MultiRom</h3><p>下载4PDA项目原文置顶链接的Google盘的&quot;02.05.2017 L4T R24.1&quot;，好像这个链接失效了，我传了一份到度盘  <a href="https://pan.baidu.com/s/18b-AI4UijXQeEea_Zrd09g" target="_blank" rel="noopener">链接：在文件夹：L4T_R241</a> 提取码: qc15</p><p>*注意：不要下03.12.2018版本的，这个版本我刷入过，触摸和OTG都不能用，开机只启动一个核心</p><p>拷贝该文件到平版根目录</p><p>重启到TWRP，点击右上角三条横线，进入整合到TWRP的MultiRom刷机界面，点击&quot;add&quot;</p><p>选择内部flash储存，如图：</p><p><img src="/561a0aca/11.jpg" alt></p><p>刷入，需要等待10分钟左右，成功刷入如图：</p><p><img src="/561a0aca/5.jpg" alt></p><p>重启，点击multirom多重引导界面出现的第二个系统即可启动linux：</p><p><img src="/561a0aca/6.jpg" alt="linux开机中"></p><p>等待进入ubuntu桌面即可，赶紧用OTG连接键鼠配置一下!</p><p><img src="/561a0aca/0.png" alt="成功进入Gnome"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
